
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "checks_gallery/tabular/integrity/plot_mixed_nulls.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_checks_gallery_tabular_integrity_plot_mixed_nulls.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_checks_gallery_tabular_integrity_plot_mixed_nulls.py:


Mixed Nulls
***********

.. GENERATED FROM PYTHON SOURCE LINES 8-13

.. code-block:: default


    import pandas as pd

    from deepchecks.tabular.checks import MixedNulls








.. GENERATED FROM PYTHON SOURCE LINES 14-19

.. code-block:: default


    data = {'col1': ['sog', '1', 'cat', None, None]}
    dataframe = pd.DataFrame(data=data)
    MixedNulls().run(dataframe)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js"
        integrity="sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg=="
        crossorigin="anonymous"
        referrerpolicy="no-referrer">
    </script>

    <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
    <script type="text/javascript">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>
    <script type="text/javascript">
        if (typeof require !== 'undefined') {
            require.undef("plotly");
            requirejs.config({
                paths: {'plotly': ['https://cdn.plot.ly/plotly-2.8.3.min']}
            });
            require(
                ['plotly'],
                function(Plotly) {
                    window._Plotly = Plotly;
                    window.Plotly = Plotly;
                    console.log('Loaded plotly successfully');
                },
                function() {console.log('Failed to load plotly')}
            );
        } else {
            console.log('requirejs is not present');
        }
    </script>
    <h4><b>Mixed Nulls</b></h4><p>Search for various types of null values, including string representations of null.</p><h5><b>Additional Outputs</b></h5><p><b>&#x2713;</b>Nothing to display</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 20-24

.. code-block:: default


    data = {'col1': ['nan', None, 'null', 'Nan', '1', 'cat'], 'col2':['', '', 'None', 'a', 'b', 'c'], 'col3': [1,2,3,4,5,6]}
    dataframe = pd.DataFrame(data=data)
    MixedNulls().run(dataframe)





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js"
        integrity="sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg=="
        crossorigin="anonymous"
        referrerpolicy="no-referrer">
    </script>

    <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
    <script type="text/javascript">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>
    <script type="text/javascript">
        if (typeof require !== 'undefined') {
            require.undef("plotly");
            requirejs.config({
                paths: {'plotly': ['https://cdn.plot.ly/plotly-2.8.3.min']}
            });
            require(
                ['plotly'],
                function(Plotly) {
                    window._Plotly = Plotly;
                    window.Plotly = Plotly;
                    console.log('Loaded plotly successfully');
                },
                function() {console.log('Failed to load plotly')}
            );
        } else {
            console.log('requirejs is not present');
        }
    </script>
    <h4><b>Mixed Nulls</b></h4><p>Search for various types of null values, including string representations of null.</p><h5><b>Additional Outputs</b></h5><div>* showing only the top 10 columns, you can change it using n_top_columns param</div><style type="text/css">
    #T_11456 table {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_11456 thead {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_11456 tbody {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_11456 th {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_11456 td {
      text-align: left;
      white-space: pre-wrap;
    }
    </style>
    <table id="T_11456">
      <thead>
        <tr>
          <th class="blank" >&nbsp;</th>
          <th class="blank level0" >&nbsp;</th>
          <th id="T_11456_level0_col0" class="col_heading level0 col0" >Count</th>
          <th id="T_11456_level0_col1" class="col_heading level0 col1" >Percent of data</th>
        </tr>
        <tr>
          <th class="index_name level0" >Column Name</th>
          <th class="index_name level1" >Value</th>
          <th class="blank col0" >&nbsp;</th>
          <th class="blank col1" >&nbsp;</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th id="T_11456_level0_row0" class="row_heading level0 row0" rowspan="4">col1</th>
          <th id="T_11456_level1_row0" class="row_heading level1 row0" >nan</th>
          <td id="T_11456_row0_col0" class="data row0 col0" >1</td>
          <td id="T_11456_row0_col1" class="data row0 col1" >16.67%</td>
        </tr>
        <tr>
          <th id="T_11456_level1_row1" class="row_heading level1 row1" >nan</th>
          <td id="T_11456_row1_col0" class="data row1 col0" >1</td>
          <td id="T_11456_row1_col1" class="data row1 col1" >16.67%</td>
        </tr>
        <tr>
          <th id="T_11456_level1_row2" class="row_heading level1 row2" >null</th>
          <td id="T_11456_row2_col0" class="data row2 col0" >1</td>
          <td id="T_11456_row2_col1" class="data row2 col1" >16.67%</td>
        </tr>
        <tr>
          <th id="T_11456_level1_row3" class="row_heading level1 row3" >Nan</th>
          <td id="T_11456_row3_col0" class="data row3 col0" >1</td>
          <td id="T_11456_row3_col1" class="data row3 col1" >16.67%</td>
        </tr>
        <tr>
          <th id="T_11456_level0_row4" class="row_heading level0 row4" rowspan="2">col2</th>
          <th id="T_11456_level1_row4" class="row_heading level1 row4" ></th>
          <td id="T_11456_row4_col0" class="data row4 col0" >2</td>
          <td id="T_11456_row4_col1" class="data row4 col1" >33.33%</td>
        </tr>
        <tr>
          <th id="T_11456_level1_row5" class="row_heading level1 row5" >None</th>
          <td id="T_11456_row5_col0" class="data row5 col0" >1</td>
          <td id="T_11456_row5_col1" class="data row5 col1" >16.67%</td>
        </tr>
      </tbody>
    </table>

    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.015 seconds)


.. _sphx_glr_download_checks_gallery_tabular_integrity_plot_mixed_nulls.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_mixed_nulls.py <plot_mixed_nulls.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_mixed_nulls.ipynb <plot_mixed_nulls.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
