
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "checks_gallery/tabular/integrity/plot_special_chars.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_checks_gallery_tabular_integrity_plot_special_chars.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_checks_gallery_tabular_integrity_plot_special_chars.py:


Special Characters
******************

.. GENERATED FROM PYTHON SOURCE LINES 8-13

.. code-block:: default


    import pandas as pd

    from deepchecks.tabular.checks import SpecialCharacters








.. GENERATED FROM PYTHON SOURCE LINES 14-34

.. code-block:: default


    data = {'col1': [' ', '!', '"', '#', '$', '%', '&', '\'','(', ')',
                     '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', 
                     '>', '?', '@', '[', ']', '\\', '^', '_', '`', '{',
                     '}', '|', '~', '\n'],
            'col2':['v', 'v', 'v', 'v4', 'v5', 'v6', 'v7', 'v8','v9','v10', 
                     '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', 
                     '>', '?', '@', '[', ']', '\\', '^', '_', '`', '{',
                     '}', '|', '~', '\n'],
            'col3': [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,11,1,'???#',1,1,1,1,1,1,1,1,1,1,1],
            'col4': [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,11,1,1,1,1,1,1,1,1,1,1,1,1,1],
            'col5': ['valid1','valid2','valid3','valid4','valid5','valid6','valid7',
                     'valid8','valid9','valid10','valid11','valid12',
                    'valid13','valid14','inval!d15','valid16','valid17','valid18',
                     'valid19','valid20','valid21','valid22','valid23','valid24','valid25',
                    'valid26', 'valid27','valid28','valid29','valid30','valid31','32','33','34']}


    dataframe = pd.DataFrame(data=data)
    SpecialCharacters().run(dataframe)





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js"
        integrity="sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg=="
        crossorigin="anonymous"
        referrerpolicy="no-referrer">
    </script>

    <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
    <script type="text/javascript">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>
    <script type="text/javascript">
        if (typeof require !== 'undefined') {
            require.undef("plotly");
            requirejs.config({
                paths: {'plotly': ['https://cdn.plot.ly/plotly-2.8.3.min']}
            });
            require(
                ['plotly'],
                function(Plotly) {
                    window._Plotly = Plotly;
                    window.Plotly = Plotly;
                    console.log('Loaded plotly successfully');
                },
                function() {console.log('Failed to load plotly')}
            );
        } else {
            console.log('requirejs is not present');
        }
    </script>
    <h4><b>Special Characters</b></h4><p>Search in column[s] for values that contains only special characters.</p><h5><b>Additional Outputs</b></h5><div>* showing only the top 10 columns, you can change it using n_top_columns param</div><style type="text/css">
    #T_cc5ac table {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_cc5ac thead {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_cc5ac tbody {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_cc5ac th {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_cc5ac td {
      text-align: left;
      white-space: pre-wrap;
    }
    </style>
    <table id="T_cc5ac">
      <thead>
        <tr>
          <th class="blank level0" >&nbsp;</th>
          <th id="T_cc5ac_level0_col0" class="col_heading level0 col0" >% Special-Only Samples</th>
          <th id="T_cc5ac_level0_col1" class="col_heading level0 col1" >Most Common Special-Only Samples</th>
        </tr>
        <tr>
          <th class="index_name level0" >Column Name</th>
          <th class="blank col0" >&nbsp;</th>
          <th class="blank col1" >&nbsp;</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th id="T_cc5ac_level0_row0" class="row_heading level0 row0" >col1</th>
          <td id="T_cc5ac_row0_col0" class="data row0 col0" >100%</td>
          <td id="T_cc5ac_row0_col1" class="data row0 col1" >[' ', '!']</td>
        </tr>
        <tr>
          <th id="T_cc5ac_level0_row1" class="row_heading level0 row1" >col2</th>
          <td id="T_cc5ac_row1_col0" class="data row1 col0" >70.59%</td>
          <td id="T_cc5ac_row1_col1" class="data row1 col1" >['*', '+']</td>
        </tr>
        <tr>
          <th id="T_cc5ac_level0_row2" class="row_heading level0 row2" >col3</th>
          <td id="T_cc5ac_row2_col0" class="data row2 col0" >2.94%</td>
          <td id="T_cc5ac_row2_col1" class="data row2 col1" >['???#']</td>
        </tr>
      </tbody>
    </table>

    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.011 seconds)


.. _sphx_glr_download_checks_gallery_tabular_integrity_plot_special_chars.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_special_chars.py <plot_special_chars.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_special_chars.ipynb <plot_special_chars.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
