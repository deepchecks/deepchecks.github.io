
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "checks_gallery/tabular/integrity/plot_string_length_out_of_bounds.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_checks_gallery_tabular_integrity_plot_string_length_out_of_bounds.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_checks_gallery_tabular_integrity_plot_string_length_out_of_bounds.py:


String Length Out Of Bounds
***************************

.. GENERATED FROM PYTHON SOURCE LINES 8-14

.. code-block:: default


    import pandas as pd

    from deepchecks.tabular.checks.integrity.string_length_out_of_bounds import \
        StringLengthOutOfBounds








.. GENERATED FROM PYTHON SOURCE LINES 15-28

.. code-block:: default


    col1 = ["aaaaa33", "aaaaaaa33"]*40
    col1.append("a")
    col1.append("aaaaaadsfasdfasdf")

    col2 = ["b", "abc"]*41

    col3 = ["a"]*80
    col3.append("a"*100)
    col3.append("a"*200)
    # col1 and col3 contrains outliers, col2 does not
    df = pd.DataFrame({"col1":col1, "col2": col2, "col3": col3 })








.. GENERATED FROM PYTHON SOURCE LINES 29-32

.. code-block:: default


    StringLengthOutOfBounds(min_unique_value_ratio=0.01).run(df)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js"
        integrity="sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg=="
        crossorigin="anonymous"
        referrerpolicy="no-referrer">
    </script>

    <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
    <script type="text/javascript">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>
    <script type="text/javascript">
        if (typeof require !== 'undefined') {
            require.undef("plotly");
            requirejs.config({
                paths: {'plotly': ['https://cdn.plot.ly/plotly-2.8.3.min']}
            });
            require(
                ['plotly'],
                function(Plotly) {
                    window._Plotly = Plotly;
                    window.Plotly = Plotly;
                    console.log('Loaded plotly successfully');
                },
                function() {console.log('Failed to load plotly')}
            );
        } else {
            console.log('requirejs is not present');
        }
    </script>
    <h4><b>String Length Out Of Bounds</b></h4><p>Detect strings with length that is much longer/shorter than the identified "normal" string lengths.</p><h5><b>Additional Outputs</b></h5><div>* showing only the top 10 columns, you can change it using n_top_columns param</div><style type="text/css">
    #T_e7960 table {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_e7960 thead {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_e7960 tbody {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_e7960 th {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_e7960 td {
      text-align: left;
      white-space: pre-wrap;
    }
    </style>
    <table id="T_e7960">
      <thead>
        <tr>
          <th class="blank" >&nbsp;</th>
          <th class="blank" >&nbsp;</th>
          <th class="blank level0" >&nbsp;</th>
          <th id="T_e7960_level0_col0" class="col_heading level0 col0" >Number of Outlier Samples</th>
          <th id="T_e7960_level0_col1" class="col_heading level0 col1" >Example Samples</th>
        </tr>
        <tr>
          <th class="index_name level0" >Column Name</th>
          <th class="index_name level1" >Range of Detected Normal String Lengths</th>
          <th class="index_name level2" >Range of Detected Outlier String Lengths</th>
          <th class="blank col0" >&nbsp;</th>
          <th class="blank col1" >&nbsp;</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th id="T_e7960_level0_row0" class="row_heading level0 row0" rowspan="2">col1</th>
          <th id="T_e7960_level1_row0" class="row_heading level1 row0" rowspan="2">7 - 9</th>
          <th id="T_e7960_level2_row0" class="row_heading level2 row0" >1 - 1</th>
          <td id="T_e7960_row0_col0" class="data row0 col0" >1</td>
          <td id="T_e7960_row0_col1" class="data row0 col1" >['a']</td>
        </tr>
        <tr>
          <th id="T_e7960_level2_row1" class="row_heading level2 row1" >17 - 17</th>
          <td id="T_e7960_row1_col0" class="data row1 col0" >1</td>
          <td id="T_e7960_row1_col1" class="data row1 col1" >['aaaaaadsfasdfasdf']</td>
        </tr>
        <tr>
          <th id="T_e7960_level0_row2" class="row_heading level0 row2" >col3</th>
          <th id="T_e7960_level1_row2" class="row_heading level1 row2" >1 - 1</th>
          <th id="T_e7960_level2_row2" class="row_heading level2 row2" >100 - 200</th>
          <td id="T_e7960_row2_col0" class="data row2 col0" >2</td>
          <td id="T_e7960_row2_col1" class="data row2 col1" >['aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa...', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa...']</td>
        </tr>
      </tbody>
    </table>

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 33-39

.. code-block:: default


    col = ["a","a","a","a","a","a","a","a","a","a","a","a","a","ab","ab","ab","ab","ab","ab", "ab"]*1000
    col.append("basdbadsbaaaaaaaaaa")
    col.append("basdbadsbaaaaaaaaaaa")
    df = pd.DataFrame({"col1":col})
    StringLengthOutOfBounds(num_percentiles=1000, min_unique_values=3).run(df)





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js"
        integrity="sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg=="
        crossorigin="anonymous"
        referrerpolicy="no-referrer">
    </script>

    <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
    <script type="text/javascript">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>
    <script type="text/javascript">
        if (typeof require !== 'undefined') {
            require.undef("plotly");
            requirejs.config({
                paths: {'plotly': ['https://cdn.plot.ly/plotly-2.8.3.min']}
            });
            require(
                ['plotly'],
                function(Plotly) {
                    window._Plotly = Plotly;
                    window.Plotly = Plotly;
                    console.log('Loaded plotly successfully');
                },
                function() {console.log('Failed to load plotly')}
            );
        } else {
            console.log('requirejs is not present');
        }
    </script>
    <h4><b>String Length Out Of Bounds</b></h4><p>Detect strings with length that is much longer/shorter than the identified "normal" string lengths.</p><h5><b>Additional Outputs</b></h5><div>* showing only the top 10 columns, you can change it using n_top_columns param</div><style type="text/css">
    #T_e4f4b table {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_e4f4b thead {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_e4f4b tbody {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_e4f4b th {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_e4f4b td {
      text-align: left;
      white-space: pre-wrap;
    }
    </style>
    <table id="T_e4f4b">
      <thead>
        <tr>
          <th class="blank" >&nbsp;</th>
          <th class="blank" >&nbsp;</th>
          <th class="blank level0" >&nbsp;</th>
          <th id="T_e4f4b_level0_col0" class="col_heading level0 col0" >Number of Outlier Samples</th>
          <th id="T_e4f4b_level0_col1" class="col_heading level0 col1" >Example Samples</th>
        </tr>
        <tr>
          <th class="index_name level0" >Column Name</th>
          <th class="index_name level1" >Range of Detected Normal String Lengths</th>
          <th class="index_name level2" >Range of Detected Outlier String Lengths</th>
          <th class="blank col0" >&nbsp;</th>
          <th class="blank col1" >&nbsp;</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th id="T_e4f4b_level0_row0" class="row_heading level0 row0" >col1</th>
          <th id="T_e4f4b_level1_row0" class="row_heading level1 row0" >1 - 2</th>
          <th id="T_e4f4b_level2_row0" class="row_heading level2 row0" >19 - 20</th>
          <td id="T_e4f4b_row0_col0" class="data row0 col0" >2</td>
          <td id="T_e4f4b_row0_col1" class="data row0 col1" >['basdbadsbaaaaaaaaaa', 'basdbadsbaaaaaaaaaaa']</td>
        </tr>
      </tbody>
    </table>

    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.187 seconds)


.. _sphx_glr_download_checks_gallery_tabular_integrity_plot_string_length_out_of_bounds.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_string_length_out_of_bounds.py <plot_string_length_out_of_bounds.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_string_length_out_of_bounds.ipynb <plot_string_length_out_of_bounds.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
