
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/vision/checks/performance/examples/plot_mean_average_recall_report.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_vision_checks_performance_examples_plot_mean_average_recall_report.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_vision_checks_performance_examples_plot_mean_average_recall_report.py:


Mean Average Recall Report
**************************
This notebooks provides an overview for using and understanding the mean average recall report check.

**Structure:**

* `What is the purpose of the check? <#what-is-the-purpose-of-the-check>`__
* `Generate data & model <#generate-data-and-model>`__
* `Run the check <#run-the-check>`__
* `Define a condition <#define-a-condition>`__

What is the purpose of the check?
=================================
The Mean Average Recall Report evaluates the
`mAR metric <https://manalelaidouni.github.io/Evaluating-Object-Detection-Models-Guide-to-Performance-Metrics.html>`__
on the given model and data, and returns the mAR values per bounding box size category (small, medium, large).
This check only works on the Object Detection task.

.. GENERATED FROM PYTHON SOURCE LINES 23-25

Imports
-------

.. GENERATED FROM PYTHON SOURCE LINES 25-31

.. code-block:: default


    import numpy as np

    from deepchecks.vision.checks.performance import MeanAverageRecallReport
    from deepchecks.vision.datasets.detection import coco








.. GENERATED FROM PYTHON SOURCE LINES 32-39

Generate Data and Model
-----------------------
We generate a sample dataset of 128 images from the `COCO dataset <https://cocodataset.org/#home>`__,
and using the `YOLOv5 model <https://github.com/ultralytics/yolov5>`__.

For the label formatter - our dataset returns exactly the accepted format, so our
formatting function is the simple `lambda x: x` function.

.. GENERATED FROM PYTHON SOURCE LINES 39-44

.. code-block:: default


    yolo = coco.load_model(pretrained=True)

    test_ds = coco.load_dataset(train=False, object_type='VisionData')








.. GENERATED FROM PYTHON SOURCE LINES 45-47

Run the check
-------------

.. GENERATED FROM PYTHON SOURCE LINES 47-52

.. code-block:: default


    check = MeanAverageRecallReport()
    result = check.run(test_ds, yolo)
    result






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>IPyWidget export</title>
    </head>
    <body>

    <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    <script type="application/vnd.jupyter.widget-state+json">
    {
      "version_major": 2,
      "version_minor": 0,
      "state": {
        "2c1e74851112494baec948e9035778e9": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "children": [
              "IPY_MODEL_b65ca4c21e304062a8cf6b129b444060"
            ],
            "layout": "IPY_MODEL_a5e97e7edf2e4cd987e424b2ac0ab2e0"
          }
        },
        "b65ca4c21e304062a8cf6b129b444060": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_5e477a04b9d847a49b548322036dccf0",
            "style": "IPY_MODEL_d44d0ad8091b4aed95e827313ddc580b",
            "value": "<h4>Mean Average Recall Report</h4><p>Summarize mean average recall metrics on a dataset and model per detections and area range. <a href=\"https://docs.deepchecks.com/0.6.0.dev1/examples/vision/checks/performance/mean_average_recall_report.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p><h5>Additional Outputs</h5><style type=\"text/css\">\n#T_40342 table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_40342 thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_40342 tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_40342 th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_40342 td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_40342\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th id=\"T_40342_level0_col0\" class=\"col_heading level0 col0\" >AR@1 (%)</th>\n      <th id=\"T_40342_level0_col1\" class=\"col_heading level0 col1\" >AR@10 (%)</th>\n      <th id=\"T_40342_level0_col2\" class=\"col_heading level0 col2\" >AR@100 (%)</th>\n    </tr>\n    <tr>\n      <th class=\"index_name level0\" >Area size</th>\n      <th class=\"blank col0\" >&nbsp;</th>\n      <th class=\"blank col1\" >&nbsp;</th>\n      <th class=\"blank col2\" >&nbsp;</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_40342_level0_row0\" class=\"row_heading level0 row0\" >All</th>\n      <td id=\"T_40342_row0_col0\" class=\"data row0 col0\" >0.33</td>\n      <td id=\"T_40342_row0_col1\" class=\"data row0 col1\" >0.42</td>\n      <td id=\"T_40342_row0_col2\" class=\"data row0 col2\" >0.43</td>\n    </tr>\n    <tr>\n      <th id=\"T_40342_level0_row1\" class=\"row_heading level0 row1\" >Small (area < 32^2)</th>\n      <td id=\"T_40342_row1_col0\" class=\"data row1 col0\" >0.10</td>\n      <td id=\"T_40342_row1_col1\" class=\"data row1 col1\" >0.22</td>\n      <td id=\"T_40342_row1_col2\" class=\"data row1 col2\" >0.22</td>\n    </tr>\n    <tr>\n      <th id=\"T_40342_level0_row2\" class=\"row_heading level0 row2\" >Medium (32^2 < area < 96^2)</th>\n      <td id=\"T_40342_row2_col0\" class=\"data row2 col0\" >0.33</td>\n      <td id=\"T_40342_row2_col1\" class=\"data row2 col1\" >0.42</td>\n      <td id=\"T_40342_row2_col2\" class=\"data row2 col2\" >0.42</td>\n    </tr>\n    <tr>\n      <th id=\"T_40342_level0_row3\" class=\"row_heading level0 row3\" >Large (area < 96^2)</th>\n      <td id=\"T_40342_row3_col0\" class=\"data row3 col0\" >0.48</td>\n      <td id=\"T_40342_row3_col1\" class=\"data row3 col1\" >0.54</td>\n      <td id=\"T_40342_row3_col2\" class=\"data row3 col2\" >0.55</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "5e477a04b9d847a49b548322036dccf0": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "d44d0ad8091b4aed95e827313ddc580b": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "a5e97e7edf2e4cd987e424b2ac0ab2e0": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        }
      }
    }
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "2c1e74851112494baec948e9035778e9"}
    </script>

    </body>
    </html>

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 53-56

Observe the checkâ€™s output
--------------------------
The result value is a dataframe that has the average recall score per each area range and IoU.

.. GENERATED FROM PYTHON SOURCE LINES 56-59

.. code-block:: default


    result.value






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>AR@1 (%)</th>
          <th>AR@10 (%)</th>
          <th>AR@100 (%)</th>
        </tr>
        <tr>
          <th>Area size</th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>All</th>
          <td>0.330552</td>
          <td>0.423444</td>
          <td>0.429179</td>
        </tr>
        <tr>
          <th>Small (area &lt; 32^2)</th>
          <td>0.104955</td>
          <td>0.220594</td>
          <td>0.220594</td>
        </tr>
        <tr>
          <th>Medium (32^2 &lt; area &lt; 96^2)</th>
          <td>0.325099</td>
          <td>0.417392</td>
          <td>0.423844</td>
        </tr>
        <tr>
          <th>Large (area &lt; 96^2)</th>
          <td>0.481611</td>
          <td>0.544408</td>
          <td>0.549963</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 60-64

Define a condition 
==================
We can define a condition that checks whether our model's average recall score is not less than
a given threshold

.. GENERATED FROM PYTHON SOURCE LINES 64-68

.. code-block:: default


    check = MeanAverageRecallReport().add_condition_test_average_recall_not_less_than(0.4)
    result = check.run(test_ds, yolo)
    result.show(show_additional_outputs=False)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/runner/work/deepchecks/deepchecks/deepchecks/core/check_result.py:423: UserWarning:

    You are running in a non-interactive python shell. in order to show result you have to use an IPython shell (etc Jupyter)






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  53.342 seconds)


.. _sphx_glr_download_examples_vision_checks_performance_examples_plot_mean_average_recall_report.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_mean_average_recall_report.py <plot_mean_average_recall_report.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_mean_average_recall_report.ipynb <plot_mean_average_recall_report.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
