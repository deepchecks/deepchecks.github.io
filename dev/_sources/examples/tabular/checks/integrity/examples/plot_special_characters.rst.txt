
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/tabular/checks/integrity/examples/plot_special_characters.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_tabular_checks_integrity_examples_plot_special_characters.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_tabular_checks_integrity_examples_plot_special_characters.py:


Special Characters
******************

.. GENERATED FROM PYTHON SOURCE LINES 8-12

.. code-block:: default


    from deepchecks.tabular.checks import SpecialCharacters
    import pandas as pd








.. GENERATED FROM PYTHON SOURCE LINES 13-33

.. code-block:: default


    data = {'col1': [' ', '!', '"', '#', '$', '%', '&', '\'','(', ')',
                     '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', 
                     '>', '?', '@', '[', ']', '\\', '^', '_', '`', '{',
                     '}', '|', '~', '\n'],
            'col2':['v', 'v', 'v', 'v4', 'v5', 'v6', 'v7', 'v8','v9','v10', 
                     '*', '+', ',', '-', '.', '/', ':', ';', '<', '=', 
                     '>', '?', '@', '[', ']', '\\', '^', '_', '`', '{',
                     '}', '|', '~', '\n'],
            'col3': [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,11,1,'???#',1,1,1,1,1,1,1,1,1,1,1],
            'col4': [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,11,1,1,1,1,1,1,1,1,1,1,1,1,1],
            'col5': ['valid1','valid2','valid3','valid4','valid5','valid6','valid7',
                     'valid8','valid9','valid10','valid11','valid12',
                    'valid13','valid14','inval!d15','valid16','valid17','valid18',
                     'valid19','valid20','valid21','valid22','valid23','valid24','valid25',
                    'valid26', 'valid27','valid28','valid29','valid30','valid31','32','33','34']}


    dataframe = pd.DataFrame(data=data)
    SpecialCharacters().run(dataframe)





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>IPyWidget export</title>
    </head>
    <body>

    <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    <script type="application/vnd.jupyter.widget-state+json">
    {
      "version_major": 2,
      "version_minor": 0,
      "state": {
        "69116d1d194f4df2b8f93b5da437d6fd": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "children": [
              "IPY_MODEL_aa338b4af4a74e80a5676ee2a61fea2a"
            ],
            "layout": "IPY_MODEL_24f7ae408e2c41ccaf117030763a5df3"
          }
        },
        "aa338b4af4a74e80a5676ee2a61fea2a": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_4f584420fccc4ad5bd98ed4df5f63ef9",
            "style": "IPY_MODEL_f724b045b5af498495b2a093232f51a1",
            "value": "<h4>Special Characters</h4><p>Search in column[s] for values that contains only special characters. <a href=\"https://docs.deepchecks.com/dev/examples/tabular/checks/integrity/examples/plot_special_chars.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p><h5>Additional Outputs</h5><div>* showing only the top 10 columns, you can change it using n_top_columns param</div><style type=\"text/css\">\n#T_68c26 table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_68c26 thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_68c26 tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_68c26 th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_68c26 td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_68c26\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th id=\"T_68c26_level0_col0\" class=\"col_heading level0 col0\" >% Special-Only Samples</th>\n      <th id=\"T_68c26_level0_col1\" class=\"col_heading level0 col1\" >Most Common Special-Only Samples</th>\n    </tr>\n    <tr>\n      <th class=\"index_name level0\" >Column Name</th>\n      <th class=\"blank col0\" >&nbsp;</th>\n      <th class=\"blank col1\" >&nbsp;</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_68c26_level0_row0\" class=\"row_heading level0 row0\" >col1</th>\n      <td id=\"T_68c26_row0_col0\" class=\"data row0 col0\" >100%</td>\n      <td id=\"T_68c26_row0_col1\" class=\"data row0 col1\" >[' ', '!']</td>\n    </tr>\n    <tr>\n      <th id=\"T_68c26_level0_row1\" class=\"row_heading level0 row1\" >col2</th>\n      <td id=\"T_68c26_row1_col0\" class=\"data row1 col0\" >70.59%</td>\n      <td id=\"T_68c26_row1_col1\" class=\"data row1 col1\" >['*', '+']</td>\n    </tr>\n    <tr>\n      <th id=\"T_68c26_level0_row2\" class=\"row_heading level0 row2\" >col3</th>\n      <td id=\"T_68c26_row2_col0\" class=\"data row2 col0\" >2.94%</td>\n      <td id=\"T_68c26_row2_col1\" class=\"data row2 col1\" >['???#']</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "4f584420fccc4ad5bd98ed4df5f63ef9": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "f724b045b5af498495b2a093232f51a1": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "24f7ae408e2c41ccaf117030763a5df3": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        }
      }
    }
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "69116d1d194f4df2b8f93b5da437d6fd"}
    </script>

    </body>
    </html>

    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.015 seconds)


.. _sphx_glr_download_examples_tabular_checks_integrity_examples_plot_special_characters.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_special_characters.py <plot_special_characters.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_special_characters.ipynb <plot_special_characters.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
