
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "user-guide/general/exporting_results/examples/plot_exports_output_to_wandb.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_user-guide_general_exporting_results_examples_plot_exports_output_to_wandb.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_user-guide_general_exporting_results_examples_plot_exports_output_to_wandb.py:


Export Outputs to Weights & Biases (wandb)
******************************************

In this guide, we will demonstrate how to export the Check's and the Suite's output to wandb.

This enables to view the exported results in wandb and compare the results you
receive with different parameters or model/data.

**Structure:**

* `Load Data <#load-data>`__
* `Run a Check <#run-a-check>`__
* `Export Check to wandb <#export-a-check-s-output-checkresult-to-wandb>`__
* `Export Suite to wandb <#exporting-a-suite-s-output-suiteresult-to-wandb>`__

.. GENERATED FROM PYTHON SOURCE LINES 20-22

Load Data
---------

.. GENERATED FROM PYTHON SOURCE LINES 22-28

.. code-block:: default


    from deepchecks.tabular.datasets.classification import iris

    train_dataset, test_dataset = iris.load_data()
    model = iris.load_fitted_model()








.. GENERATED FROM PYTHON SOURCE LINES 29-31

Run a Check
-----------

.. GENERATED FROM PYTHON SOURCE LINES 31-37

.. code-block:: default


    from deepchecks.tabular.checks import WholeDatasetDrift

    result = WholeDatasetDrift().add_condition_overall_drift_value_not_greater_than(
    ).run(train_dataset, test_dataset, model)








.. GENERATED FROM PYTHON SOURCE LINES 38-40

Observe CheckResult Display and Value
-------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default


    result






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>IPyWidget export</title>
    </head>
    <body>

    <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    <script type="application/vnd.jupyter.widget-state+json">
    {
      "version_major": 2,
      "version_minor": 0,
      "state": {
        "10107dcaf11b43b9acaff9d6d99d0513": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "children": [
              "IPY_MODEL_d09191d698f644069c2fbc0160c267c5"
            ],
            "layout": "IPY_MODEL_7c095aa7c0524ab5b722e9d935610060"
          }
        },
        "d09191d698f644069c2fbc0160c267c5": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_626b32b30d3b4bc3bae4f41ba9b4a103",
            "style": "IPY_MODEL_0ef1da72a29c45b48a6b513b6706614c",
            "value": "<h4>Whole Dataset Drift</h4><p>    Calculate drift between the entire train and test datasets using a model trained to distinguish between them. <a href=\"https://docs.deepchecks.com/dev/examples/tabular/checks/distribution/examples/plot_whole_dataset_drift.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p><h5>Conditions Summary</h5><style type=\"text/css\">\n#T_f573a table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_f573a thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_f573a tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_f573a th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_f573a td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_f573a\">\n  <thead>\n    <tr>\n      <th id=\"T_f573a_level0_col0\" class=\"col_heading level0 col0\" >Status</th>\n      <th id=\"T_f573a_level0_col1\" class=\"col_heading level0 col1\" >Condition</th>\n      <th id=\"T_f573a_level0_col2\" class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_f573a_row0_col0\" class=\"data row0 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_f573a_row0_col1\" class=\"data row0 col1\" >Drift value is not greater than 0.25</td>\n      <td id=\"T_f573a_row0_col2\" class=\"data row0 col2\" ></td>\n    </tr>\n  </tbody>\n</table>\n<h5>Additional Outputs</h5><p><b>&#x2713;</b> Nothing found</p>"
          }
        },
        "626b32b30d3b4bc3bae4f41ba9b4a103": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "0ef1da72a29c45b48a6b513b6706614c": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "7c095aa7c0524ab5b722e9d935610060": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        }
      }
    }
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "10107dcaf11b43b9acaff9d6d99d0513"}
    </script>

    </body>
    </html>

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

the value can be observed

.. GENERATED FROM PYTHON SOURCE LINES 45-47

.. code-block:: default

    result.value





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    {'domain_classifier_auc': 0.4545454545454546, 'domain_classifier_drift_score': 0, 'domain_classifier_feature_importance': {'petal length (cm)': 1.0, 'sepal length (cm)': 0.0, 'sepal width (cm)': 0.0, 'petal width (cm)': 0.0}}



.. GENERATED FROM PYTHON SOURCE LINES 48-62

Export a Check's Output (CheckResult) to wandb
==============================================
Exporting the output to wandb is possible using the ``to_wandb`` function. This function
exports the check outputs to a wandb project.

The output display that will be export will be a bit different from what you usually
see. Only the tables and the plots are being exported.

On default if you export a single check to wandb without a wandb run active it will
create a project with the name deepchecks and the and the check's metadata in the
config and export the results there.

See Check to_wandb options
--------------------------

.. GENERATED FROM PYTHON SOURCE LINES 62-67

.. code-block:: default


    from deepchecks.core import CheckResult

    help(CheckResult.to_wandb)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Help on function to_wandb in module deepchecks.core.check_result:

    to_wandb(self, dedicated_run: bool = True, **kwargs: Any)
        Export check result to wandb.
    
        Parameters
        ----------
        dedicated_run : bool , default: None
            If to initiate and finish a new wandb run.
            If None it will be dedicated if wandb.run is None.
        kwargs: Keyword arguments to pass to wandb.init.
                Default project name is deepchecks.
                Default config is the check metadata (params, train/test/ name etc.).





.. GENERATED FROM PYTHON SOURCE LINES 68-69

To use this function you first need to login to your wandb account

.. GENERATED FROM PYTHON SOURCE LINES 69-73

.. code-block:: default


    import wandb
    wandb.login()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    False



.. GENERATED FROM PYTHON SOURCE LINES 74-77

.. code-block:: default


    result.to_wandb()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    wandb: Tracking run with wandb version 0.12.14
    wandb: W&B syncing is set to `offline` in this directory.  
    wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.

    wandb: Waiting for W&B process to finish... (success).
    wandb: - 0.000 MB of 0.000 MB uploaded (0.000 MB deduped)    wandb: \ 0.000 MB of 0.000 MB uploaded (0.000 MB deduped)    wandb:                                                                                
    wandb: You can sync this run to the cloud by running:
    wandb: wandb sync /home/runner/work/deepchecks/deepchecks/docs/source/user-guide/general/exporting_results/wandb/offline-run-20220412_163251-3fpx3466
    wandb: Find logs at: ./wandb/offline-run-20220412_163251-3fpx3466/logs




.. GENERATED FROM PYTHON SOURCE LINES 78-88

Exporting a Suite's Output (SuiteResult) to wandb
=================================================
Run Suite and export to wandb
-----------------------------
Exporting a suite to wandb is the same as exporting a check. The display in wand
will have a section per check.

On default if you export a suite to wandb without a wandb run active it will create
a project with the name deepchecks and the suite's name in the config and send the
results there.

.. GENERATED FROM PYTHON SOURCE LINES 88-93

.. code-block:: default


    from deepchecks.tabular.suites import full_suite

    suite = full_suite()








.. GENERATED FROM PYTHON SOURCE LINES 94-98

.. code-block:: default


    suite_result = suite.run(train_dataset=train_dataset, test_dataset=test_dataset, model=model)
    suite_result.to_wandb()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Full Suite:   0%|                                   | 0/35 [00:00<?, ? Check/s]    Full Suite:   0%|                                   | 0/35 [00:00<?, ? Check/s, Check=Model Info]    Full Suite:   3%|#                                  | 1/35 [00:00<00:00, 42.87 Check/s, Check=Columns Info]    Full Suite:   6%|##                                 | 2/35 [00:00<00:01, 31.92 Check/s, Check=Confusion Matrix Report]    Full Suite:   9%|###                                | 3/35 [00:00<00:01, 19.15 Check/s, Check=Confusion Matrix Report]    Full Suite:   9%|###                                | 3/35 [00:00<00:01, 19.15 Check/s, Check=Performance Report]         Full Suite:  11%|####                               | 4/35 [00:00<00:01, 19.15 Check/s, Check=Roc Report]            Full Suite:  14%|#####                              | 5/35 [00:00<00:02, 11.24 Check/s, Check=Roc Report]    Full Suite:  14%|#####                              | 5/35 [00:00<00:02, 11.24 Check/s, Check=Simple Model Comparison]    Full Suite:  17%|######                             | 6/35 [00:00<00:02, 11.24 Check/s, Check=Model Error Analysis]       Full Suite:  20%|#######                            | 7/35 [00:00<00:02,  9.51 Check/s, Check=Model Error Analysis]    Full Suite:  20%|#######                            | 7/35 [00:00<00:02,  9.51 Check/s, Check=Calibration Score]       Full Suite:  23%|########                           | 8/35 [00:00<00:02,  9.51 Check/s, Check=Regression Systematic Error]    Full Suite:  26%|#########                          | 9/35 [00:00<00:02,  9.51 Check/s, Check=Regression Error Distribution]    Full Suite:  29%|##########                         | 10/35 [00:00<00:02,  9.51 Check/s, Check=Boosting Overfit]                Full Suite:  31%|###########                        | 11/35 [00:00<00:02,  9.51 Check/s, Check=Unused Features]     Full Suite:  34%|############                       | 12/35 [00:00<00:02,  9.51 Check/s, Check=Model Inference Time]    Full Suite:  37%|#############                      | 13/35 [00:00<00:02,  9.51 Check/s, Check=Train Test Feature Drift]    Full Suite:  40%|##############                     | 14/35 [00:00<00:01, 17.29 Check/s, Check=Train Test Feature Drift]    Full Suite:  40%|##############                     | 14/35 [00:00<00:01, 17.29 Check/s, Check=Train Test Label Drift]      Full Suite:  43%|###############                    | 15/35 [00:00<00:01, 17.29 Check/s, Check=Whole Dataset Drift]       Full Suite:  46%|################                   | 16/35 [00:01<00:01, 17.24 Check/s, Check=Whole Dataset Drift]    Full Suite:  46%|################                   | 16/35 [00:01<00:01, 17.24 Check/s, Check=Dominant Frequency Change]    Full Suite:  49%|#################                  | 17/35 [00:01<00:01, 17.24 Check/s, Check=Category Mismatch Train Test]    Full Suite:  51%|##################                 | 18/35 [00:01<00:00, 17.24 Check/s, Check=New Label Train Test]            Full Suite:  54%|###################                | 19/35 [00:01<00:00, 17.24 Check/s, Check=String Mismatch Comparison]    Full Suite:  57%|####################               | 20/35 [00:01<00:00, 17.24 Check/s, Check=Datasets Size Comparison]      Full Suite:  60%|#####################              | 21/35 [00:01<00:00, 17.24 Check/s, Check=Date Train Test Leakage Duplicates]    Full Suite:  63%|######################             | 22/35 [00:01<00:00, 17.24 Check/s, Check=Date Train Test Leakage Overlap]       Full Suite:  66%|#######################            | 23/35 [00:01<00:00, 17.24 Check/s, Check=Single Feature Contribution Train Test]    Full Suite:  69%|########################           | 24/35 [00:01<00:00, 17.24 Check/s, Check=Train Test Samples Mix]                    Full Suite:  71%|#########################          | 25/35 [00:01<00:00, 17.24 Check/s, Check=Identifier Leakage]        Full Suite:  74%|##########################         | 26/35 [00:01<00:00, 17.24 Check/s, Check=Index Train Test Leakage]    Full Suite:  77%|###########################        | 27/35 [00:01<00:00, 17.24 Check/s, Check=Is Single Value]             Full Suite:  80%|############################       | 28/35 [00:01<00:00, 17.24 Check/s, Check=Mixed Nulls]        Full Suite:  83%|#############################      | 29/35 [00:01<00:00, 40.67 Check/s, Check=Mixed Nulls]    Full Suite:  83%|#############################      | 29/35 [00:01<00:00, 40.67 Check/s, Check=Mixed Data Types]    Full Suite:  86%|##############################     | 30/35 [00:01<00:00, 40.67 Check/s, Check=String Mismatch]     Full Suite:  89%|###############################    | 31/35 [00:01<00:00, 40.67 Check/s, Check=Data Duplicates]    Full Suite:  91%|################################   | 32/35 [00:01<00:00, 40.67 Check/s, Check=String Length Out Of Bounds]    Full Suite:  94%|#################################  | 33/35 [00:01<00:00, 40.67 Check/s, Check=Special Characters]             Full Suite:  97%|################################## | 34/35 [00:01<00:00, 40.67 Check/s, Check=Label Ambiguity]                                                                                                                      wandb: Tracking run with wandb version 0.12.14
    wandb: W&B syncing is set to `offline` in this directory.  
    wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
    Full Suite:   0%|                                                   | 0/51 [00:00<?, ? Result/s]    Full Suite:  10%|#####                                              | 5/51 [00:00<00:00, 46.67 Result/s]    Full Suite:  20%|##########                                         | 10/51 [00:00<00:01, 32.60 Result/s]    Full Suite:  35%|##################                                 | 18/51 [00:00<00:00, 45.07 Result/s]    Full Suite:  45%|#######################                            | 23/51 [00:00<00:00, 35.44 Result/s]    Full Suite:  53%|###########################                        | 27/51 [00:00<00:00, 33.78 Result/s]    Full Suite:  61%|##############################9                    | 31/51 [00:00<00:00, 35.33 Result/s]    Full Suite:  71%|####################################               | 36/51 [00:00<00:00, 36.93 Result/s]    Full Suite:  78%|########################################           | 40/51 [00:01<00:00, 34.82 Result/s]    Full Suite:  86%|############################################       | 44/51 [00:01<00:00, 33.35 Result/s]    Full Suite:  94%|################################################   | 48/51 [00:01<00:00, 32.41 Result/s]                                                                                                         
    wandb: Waiting for W&B process to finish... (success).
    wandb: - 0.000 MB of 0.000 MB uploaded (0.000 MB deduped)    wandb: \ 0.000 MB of 0.000 MB uploaded (0.000 MB deduped)    wandb:                                                                                
    wandb: You can sync this run to the cloud by running:
    wandb: wandb sync /home/runner/work/deepchecks/deepchecks/docs/source/user-guide/general/exporting_results/wandb/offline-run-20220412_163258-1abnom2i
    wandb: Find logs at: ./wandb/offline-run-20220412_163258-1abnom2i/logs




.. GENERATED FROM PYTHON SOURCE LINES 99-100

You can also set all the kwargs the wandb.init will get:

.. GENERATED FROM PYTHON SOURCE LINES 100-102

.. code-block:: default


    suite_result.to_wandb(project='my-suite-project', config={'suite-name': 'full-suite'})




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    wandb: Tracking run with wandb version 0.12.14
    wandb: W&B syncing is set to `offline` in this directory.  
    wandb: Run `wandb online` or set WANDB_MODE=online to enable cloud syncing.
    Full Suite:   0%|                                                   | 0/51 [00:00<?, ? Result/s]    Full Suite:  10%|#####                                              | 5/51 [00:00<00:00, 48.06 Result/s]    Full Suite:  20%|##########                                         | 10/51 [00:00<00:01, 36.01 Result/s]    Full Suite:  35%|##################                                 | 18/51 [00:00<00:00, 51.29 Result/s]    Full Suite:  47%|########################                           | 24/51 [00:00<00:00, 37.74 Result/s]    Full Suite:  57%|#############################                      | 29/51 [00:00<00:00, 37.57 Result/s]    Full Suite:  67%|##################################                 | 34/51 [00:00<00:00, 40.35 Result/s]    Full Suite:  76%|#######################################            | 39/51 [00:00<00:00, 39.03 Result/s]    Full Suite:  86%|############################################       | 44/51 [00:01<00:00, 36.30 Result/s]    Full Suite:  94%|################################################   | 48/51 [00:01<00:00, 35.04 Result/s]                                                                                                         
    wandb: Waiting for W&B process to finish... (success).
    wandb: - 0.000 MB of 0.000 MB uploaded (0.000 MB deduped)    wandb: \ 0.000 MB of 0.000 MB uploaded (0.000 MB deduped)    wandb:                                                                                
    wandb: You can sync this run to the cloud by running:
    wandb: wandb sync /home/runner/work/deepchecks/deepchecks/docs/source/user-guide/general/exporting_results/wandb/offline-run-20220412_163305-109diw8j
    wandb: Find logs at: ./wandb/offline-run-20220412_163305-109diw8j/logs





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  22.668 seconds)


.. _sphx_glr_download_user-guide_general_exporting_results_examples_plot_exports_output_to_wandb.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_exports_output_to_wandb.py <plot_exports_output_to_wandb.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_exports_output_to_wandb.ipynb <plot_exports_output_to_wandb.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
