
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "user-guide/vision/auto_quickstarts/plot_segmentation_tutorial.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_user-guide_vision_auto_quickstarts_plot_segmentation_tutorial.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_user-guide_vision_auto_quickstarts_plot_segmentation_tutorial.py:


.. _vision_segmentation_tutorial:

===============================
Semantic Segmentation Tutorial
===============================

In this tutorial, you will learn how to validate your **semantic segmentation model** using deepchecks test suites.
You can read more about the different checks and suites for computer vision use cases at the
:doc:`examples section  </checks_gallery/vision/index>`.

If you just want to see the output of this tutorial, jump to :ref:`observing_the_result` section.

A semantic segmentation task is a task where every pixel of the image is labeled with a single class.
Therefore, a common output of these tasks is an image of identical size to the input, with a vector for each pixel
of the probability for each class.

.. code-block:: bash

    # Before we start, if you don't have deepchecks vision package installed yet, run:
    import sys
    !{sys.executable} -m pip install "deepchecks[vision]" --quiet --upgrade # --user

    # or install using pip from your python environment

.. GENERATED FROM PYTHON SOURCE LINES 28-30

Defining the data and model
===========================

.. GENERATED FROM PYTHON SOURCE LINES 30-38

.. code-block:: default


    # Importing the required packages
    import matplotlib.pyplot as plt
    import numpy as np
    import torch
    import torchvision.transforms.functional as F









.. GENERATED FROM PYTHON SOURCE LINES 39-47

Load Data
~~~~~~~~~
The model in this tutorial is used to detect different objects in images (labels based on the Pascal VOC dataset).
The model is trained to identify 20 different objects (person, bicycle etc.) and background.
The dataset itself is the COCO128 dataset with semantic segmentation labels, mapped to the Pascal VOC labels
(Originally, the COCO dataset includes more labels, but those has been filtered out)
The dataset can be loaded as a pytorch DataLoader object from deepchecks.vision.datasets.segmentation, as is done in
this tutorial, but can also be loaded as a SegmentationData object

.. GENERATED FROM PYTHON SOURCE LINES 47-59

.. code-block:: default


    # The full pascal VOC data and information can be found here: http://host.robots.ox.ac.uk/pascal/VOC/voc2012/
    # And the COCO128 dataset can be found here: https://www.kaggle.com/datasets/ultralytics/coco128

    from torchvision.utils import draw_segmentation_masks

    from deepchecks.vision.datasets.segmentation.segmentation_coco import load_dataset, load_model
    from deepchecks.vision.segmentation_data import SegmentationData

    train_loader = load_dataset(object_type='DataLoader', train=True)
    test_loader = load_dataset(object_type='DataLoader', train=False)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/7119623 [00:00<?, ?it/s]    7119872it [00:00, 129098377.60it/s]        




.. GENERATED FROM PYTHON SOURCE LINES 60-63

Visualize a Few Images
~~~~~~~~~~~~~~~~~~~~~~
Let's visualize a few images with their segmentation, to understand the data augmentation.

.. GENERATED FROM PYTHON SOURCE LINES 63-77

.. code-block:: default

    batch = next(iter(test_loader))

    masked_images = [draw_segmentation_masks(batch[0][i], masks=torch.stack([batch[1][i] == j for j in range(20)]),
                                             alpha=0.6) for i in range(5)]

    fix, axs = plt.subplots(ncols=len(masked_images), figsize=(20, 20))
    for i, img in enumerate(masked_images):
        img = img.detach()
        img = F.to_pil_image(img)
        axs[i].imshow(np.asarray(img))
        axs[i].set(xticklabels=[], yticklabels=[], xticks=[], yticks=[])

    fix.show()




.. image-sg:: /user-guide/vision/auto_quickstarts/images/sphx_glr_plot_segmentation_tutorial_001.png
   :alt: plot segmentation tutorial
   :srcset: /user-guide/vision/auto_quickstarts/images/sphx_glr_plot_segmentation_tutorial_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 78-86

.. image :: /_static/images/tutorials/segmentation_5_examples.png
    :alt: COCO images with segmentation labels

Downloading a Pre-trained Model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In this tutorial, we will download a pre-trained LRSAPP model and a MobileNetV3 Large backbone
from the official PyTorch repository. For more details, please refer to the
`official documentation <https://pytorch.org/vision/main/models/generated/torchvision.models.segmentation.lraspp_mobilenet_v3_large.html>`__.

.. GENERATED FROM PYTHON SOURCE LINES 86-91

.. code-block:: default



    device = torch.device("cuda") if torch.cuda.is_available() else torch.device("cpu")
    model = load_model(pretrained=True, device=device)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Downloading: "https://download.pytorch.org/models/lraspp_mobilenet_v3_large-d234d4ea.pth" to /home/runner/.cache/torch/hub/checkpoints/lraspp_mobilenet_v3_large-d234d4ea.pth




.. GENERATED FROM PYTHON SOURCE LINES 92-100

Validating the Model With Deepchecks
=====================================
Now, after we have the training data, test data and the model, we can validate the model with
deepchecks test suites.

Visualize the Data Loader and the Model Outputs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
First we'll make sure we are familiar with the data loader and the model outputs.

.. GENERATED FROM PYTHON SOURCE LINES 100-113

.. code-block:: default


    batch = next(iter(train_loader))

    print("Batch type is: ", type(batch))
    print("First element is: ", type(batch[0]), "with len of ", len(batch[0]))
    print("Example output of an image shape from the dataloader ", batch[0][0].shape)
    print("Image values", batch[0][0])
    print("-" * 80)

    print("Second element is: ", type(batch[1]), "with len of ", len(batch[1]))
    print("Example output of a label shape from the dataloader ", batch[1][0].shape)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Batch type is:  <class 'tuple'>
    First element is:  <class 'list'> with len of  32
    Example output of an image shape from the dataloader  torch.Size([3, 424, 640])
    Image values tensor([[[107, 107, 107,  ..., 102, 102, 102],
             [107, 107, 107,  ..., 102, 102, 102],
             [107, 107, 107,  ..., 102, 102, 102],
             ...,
             [237, 217, 194,  ..., 127, 123, 129],
             [209, 236, 229,  ..., 123, 123, 133],
             [204, 230, 211,  ..., 115, 108, 117]],

            [[142, 142, 142,  ..., 139, 139, 139],
             [142, 142, 142,  ..., 139, 139, 139],
             [142, 142, 142,  ..., 139, 139, 139],
             ...,
             [235, 215, 192,  ..., 125, 121, 127],
             [206, 233, 226,  ..., 121, 121, 131],
             [201, 227, 208,  ..., 113, 106, 115]],

            [[184, 184, 184,  ..., 183, 183, 183],
             [184, 184, 184,  ..., 183, 183, 183],
             [184, 184, 184,  ..., 183, 183, 183],
             ...,
             [223, 203, 180,  ..., 113, 109, 115],
             [197, 224, 217,  ..., 109, 109, 119],
             [192, 218, 199,  ..., 101,  94, 103]]], dtype=torch.uint8)
    --------------------------------------------------------------------------------
    Second element is:  <class 'list'> with len of  32
    Example output of a label shape from the dataloader  torch.Size([424, 640])




.. GENERATED FROM PYTHON SOURCE LINES 114-127

Implementing the SegmentationData class
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The checks in the package validate the model & data by calculating various quantities over the data, labels and
predictions. In order to do that, those must be in a pre-defined format, according to the task type.
The first step is to implement a class that enables deepchecks to interact with your model and data and transform
them to this pre-defined format, which is set for each task type.
In this tutorial, we will implement the semantic segmentation task type by implementing a class that inherits from the
:class:`deepchecks.vision.segmentation_data.SegmentationData` class.

The SegmentationData class contains additional data and general methods intended for easy access to relevant metadata
for semantic segmentation ML models validation.
To learn more about the expected format please visit the API reference for the
:class:`deepchecks.vision.segmentation_data.SegmentationData` class.

.. GENERATED FROM PYTHON SOURCE LINES 127-160

.. code-block:: default



    class CocoSegmentationData(SegmentationData):
        """Class for loading the COCO segmentation dataset, inherits from :class:`~deepchecks.vision.SegmentationData`.

        Implement the necessary methods to load the dataset.
        """

        def batch_to_labels(self, batch):
            """Extract from the batch only the labels and return the labels in format (H, W).

            See SegmentationData for more details on format.
            """
            return batch[1]

        def infer_on_batch(self, batch, model, device):
            """Infer on a batch of images and return predictions in format (C, H, W), where C is the class_id dimension.

            See SegmentationData for more details on format.
            """
            normalized_batch = [F.normalize(img.unsqueeze(0).float() / 255,
                                            mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]) for img in batch[0]]

            predictions = [model(img)["out"].squeeze(0).detach() for img in normalized_batch]
            predictions = [torch.nn.functional.softmax(pred, dim=0) for pred in predictions]

            return predictions

        def batch_to_images(self, batch):
            """Convert the batch to a list of images, where each image is a 3D numpy array in the format (H, W, C)."""
            return [tensor.numpy().transpose((1, 2, 0)) for tensor in batch[0]]









.. GENERATED FROM PYTHON SOURCE LINES 161-162

After defining the task class, we can validate it by running the following code:

.. GENERATED FROM PYTHON SOURCE LINES 162-176

.. code-block:: default


    # The label_map is a dictionary that maps the class id to the class name, for display purposes.
    LABEL_MAP = {0: 'background', 1: 'airplane', 2: 'bicycle', 3: 'bird', 4: 'boat', 5: 'bottle', 6: 'bus', 7: 'car',
                 8: 'cat', 9: 'chair', 10: 'cow', 11: 'dining table', 12: 'dog', 13: 'horse', 14: 'motorcycle',
                 15: 'person', 16: 'potted plant', 17: 'sheep', 18: 'couch', 19: 'train', 20: 'tv'}

    training_data = CocoSegmentationData(data_loader=train_loader, label_map=LABEL_MAP)
    test_data = CocoSegmentationData(data_loader=test_loader, label_map=LABEL_MAP)

    training_data.validate_format(model, device=device)
    test_data.validate_format(model, device=device)

    # And observe the output:





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Deepchecks will try to validate the extractors given...
    Structure validation
    --------------------
    Label formatter: Pass!
    Prediction formatter: Pass!
    Image formatter: Pass!

    Content validation
    ------------------
    For validating the content within the structure you have to manually observe the classes, image, label and prediction.
    Examples of classes observed in the batch's labels: [[0, 7, 19], [0, 11, 15, 16], [0, 12], [0, 14], [0, 16]]
    Visual images & label & prediction: should open in a new window
    *******************************************************************************
    This machine does not support GUI
    The formatted image was saved in:
    /home/runner/work/deepchecks/deepchecks/docs/source/user-guide/vision/quickstarts/deepchecks_formatted_image.jpg
    Visual example of an image.
    validate_extractors can be set to skip the image saving or change the save path
    *******************************************************************************
    Deepchecks will try to validate the extractors given...
    Structure validation
    --------------------
    Label formatter: Pass!
    Prediction formatter: Pass!
    Image formatter: Pass!

    Content validation
    ------------------
    For validating the content within the structure you have to manually observe the classes, image, label and prediction.
    Examples of classes observed in the batch's labels: [[0, 1, 6, 7], [0, 8], [0, 15], [0, 5, 20], [0, 8, 16, 18]]
    Visual images & label & prediction: should open in a new window
    *******************************************************************************
    This machine does not support GUI
    The formatted image was saved in:
    /home/runner/work/deepchecks/deepchecks/docs/source/user-guide/vision/quickstarts/deepchecks_formatted_image (1).jpg
    Visual example of an image.
    validate_extractors can be set to skip the image saving or change the save path
    *******************************************************************************




.. GENERATED FROM PYTHON SOURCE LINES 177-181

Running Deepchecks' model evaluation suite on our data and model!
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Now that we have defined the task class, we can validate the model with the model evaluation suite of deepchecks.
This can be done with this simple few lines of code:

.. GENERATED FROM PYTHON SOURCE LINES 181-187

.. code-block:: default


    from deepchecks.vision.suites import model_evaluation

    suite = model_evaluation()
    result = suite.run(training_data, test_data, model, device=device)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:07]    Validating Input:
    |#####| 1/1 [Time: 00:07]
    Ingesting Batches - Train Dataset:
    |     | 0/2 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |##5  | 1/2 [Time: 00:10]
    Ingesting Batches - Train Dataset:
    |#####| 2/2 [Time: 00:15]
    Ingesting Batches - Train Dataset:
    |#####| 2/2 [Time: 00:15]

    Computing Single Dataset Checks - Train Dataset:
    |     | 0/4 [Time: 00:00]

    Computing Single Dataset Checks - Train Dataset:
    |#####| 4/4 [Time: 00:07, Check=Image Segment Performance]

    Computing Single Dataset Checks - Train Dataset:
    |#####| 4/4 [Time: 00:07, Check=Image Segment Performance]


    Ingesting Batches - Test Dataset:
    |     | 0/2 [Time: 00:00]


    Ingesting Batches - Test Dataset:
    |##5  | 1/2 [Time: 00:10]


    Ingesting Batches - Test Dataset:
    |#####| 2/2 [Time: 00:16]


    Ingesting Batches - Test Dataset:
    |#####| 2/2 [Time: 00:16]



    Computing Single Dataset Checks - Test Dataset:
    |     | 0/4 [Time: 00:00]



    Computing Single Dataset Checks - Test Dataset:
    |#####| 4/4 [Time: 00:08, Check=Image Segment Performance]



    Computing Single Dataset Checks - Test Dataset:
    |#####| 4/4 [Time: 00:08, Check=Image Segment Performance]




    Computing Checks:
    |     | 0/4 [Time: 00:00]




    Computing Checks:
    |     | 0/4 [Time: 00:00, Check=Class Performance]




    Computing Checks:
    |     | 0/4 [Time: 00:00, Check=Train Test Prediction Drift]




    Computing Checks:
    |##5  | 2/4 [Time: 00:00, Check=Train Test Prediction Drift]




    Computing Checks:
    |##5  | 2/4 [Time: 00:00, Check=Simple Model Comparison]    




    Computing Checks:
    |##5  | 2/4 [Time: 00:00, Check=Model Error Analysis]   




    Computing Checks:
    |#####| 4/4 [Time: 00:00, Check=Model Error Analysis]                                           
                                                                

                                                                                                               


                                                               



                                                                                                              




                                                                           



.. GENERATED FROM PYTHON SOURCE LINES 188-193

.. _vision_segmentation_tutorial__observing_the_result:

Observing the results:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The results can be saved as a html file with the following code:

.. GENERATED FROM PYTHON SOURCE LINES 193-196

.. code-block:: default


    result.save_as_html('output.html')





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    'output (1).html'



.. GENERATED FROM PYTHON SOURCE LINES 197-198

Or, if working inside a notebook, the output can be displayed directly by simply printing the result object:

.. GENERATED FROM PYTHON SOURCE LINES 198-200

.. code-block:: default


    result.show()





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Model Evaluation Suite</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"35f56790a93449dc960bfb615868fe8f": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "_titles": {"0": "Model Evaluation Suite"}, "children": ["IPY_MODEL_6b4ed117045c4d1ab64b03b01bfe7707"], "layout": "IPY_MODEL_6523597732e24381a9ec11166787c865"}}, "6b4ed117045c4d1ab64b03b01bfe7707": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_14fa21ca67c34bcbb561817733cb1c13", "IPY_MODEL_aec48681c20242d99a0006d986d78766", "IPY_MODEL_a9d4b8852f694ca593a6e2732b64cdd5", "IPY_MODEL_fff8161110274b129f9fb27f91a33b53", "IPY_MODEL_219b420c3ffc43828ee77895662de0db"], "layout": "IPY_MODEL_79cb0772462346a29d1687382295a7b0"}}, "14fa21ca67c34bcbb561817733cb1c13": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_b9e12b82ae9945d09ee9d487016072ca", "style": "IPY_MODEL_48bf4b800f7040c7a2f1950c49379933", "value": "\n            <h1 id=\"summary_HJ755NF4ZW9XA3KX7EEDTJVZH\">Model Evaluation Suite</h1>\n            <p>\n                The suite is composed of various checks such as: Class Performance, Train Test Prediction Drift, Simple Model Comparison, etc...<br>\n                Each check may contain conditions (which will result in pass / fail / warning / error\n                , represented by \n<span style=\"color: green;display:inline-block\">\u2713</span> /\n<span style=\"color: red;display:inline-block\">\u2716</span> /\n<span style=\"color: orange;font-weight:bold;display:inline-block\">!</span> /\n<span style=\"color: firebrick;font-weight:bold;display:inline-block\">\u2048</span>\n) as well as other outputs such as plots or tables.<br>\n                Suites, checks and conditions can all be modified. Read more about\n                <a href=https://docs.deepchecks.com/en/stable/examples/guides/create_a_custom_suite.html?utm_source=display_output&utm_medium=referral&utm_campaign=suite_link target=\"_blank\">custom suites</a>.\n            </p>\n\n"}}, "b9e12b82ae9945d09ee9d487016072ca": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "48bf4b800f7040c7a2f1950c49379933": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "aec48681c20242d99a0006d986d78766": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_52b1c53c1d4c4a909ce2cd903ec7f2d5", "IPY_MODEL_8ac7c8672d814d8c85730ca0c235b216"], "layout": "IPY_MODEL_4e90a832b0df497b88d16e31fec31b57"}}, "52b1c53c1d4c4a909ce2cd903ec7f2d5": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_f8a1f10116664a48934a9cc00600c98d", "style": "IPY_MODEL_82539decc6984e02a55db1ac8ee68b1f", "value": "<span id=\"summary_HJ755NF4ZW9XA3KX7EEDTJVZH-section-WJR64\"></span>"}}, "f8a1f10116664a48934a9cc00600c98d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "82539decc6984e02a55db1ac8ee68b1f": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "8ac7c8672d814d8c85730ca0c235b216": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "_titles": {"0": "Didn't Pass"}, "children": ["IPY_MODEL_a20fa575e90c4eb6b96c4da491d04d66"], "layout": "IPY_MODEL_0d6e42967e5649b0998202febd95891d", "selected_index": null}}, "a20fa575e90c4eb6b96c4da491d04d66": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_e847796c60a6431883dfb169db95dbfd", "IPY_MODEL_a7b7bc4d80ff4088934be266a3160168", "IPY_MODEL_eebd1f56e83546e6b83bf6d06c873fad", "IPY_MODEL_b3e93c75f7584942be9f661fbbe8fc79", "IPY_MODEL_f466a024631f47bd9ea44f3d122a010c", "IPY_MODEL_b3e93c75f7584942be9f661fbbe8fc79", "IPY_MODEL_d142615d48384b41952ee0087c400548", "IPY_MODEL_b3e93c75f7584942be9f661fbbe8fc79", "IPY_MODEL_7ea5491ae46b4d16a651e923548fb151"], "layout": "IPY_MODEL_0901ed1203f044509c2b14f18736ec5e"}}, "e847796c60a6431883dfb169db95dbfd": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_460bfc1930b74e968b927d87eb0673e8", "style": "IPY_MODEL_9722dbfc769b48b1a7a3cfe467bbecdc", "value": "<style type=\"text/css\">\n#T_7479f_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_7479f_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_7479f_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_7479f_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_7479f_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_7479f_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Check</th>\n      <th class=\"col_heading level0 col2\" >Condition</th>\n      <th class=\"col_heading level0 col3\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_7479f_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_7479f_row0_col1\" class=\"data row0 col1\" ><a href=\"#ClassPerformance_HJ755NF4ZW9XA3KX7EEDTJVZH-section-WJR64\">Class Performance</a></td>\n      <td id=\"T_7479f_row0_col2\" class=\"data row0 col2\" >Train-Test scores relative degradation is less than 0.1</td>\n      <td id=\"T_7479f_row0_col3\" class=\"data row0 col3\" >7 scores failed. Found max degradation of 99.99% for metric Dice and class bicycle.</td>\n    </tr>\n    <tr>\n      <td id=\"T_7479f_row1_col0\" class=\"data row1 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_7479f_row1_col1\" class=\"data row1 col1\" ><a href=\"#TrainTestPredictionDrift_HJ755NF4ZW9XA3KX7EEDTJVZH-section-WJR64\">Train Test Prediction Drift</a></td>\n      <td id=\"T_7479f_row1_col2\" class=\"data row1 col2\" >categorical drift score < 0.15 and numerical drift score < 0.075 for prediction drift</td>\n      <td id=\"T_7479f_row1_col3\" class=\"data row1 col3\" >Failed for 1 out of 3 prediction properties.\nFound 1 categorical prediction properties with Cramer's V above threshold: {'Samples Per Class': '0.2'}</td>\n    </tr>\n    <tr>\n      <td id=\"T_7479f_row2_col0\" class=\"data row2 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_7479f_row2_col1\" class=\"data row2 col1\" ><a href=\"#ImageSegmentPerformance-TestDataset_HJ755NF4ZW9XA3KX7EEDTJVZH-section-WJR64\">Image Segment Performance - Test Dataset</a></td>\n      <td id=\"T_7479f_row2_col2\" class=\"data row2 col2\" >Segment's ratio between score to mean is greater than 80%</td>\n      <td id=\"T_7479f_row2_col3\" class=\"data row2 col3\" >Properties with failed segments: Brightness: {'Range': '[0.32, 0.4)', 'Metric': 'Dice', 'Ratio': 0.43}, Mean Blue Relative Intensity: {'Range': '(-inf, 0.22)', 'Metric': 'Dice', 'Ratio': 0.45}, Mean Green Relative Intensity: {'Range': '[0.304, 0.328)', 'Metric': 'Dice', 'Ratio': 0.71}, Mean Red Rela...</td>\n    </tr>\n    <tr>\n      <td id=\"T_7479f_row3_col0\" class=\"data row3 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_7479f_row3_col1\" class=\"data row3 col1\" ><a href=\"#ImageSegmentPerformance-TrainDataset_HJ755NF4ZW9XA3KX7EEDTJVZH-section-WJR64\">Image Segment Performance - Train Dataset</a></td>\n      <td id=\"T_7479f_row3_col2\" class=\"data row3 col2\" >Segment's ratio between score to mean is greater than 80%</td>\n      <td id=\"T_7479f_row3_col3\" class=\"data row3 col3\" >Properties with failed segments: Area: {'Range': '(-inf, 268,288)', 'Metric': 'Dice', 'Ratio': 0.54}, Mean Blue Relative Intensity: {'Range': '[0.3, 0.32)', 'Metric': 'Dice', 'Ratio': 0.58}, Mean Green Relative Intensity: {'Range': '[0.373, inf)', 'Metric': 'Dice', 'Ratio': 0.71}, Mean Red Relative ...</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "460bfc1930b74e968b927d87eb0673e8": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9722dbfc769b48b1a7a3cfe467bbecdc": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "a7b7bc4d80ff4088934be266a3160168": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_4409bb1640114a7791ddbbd2a25e5263", "style": "IPY_MODEL_66df53efb42a488f988d055da30b07b8", "value": "<hr style=\"background-color: #eee;border: 0 none;color: #eee;height: 4px;\">"}}, "4409bb1640114a7791ddbbd2a25e5263": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "66df53efb42a488f988d055da30b07b8": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "eebd1f56e83546e6b83bf6d06c873fad": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_dc0af38189da41aa833a28be8fe11330", "IPY_MODEL_ea1fd227d6b143c6bb52d62bf3b31550", "IPY_MODEL_491773d8131e416589c17a3b7438763a", "IPY_MODEL_551a111849a24c1db18837accc6fddaa"], "layout": "IPY_MODEL_93bd16b22fe04b7faeaf259d5ff601ad"}}, "dc0af38189da41aa833a28be8fe11330": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3280087fe6c04149a770cf5870ceade1", "style": "IPY_MODEL_6c38aef54d04435a92de71c47ef30caf", "value": "<h4 id=\"ClassPerformance_HJ755NF4ZW9XA3KX7EEDTJVZH-section-WJR64\"><b>Class Performance</b></h4>"}}, "3280087fe6c04149a770cf5870ceade1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "6c38aef54d04435a92de71c47ef30caf": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "ea1fd227d6b143c6bb52d62bf3b31550": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_bcee5f216ebd470eacc72932341a7273", "style": "IPY_MODEL_951310657b2d465c87bfbac260eee80e", "value": "<p>Summarize given metrics on a dataset and model. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_class_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "bcee5f216ebd470eacc72932341a7273": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "951310657b2d465c87bfbac260eee80e": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "491773d8131e416589c17a3b7438763a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_7715ea0ab2b24d74b9b894bfe86af53e", "style": "IPY_MODEL_e87d834be4c44601b541ef402d2f8bd7", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_d0ba0_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_d0ba0_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_d0ba0_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_d0ba0_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_d0ba0_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_d0ba0_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_d0ba0_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_d0ba0_row0_col1\" class=\"data row0 col1\" >Train-Test scores relative degradation is less than 0.1</td>\n      <td id=\"T_d0ba0_row0_col2\" class=\"data row0 col2\" >7 scores failed. Found max degradation of 99.99% for metric Dice and class bicycle.</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "7715ea0ab2b24d74b9b894bfe86af53e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e87d834be4c44601b541ef402d2f8bd7": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "551a111849a24c1db18837accc6fddaa": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_1b0cf98d3a864610aec20b3c0207057f", "IPY_MODEL_f4b033d29783494d8d36e036b3e964da", "IPY_MODEL_6a618dfec6f34f9fbd14d745e936a255"], "layout": "IPY_MODEL_7a1ed31b151e4bc48e59a20c72e5bc41"}}, "1b0cf98d3a864610aec20b3c0207057f": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_814dde8e15c846abab0c6691e8617668", "style": "IPY_MODEL_1a40596917754ab287a9179474bfc8c8", "value": "<h5><b>Additional Outputs</b></h5>"}}, "814dde8e15c846abab0c6691e8617668": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "1a40596917754ab287a9179474bfc8c8": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "f4b033d29783494d8d36e036b3e964da": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.5.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Train<br>Metric=Dice<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Train", "marker": {"color": "#00008b", "pattern": {"shape": ""}}, "name": "Train", "offsetgroup": "Train", "orientation": "v", "showlegend": true, "x": ["background", "bicycle", "airplane", "bird", "motorcycle", "couch", "person", "dog", "chair", "dining table", "bottle", "potted plant", "car", "bus"], "xaxis": "x", "y": {"dtype": "float64", "shape": [14]}, "yaxis": "y", "type": "histogram", "uid": "017052eb-13b6-45be-a6fa-3ad9fa2a4784"}, {"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Test<br>Metric=Dice<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Test", "marker": {"color": "#69b3a2", "pattern": {"shape": ""}}, "name": "Test", "offsetgroup": "Test", "orientation": "v", "showlegend": true, "x": ["background", "cat", "tv", "motorcycle", "boat", "person", "bus", "dog", "bird", "airplane", "potted plant", "dining table", "couch", "car", "chair", "bottle", "bicycle"], "xaxis": "x", "y": {"dtype": "float64", "shape": [17]}, "yaxis": "y", "type": "histogram", "uid": "e2008f9a-7d14-4e7e-a39d-a62ba2ebab65"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"showarrow": false, "text": "Dice", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}], "barmode": "group", "legend": {"title": {"text": "Dataset"}, "tracegroupgap": 0}, "margin": {"t": 60}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "title": {"text": "Class"}, "type": "category"}, "yaxis": {"anchor": "x", "domain": [0.0, 1.0], "showticklabels": true, "title": {"text": "Value"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 0, "y", "buffer"], "data": "AAAAINPM7T8AAABgtsrtPwAAAIB8tuw/AAAAoA146z8AAACAJu/qPwAAACAI2OQ/AAAA4BxU5D8AAACAY5HjPwAAAECFQ98/AAAAQAwF3T8AAABg4XTaPwAAAKB4ANM/AAAAgIecxT8AAABgVeyAPg=="}, {"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "AAAAYE2+7T8AAABAly3sPwAAAKD8BOw/AAAAoGXH6z8AAABgT47pPwAAAICdXOg/AAAAgG+S5j8AAABARlTmPwAAAOA45eE/AAAAAFF44T8AAACgYRzbPwAAAKAZU9Y/AAAAgCJc0z8AAADgt3LMPwAAAIAhrL4/AAAA4KxxiT8AAABAhIO0Pg=="}]}, "6a618dfec6f34f9fbd14d745e936a255": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3d37102a5b07489d84a34c0fe3f51907", "style": "IPY_MODEL_3c3b98c339224dbea8261cfeb28d8254", "value": "<br><a href=\"#summary_HJ755NF4ZW9XA3KX7EEDTJVZH-section-WJR64\" style=\"font-size: 14px;\">Go to top</a>"}}, "3d37102a5b07489d84a34c0fe3f51907": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "3c3b98c339224dbea8261cfeb28d8254": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "7a1ed31b151e4bc48e59a20c72e5bc41": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "93bd16b22fe04b7faeaf259d5ff601ad": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b3e93c75f7584942be9f661fbbe8fc79": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_0fa17883ebd64241aa045df9d8251c6d", "style": "IPY_MODEL_4507d7b8489d41dab44d16410bc47701", "value": "<hr style=\"background-color: #eee;border: 0 none;color: #eee;height: 4px;\">"}}, "0fa17883ebd64241aa045df9d8251c6d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "4507d7b8489d41dab44d16410bc47701": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "f466a024631f47bd9ea44f3d122a010c": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_c7f9b762933e465f8beb5b042c26c551", "IPY_MODEL_add523dba1a646cc9bbc22ee004fc32c", "IPY_MODEL_bd82f330280b47f0aa117aa5b79839c0", "IPY_MODEL_988e6aa4430f4dd09013f8ee060ce663"], "layout": "IPY_MODEL_b207f965684d4dbfa64ea57384d4e3d7"}}, "c7f9b762933e465f8beb5b042c26c551": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_78b9f756b2ad41aa976e4553fb9c5fb2", "style": "IPY_MODEL_ecb4c3cef87f43e0ac547c18166cd61f", "value": "<h4 id=\"TrainTestPredictionDrift_HJ755NF4ZW9XA3KX7EEDTJVZH-section-WJR64\"><b>Train Test Prediction Drift</b></h4>"}}, "78b9f756b2ad41aa976e4553fb9c5fb2": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ecb4c3cef87f43e0ac547c18166cd61f": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "add523dba1a646cc9bbc22ee004fc32c": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_64cf7ca1bd254319a2f5dc33c043ba92", "style": "IPY_MODEL_9cb6f3e360df410cb0a496fd98dbb090", "value": "<p>    Calculate prediction drift between train dataset and test dataset, using statistical measures. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_train_test_prediction_drift.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "64cf7ca1bd254319a2f5dc33c043ba92": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9cb6f3e360df410cb0a496fd98dbb090": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "bd82f330280b47f0aa117aa5b79839c0": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_7bba55a593024984b1db4f67b6829d62", "style": "IPY_MODEL_86ceeac32063427497ec6100be9069f8", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_c7161_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_c7161_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_c7161_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_c7161_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_c7161_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_c7161_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_c7161_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_c7161_row0_col1\" class=\"data row0 col1\" >categorical drift score < 0.15 and numerical drift score < 0.075 for prediction drift</td>\n      <td id=\"T_c7161_row0_col2\" class=\"data row0 col2\" >Failed for 1 out of 3 prediction properties.\nFound 1 categorical prediction properties with Cramer's V above threshold: {'Samples Per Class': '0.2'}</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "7bba55a593024984b1db4f67b6829d62": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "86ceeac32063427497ec6100be9069f8": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "988e6aa4430f4dd09013f8ee060ce663": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_80b99afab3a845fabadca13c249207d0", "IPY_MODEL_088a3556a50b461bab979d3a462b1db4", "IPY_MODEL_a8912541a0434224b8cb3ddfb8245478", "IPY_MODEL_9a1c3aa7432f460a857ab0f17c31c9d1", "IPY_MODEL_bd27b92772424fdc9060650ebf0b95cb", "IPY_MODEL_ac983bb94a3c4b71a1fc0bc743ffb295", "IPY_MODEL_4e4eda4425c146f398e2b75d870ce9f0"], "layout": "IPY_MODEL_2e8ab61db48e41e68ae15c011291716f"}}, "80b99afab3a845fabadca13c249207d0": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_38b441a0ee8147628bf61cc9da2afa74", "style": "IPY_MODEL_cf1a871176dd4676b915f0508582e84f", "value": "<h5><b>Additional Outputs</b></h5>"}}, "38b441a0ee8147628bf61cc9da2afa74": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "cf1a871176dd4676b915f0508582e84f": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "088a3556a50b461bab979d3a462b1db4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_847061e28a8a4bdd9824dbf60fcfe521", "style": "IPY_MODEL_72ff507dc9a74e62a48d8b3b56ad4419", "value": "<div><span>The Drift score is a measure for the difference between two distributions. In this check, drift is measured for the distribution of the following prediction properties: ['Samples Per Class', 'Segment Area (in pixels)', 'Number of Classes Per Image']. </span></div>"}}, "847061e28a8a4bdd9824dbf60fcfe521": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "72ff507dc9a74e62a48d8b3b56ad4419": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "a8912541a0434224b8cb3ddfb8245478": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_bfff816767564e2c8724b808060098d5", "style": "IPY_MODEL_9d02a6caa47849c5ab9c8a04cc2c408f", "value": "<div>For discrete distribution plots, showing the top 10 categories with largest difference between train and test.</div>"}}, "bfff816767564e2c8724b808060098d5": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9d02a6caa47849c5ab9c8a04cc2c408f": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "9a1c3aa7432f460a857ab0f17c31c9d1": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.5.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"base": 0, "marker": {"color": "#01B8AA"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.1], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "b9dc23ed-ace0-46a7-9cce-81affb8c64ef"}, {"base": 0.1, "marker": {"color": "#F2C80F"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.1], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "3183a8d3-1799-4538-9979-d130a8d653a7"}, {"base": 0.2, "marker": {"color": "#FE9666"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.004158282380451822], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "6dcf725c-69ae-4045-9310-4db7dce77bf6"}, {"marker": {"color": "#00008b"}, "name": "Train Dataset", "x": ["bicycle", "boat", "bus", "car", "cat", "couch", "dining table", "person", "train", "tv"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y2", "type": "bar", "uid": "7df1f9e1-4b4a-4ca8-8353-730954c04aef"}, {"marker": {"color": "#69b3a2"}, "name": "Test Dataset", "x": ["bicycle", "boat", "bus", "car", "cat", "couch", "dining table", "person", "train", "tv"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y2", "type": "bar", "uid": "3a828851-975f-498e-a7b9-faac92589a18"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"font": {"size": 16}, "showarrow": false, "text": "Drift Score (Cramer's V)", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0000000000000002, "yanchor": "bottom", "yref": "paper"}, {"font": {"size": 16}, "showarrow": false, "text": "Distribution Plot", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 0.7200000000000001, "yanchor": "bottom", "yref": "paper"}], "bargroupgap": 0, "height": 400, "legend": {"title": {"text": "Legend"}, "y": 0.6, "yanchor": "top"}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Samples Per Class", "x": 0.5, "xanchor": "center"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "dtick": 0.05, "fixedrange": true, "gridcolor": "black", "linecolor": "black", "range": [0, 0.4], "showgrid": false}, "yaxis": {"anchor": "x", "autorange": true, "color": "black", "domain": [0.9200000000000002, 1.0], "fixedrange": true, "rangemode": "normal", "showgrid": false, "showline": false, "showticklabels": false, "zeroline": false}, "xaxis2": {"anchor": "y2", "domain": [0.0, 1.0], "range": [-3, 12], "type": "category"}, "yaxis2": {"anchor": "x2", "autorange": true, "domain": [0.0, 0.7200000000000001], "fixedrange": true, "rangemode": "normal", "title": {"text": "Frequency"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 3, "y", "buffer"], "data": "GHqhF3qhlz8AAAAAAAAAACD4gR/4gX8/GHqhF3qhpz8g+IEf+IF/PyD4gR/4gX8/IPiBH/iBrz+e2Imd2InNPxh6oRd6oZc/IPiBH/iBfz8="}, {"encoding": "base64", "path": ["_data", 4, "y", "buffer"], "data": "AAAAAAAAAAAAAAAAAACgPwAAAAAAAJg/AAAAAAAAgD8AAAAAAACkPwAAAAAAAKg/AAAAAAAAoD8AAAAAAADQPwAAAAAAAAAAAAAAAAAAmD8="}]}, "bd27b92772424fdc9060650ebf0b95cb": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.5.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"base": 0, "marker": {"color": "#01B8AA"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.06008454106280192], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "8e7e11ba-be9e-4798-894a-be2c97b8b295"}, {"marker": {"color": "#00008b"}, "name": "Train Dataset", "x": {"dtype": "float64", "shape": [5]}, "xaxis": "x2", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y2", "type": "bar", "uid": "f05a1899-791b-45b5-89ce-1922f35c279f"}, {"marker": {"color": "#69b3a2"}, "name": "Test Dataset", "x": {"dtype": "float64", "shape": [5]}, "xaxis": "x2", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y2", "type": "bar", "uid": "c63ed6a2-866e-4392-b815-5bfb98dd4cd0"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"font": {"size": 16}, "showarrow": false, "text": "Drift Score (Earth Mover's Distance)", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0000000000000002, "yanchor": "bottom", "yref": "paper"}, {"font": {"size": 16}, "showarrow": false, "text": "Distribution Plot", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 0.7200000000000001, "yanchor": "bottom", "yref": "paper"}], "bargroupgap": 0, "height": 400, "legend": {"title": {"text": "Legend"}, "y": 0.6, "yanchor": "top"}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Number of Classes Per Image", "x": 0.5, "xanchor": "center"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "dtick": 0.05, "fixedrange": true, "gridcolor": "black", "linecolor": "black", "range": [0, 0.4], "showgrid": false}, "yaxis": {"anchor": "x", "autorange": true, "color": "black", "domain": [0.9200000000000002, 1.0], "fixedrange": true, "rangemode": "normal", "showgrid": false, "showline": false, "showticklabels": false, "zeroline": false}, "xaxis2": {"anchor": "y2", "domain": [0.0, 1.0], "range": [-4.0, 10.0], "tickmode": "array", "ticks": "outside", "tickvals": {"dtype": "float64", "shape": [5]}}, "yaxis2": {"anchor": "x2", "autorange": true, "domain": [0.0, 0.7200000000000001], "fixedrange": true, "rangemode": "normal", "title": {"text": "Frequency"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 1, "x", "buffer"], "data": "AAAAAAAA8D8AAAAAAAAAQAAAAAAAAAhAAAAAAAAAEEAAAAAAAAAUQA=="}, {"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "AAAAAAAAAACrqqqqqqriP1VVVVVVVcU/q6qqqqqqyj9VVVVVVVWlPw=="}, {"encoding": "base64", "path": ["_data", 2, "x", "buffer"], "data": "AAAAAAAA8D8AAAAAAAAAQAAAAAAAAAhAAAAAAAAAEEAAAAAAAAAUQA=="}, {"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "OQUvp+DllD9orA+N9aHhP5IkSZIkSdI/OQUvp+DltD/Wh8b60FivPw=="}, {"encoding": "base64", "path": ["_layout", "xaxis2", "tickvals", "buffer"], "data": "AAAAAAAA8D8AAAAAAAAAQAAAAAAAAAhAAAAAAAAAEEAAAAAAAAAUQA=="}]}, "ac983bb94a3c4b71a1fc0bc743ffb295": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.5.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"base": 0, "marker": {"color": "#01B8AA"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.021894461506228625], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "4bad8263-0fce-47e4-ae47-1028123b66c2"}, {"fill": "tozeroy", "line": {"color": "#00008b", "shape": "spline"}, "name": "Train Dataset", "x": [1.0, 17.0, 23.64, 63.400000000000006, 108.88, 195.64000000000001, 245.2999999999999, 341.32000000000005, 357.8, 444.0, 771.1000000000001, 829.5600000000001, 1101.2400000000007, 1318.4799999999998, 1617.28, 2271.079999999998, 2729.3399999999997, 3157.32, 3167.7999999999997, 3580.74, 4023.2799999999997, 4371.999999999999, 5497.919999999997, 6430.440000000002, 6512.36, 7474.448979591837, 8627.28, 8662.16, 9844.800000000001, 9906.060000000003, 12141.840000000004, 12329.760000000002, 14828.640000000007, 14947.897959183674, 15791.800000000001, 17563.68, 17624.48, 18374.140000000003, 20148.6, 22421.34693877551, 22430.379999999997, 26974.360000000004, 28823.719999999998, 29894.79591836735, 31177.240000000016, 34371.0, 37244.67999999999, 37368.244897959186, 41875.280000000006, 42490.26000000001, 44841.69387755102, 44937.0, 52112.64000000001, 52315.14285714286, 54331.0, 54331.0, 59626.76000000001, 59788.5918367347, 63769.96, 66249.6, 67262.04081632654, 68858.74000000005, 69613.5, 69613.5, 73901.72, 74735.48979591837, 79791.4, 82208.9387755102, 87647.12000000001, 88569.48000000003, 89682.38775510204, 97155.83673469388, 101429.50000000015, 103269.23076923077, 104629.28571428572, 106423.96875, 112102.73469387756, 114466.02000000006, 119576.1836734694, 121357.8, 125925.79999999994, 127049.63265306123, 134308.08000000002, 134523.08163265308, 134798.8999999999, 141996.5306122449, 142072.28, 143344.16, 146886.28, 149469.97959183675, 149843.34, 154511.0, 156943.42857142858, 159688.24, 164416.8775510204, 165659.50000000006, 166673.0000000001, 171890.32653061225, 177806.88000000003, 179363.77551020408, 186837.22448979592, 187863.84000000003, 190321.94, 191151.75999999992, 194310.67346938775, 200994.72, 201784.12244897962, 207432.12000000002, 208437.80000000002, 209257.57142857145, 213601.46000000002, 216731.02040816328, 218286.6, 223899.8000000001, 224204.46938775512, 228665.72, 231677.91836734695, 233806.64000000007, 239151.3673469388, 241545.44, 244457.12000000002, 246624.81632653062, 252255.84, 254098.26530612246, 255705.72, 256882.52, 261571.7142857143, 261815.76, 266284.9, 269045.16326530615, 272007.5, 272683.04000000004, 276518.612244898, 279738.44, 283992.0612244898, 284729.84, 289231.68, 290330.0800000001, 291465.51020408166, 298274.24, 298938.9591836735, 303289.7, 303990.04, 306412.4081632653, 313885.85714285716, 321359.306122449, 328832.7551020408, 336306.20408163266, 343779.6530612245, 351253.10204081633, 358726.55102040817, 366200.0], "xaxis": "x2", "y": {"dtype": "float64", "shape": [152]}, "yaxis": "y2", "type": "scatter", "uid": "f2b97438-4b5b-410a-bea6-b4b2ea7e4e46"}, {"line": {"color": "#00008b", "dash": "dash"}, "mode": "lines+markers", "name": "Train Mean", "x": [103269.23076923077, 103269.23076923077], "xaxis": "x2", "y": [0, 1.449341524037898e-06], "yaxis": "y2", "type": "scatter", "uid": "b837e3d1-0548-4a8c-ae2f-45a8a9ae02cc"}, {"line": {"color": "#00008b"}, "mode": "lines", "name": "Train Median", "x": [54331.0, 54331.0], "xaxis": "x2", "y": [0, 3.25276677678517e-06], "yaxis": "y2", "type": "scatter", "uid": "6a559d29-7ca8-4684-b14a-d28fa32daca3"}, {"fill": "tozeroy", "line": {"color": "#69b3a2", "shape": "spline"}, "name": "Test Dataset", "x": [1.0, 17.0, 23.64, 63.400000000000006, 108.88, 195.64000000000001, 245.2999999999999, 341.32000000000005, 357.8, 444.0, 771.1000000000001, 829.5600000000001, 1101.2400000000007, 1318.4799999999998, 1617.28, 2271.079999999998, 2729.3399999999997, 3157.32, 3167.7999999999997, 3580.74, 4023.2799999999997, 4371.999999999999, 5497.919999999997, 6430.440000000002, 6512.36, 7474.448979591837, 8627.28, 8662.16, 9844.800000000001, 9906.060000000003, 12141.840000000004, 12329.760000000002, 14828.640000000007, 14947.897959183674, 15791.800000000001, 17563.68, 17624.48, 18374.140000000003, 20148.6, 22421.34693877551, 22430.379999999997, 26974.360000000004, 28823.719999999998, 29894.79591836735, 31177.240000000016, 34371.0, 37244.67999999999, 37368.244897959186, 41875.280000000006, 42490.26000000001, 44841.69387755102, 44937.0, 52112.64000000001, 52315.14285714286, 54331.0, 54331.0, 59626.76000000001, 59788.5918367347, 63769.96, 66249.6, 67262.04081632654, 68858.74000000005, 69613.5, 69613.5, 73901.72, 74735.48979591837, 79791.4, 82208.9387755102, 87647.12000000001, 88569.48000000003, 89682.38775510204, 97155.83673469388, 101429.50000000015, 103269.23076923077, 104629.28571428572, 106423.96875, 112102.73469387756, 114466.02000000006, 119576.1836734694, 121357.8, 125925.79999999994, 127049.63265306123, 134308.08000000002, 134523.08163265308, 134798.8999999999, 141996.5306122449, 142072.28, 143344.16, 146886.28, 149469.97959183675, 149843.34, 154511.0, 156943.42857142858, 159688.24, 164416.8775510204, 165659.50000000006, 166673.0000000001, 171890.32653061225, 177806.88000000003, 179363.77551020408, 186837.22448979592, 187863.84000000003, 190321.94, 191151.75999999992, 194310.67346938775, 200994.72, 201784.12244897962, 207432.12000000002, 208437.80000000002, 209257.57142857145, 213601.46000000002, 216731.02040816328, 218286.6, 223899.8000000001, 224204.46938775512, 228665.72, 231677.91836734695, 233806.64000000007, 239151.3673469388, 241545.44, 244457.12000000002, 246624.81632653062, 252255.84, 254098.26530612246, 255705.72, 256882.52, 261571.7142857143, 261815.76, 266284.9, 269045.16326530615, 272007.5, 272683.04000000004, 276518.612244898, 279738.44, 283992.0612244898, 284729.84, 289231.68, 290330.0800000001, 291465.51020408166, 298274.24, 298938.9591836735, 303289.7, 303990.04, 306412.4081632653, 313885.85714285716, 321359.306122449, 328832.7551020408, 336306.20408163266, 343779.6530612245, 351253.10204081633, 358726.55102040817, 366200.0], "xaxis": "x2", "y": {"dtype": "float64", "shape": [152]}, "yaxis": "y2", "type": "scatter", "uid": "e6344917-2798-4b2c-88eb-30740ca00018"}, {"line": {"color": "#69b3a2", "dash": "dash"}, "mode": "lines+markers", "name": "Test Mean", "x": [106423.96875, 106423.96875], "xaxis": "x2", "y": [0, 1.9200704097978044e-06], "yaxis": "y2", "type": "scatter", "uid": "e0c7b2dc-d137-4e6b-8fc9-422a6d38a229"}, {"line": {"color": "#69b3a2"}, "mode": "lines", "name": "Test Median", "x": [69613.5, 69613.5], "xaxis": "x2", "y": [0, 2.965326604625708e-06], "yaxis": "y2", "type": "scatter", "uid": "98e8689b-dd74-4b9d-b1ee-bfc71d911615"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"font": {"size": 16}, "showarrow": false, "text": "Drift Score (Earth Mover's Distance)", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0000000000000002, "yanchor": "bottom", "yref": "paper"}, {"font": {"size": 16}, "showarrow": false, "text": "Distribution Plot", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 0.7200000000000001, "yanchor": "bottom", "yref": "paper"}], "bargroupgap": 0, "height": 400, "legend": {"title": {"text": "Legend"}, "y": 0.6, "yanchor": "top"}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Segment Area (in pixels)", "x": 0.5, "xanchor": "center"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "dtick": 0.05, "fixedrange": true, "gridcolor": "black", "linecolor": "black", "range": [0, 0.4], "showgrid": false}, "yaxis": {"anchor": "x", "autorange": true, "color": "black", "domain": [0.9200000000000002, 1.0], "fixedrange": true, "rangemode": "normal", "showgrid": false, "showline": false, "showticklabels": false, "zeroline": false}, "xaxis2": {"anchor": "y2", "domain": [0.0, 1.0], "fixedrange": false, "range": [17.0, 303990.04], "title": {"text": "Segment Area (in pixels)"}}, "yaxis2": {"anchor": "x2", "domain": [0.0, 0.7200000000000001], "fixedrange": true, "title": {"text": "Probability Density"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "j/Pg6g+G2j61YD2cVYfaPggd0qPch9o+0BgHjwOL2j6lG3shm47aPkm0ni1rldo+Av1SbEuZ2j7sYDuFvaDaPqd/HgMDoto+/sd/naGo2j45EP7KRsHaPgCw0BOaxdo+GU+9rGLZ2j79wSC90+jaPj91FLCD/do+Gsz4Gogo2z6I0e9I00TbPpcaXGjaXds+7ohX8nJe2z43Urj/RnXbPj8n1yZUjNs+ettWHHWd2z5PxPIufM7bPk6EGk/J79s+xJgY7GTy2z53xmj7LA3cPlLtsHvuI9w+MWEGMnYk3D6K0KFW9DDcPhkROPlPMdw+dkm8iyEr3D41lfy+7CjcPi6TS5J889s+P5NfG9fv2z7/cMIcRtPbPnSQgTL/h9s+1VoLvg6F2z63g4lj8F7bPtLrV6ti99o+1mJ3SXlZ2j6QEmYuy1jaPj55Xcd91dg+jRH0uDAi2D7JRTcz57XXPmDcNwinMNc+AARDVv3X1T4Uwej2qJjUPsO56mbXitQ+whxPAGGU0j5/V58dq1DSPsicv6FaUdE+vELuTiVH0T5pOn10COLMPj/OmZXbu8w+lNJeckNJyz6U0l5yQ0nLPqtLZiTX0Mc+/TRZ1K23xz4s6o/n6HHFPqLsnPtbK8Q+Kvzcrcatwz55Knn5svDCPvgddtYZm8I++B121hmbwj6VlwftqOHAPs8Oxlt+lMA+Bn4KV1z1vT61vDjr6LG8Pj0ruUlpdbo+fwdEawQpuj48m9Guo9S5PkWTsizncrg+FvhcA85EuD5Eb7nb31C4PjPEDN9UZbg+Qyr3xYeOuD4zQDm7VW+5PosTAkKB8Lk+yVEVf3A7uz4YBYYgmLq7Pka06nIJDr0+qdHVr3VivT6iGLljtGy/Ptst0McPe78+ykUM41mNvz5puUPSR5bAPja5CNcZmMA+5KneYme1wD5WWxlOA/rAPqoWw/GjH8E+KiVj6jQkwT6T/CqfMEvBPonHM/znUsE+TRHypllSwT5HVImSMD7BPgYMU/uuNcE++pRHe/otwT4u025X8f7APvccU4smxsA+vXFZYZG4wD63L80P14nAPiuogBR1hsA+2fUdLMaBwD4+ewsZToHAPqD4S2KwhMA+AOEajGClwD6yIe/ZR6vAPn1D0k5Z38A+DuIKdhjqwD5NxePOG/PAPj517AW5JcE+KCbxgetLwT5FzXXoDl/BPgcikRHlosE+KFk7u3amwT4aTg+TkdjBPm9PZgqI98E+yFB/lKsLwj7FSrsGVDbCPnIzKOH3RMI+i17TmCxSwj4/j08GNFjCPlnQbjEzVcI+cX7usENNwj6qNE6/GEPCPon1El+ZOcI+ggPEgK4Awj6VSmlM0vzBPgXN0+jgpME+5sDQSkNdwT6hh5884QDBPglrdoaE6cA+0hPyi6FUwD4myXmBSYW/PkHiO7UzzL0+MWtUwL95vT4Pk+IVUWG7Ptm8YZPB1ro+PA0xw9lEuj7yS3XC/rC2PlgFEFhSVbY+KpaVN8j8sz4BeaozxZyzPve9OQ0cVLI+6YvC/1kyrT6Jb5lBU9SmPhm4sCgs2KE+c6l+gdF7nD5uhqaYUZCXPnkljHPxL5Q+2W+Ytb2ZkT6qfpBXx3iOPg=="}, {"encoding": "base64", "path": ["_data", 4, "y", "buffer"], "data": "sVUyKZn91z40nym34v7XPl6MDl1r/9c+K3bEKpwC2D7wcQ90PwbYPqVLvw0nDdg+IH8bfhUR2D7vg9OBpBjYPso6QCjvGdg+Lg6VrKkg2D77duwJxznYPqa2My8yPtg+A3ucKXNS2D5V1G29T2LYPsX3te+jd9g+w98UB1Kk2D71fvv0/cHYPrpkSRt33Ng+nwrmMhnd2D5ofhJuePXYPpHPiL1VDtk+0ryiHgIh2T5ceNypuFfZPqLaaCiKftk+9IxfzqqB2T7067qM+aLZPhJA6pSTwtk+MTgVRGTD2T5JGMgpJ9rZPpOjgiIT29k+O8ThdZzr2T60J3nigOvZPumSAza71Nk+jskAEa3S2T5s6a2qssHZPn96t3OdkNk+iSOLeJ6O2T5LXlX9XnTZPjG0L8arKtk+ai8RJYm22D4ea5aKB7bYPhMmGYS7kdc+otM2qj8J1z61cLkZzLbWPt/rrHJxUdY+LY9v6nxM1T7+9V/BJF3UPsPgliPaUtQ+qV1kYg/h0j5UZihF8q/SPh6mhHRv+NE+quHklSfx0T62kjznKO3PPgg2gw8Z088+UnytvFbXzj5SfK28VtfOPh0wK7xNgcw+1TiOWF5wzD5EIW31eOXKPkM5qgkgAso+DMwGWcaoyT4RHZ45eh/JPkb+fIr938g+Rv58iv3fyD5d0Dgc2IXHPrLK+rYHRcc+2S2IHUXKxT6ZtER3QB3FPlFBAV29rMM+aNBNL4Rxwz7LcWA8hSvDPiRKxS90h8E+9l0/fETHwD5J7wwjFIHAPkiYrDtLUsA+XLnw3lEbwD6cWp58B0C/PtlXS5fuBL8+QzSClpjRvj53UKF1ltS+PnN8SROGAL8+N/ahMEURvz4qJAV53JO/PrA+01zDl78+jqLjmbucvz7V8TFbKwLAPon4XWSIAsA+0G4XcPIHwD4EeEKv3g/APrYSkTblDsA+uwCC6ksOwD7xgRNgB/y/PiLSr5s04L8+dHdwlaa6vz4URKvwl3K/PvEuRJOWX78+3MqR5GhQvz6nGRm7RQu/PpppkLle2b4+5PnP7kLSvj6nNMpsCtG+Pgbuj/B41L4+Rowxkkbfvj7FNYxCneO+PirxZyZu9r4+RyNescojvz53z0jWOim/Ps8skj6zT78+6GgPEpdWvz6k8WP2RFy/Pg7iKD5hfL8+JYsHem2Xvz4U5b3Wxaa/PscMtSzu7L8+PA4uuIbxvz56qlVs1h/APoESrBRIQMA+6vUDYS9awD7AlQamKKXAPjlzGLaOysA+OyiYwS/6wD6E/WhLgx7BPlgZJOble8E+Dl5lV8GYwT4U+ODJr7DBPirs3oFLwcE+JoYK8WP5wT7rcAHgx/vBPrOBd7LuG8I+4CdSwQQjwj7Tp0A7yB3CPrBtC1ONGsI+/AeWK4b4wT4WHtHFrsXBPkJN8EppYME+XGHIq7NKwT55T+Dky6rAPi3URF2QfMA+rkeSRM1JwD6S4EUYFri9PnjHSCH/Zb0+CJxyqXAjuz57w4LLNcC6PoI9Li3XXbk+/qqZNPHKtD5Tw4aoJxmwPqVMJuIUbqc+CGDNvZ3snz7zGIBRqkuUPkZ7mR0lBYg+bDtHosNoej7yd+VXxu5qPg=="}]}, "4e4eda4425c146f398e2b75d870ce9f0": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_22b220001cb74c938c7f7cb125b993de", "style": "IPY_MODEL_9142d558e4d6449a901dfe397d037ed1", "value": "<br><a href=\"#summary_HJ755NF4ZW9XA3KX7EEDTJVZH-section-WJR64\" style=\"font-size: 14px;\">Go to top</a>"}}, "22b220001cb74c938c7f7cb125b993de": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9142d558e4d6449a901dfe397d037ed1": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "2e8ab61db48e41e68ae15c011291716f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b207f965684d4dbfa64ea57384d4e3d7": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d142615d48384b41952ee0087c400548": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_7bd6fe17b0ba492db061e8d1281172e4", "IPY_MODEL_1988a32e674f484a805d594cd3505f6b", "IPY_MODEL_a05dc40617c44c3f95dd2e0ba901f529", "IPY_MODEL_3bd120d7122c461ca01b7abee15b3d5d"], "layout": "IPY_MODEL_3b256020da254cc89543318cb684fa3c"}}, "7bd6fe17b0ba492db061e8d1281172e4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_d2e1e599b01e42e3ba5d76d9a45636d1", "style": "IPY_MODEL_a5202d562eaa44b395065fa3adb5d6d4", "value": "<h4 id=\"ImageSegmentPerformance-TestDataset_HJ755NF4ZW9XA3KX7EEDTJVZH-section-WJR64\"><b>Image Segment Performance - Test Dataset</b></h4>"}}, "d2e1e599b01e42e3ba5d76d9a45636d1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a5202d562eaa44b395065fa3adb5d6d4": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "1988a32e674f484a805d594cd3505f6b": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_9315086e95974864bb805b9fcdb39288", "style": "IPY_MODEL_40e07d790f1e4f438489a2a3f9605bd8", "value": "<p>Segment the data by various properties of the image, and compare the performance of the segments. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_image_segment_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "9315086e95974864bb805b9fcdb39288": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "40e07d790f1e4f438489a2a3f9605bd8": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "a05dc40617c44c3f95dd2e0ba901f529": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_d41aeb6bf3e3474f9a5a635f0bc8b430", "style": "IPY_MODEL_90ecdfbdbec846c09cdcea1df8bb7442", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_587fc_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_587fc_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_587fc_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_587fc_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_587fc_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_587fc_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_587fc_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_587fc_row0_col1\" class=\"data row0 col1\" >Segment's ratio between score to mean is greater than 80%</td>\n      <td id=\"T_587fc_row0_col2\" class=\"data row0 col2\" >Properties with failed segments: Brightness: {'Range': '[0.32, 0.4)', 'Metric': 'Dice', 'Ratio': 0.43}, Mean Blue Relative Intensity: {'Range': '(-inf, 0.22)', 'Metric': 'Dice', 'Ratio': 0.45}, Mean Green Relative Intensity: {'Range': '[0.304, 0.328)', 'Metric': 'Dice', 'Ratio': 0.71}, Mean Red Relative Intensity: {'Range': '(-inf, 0.33)', 'Metric': 'Dice', 'Ratio': 0.68}, RMS Contrast: {'Range': '(-inf, 0.18)', 'Metric': 'Dice', 'Ratio': 0.0}</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "d41aeb6bf3e3474f9a5a635f0bc8b430": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "90ecdfbdbec846c09cdcea1df8bb7442": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "3bd120d7122c461ca01b7abee15b3d5d": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_08efcec441474bcb8eb6606e2cab4b1f", "IPY_MODEL_4a68cc3e06ce4448a614e9c3710dc8eb", "IPY_MODEL_2d71ef7633cf4a7ab840cc8344cba34a"], "layout": "IPY_MODEL_8466c1cf1f8b47d783b195be21dde112"}}, "08efcec441474bcb8eb6606e2cab4b1f": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_931994e021d14a25b580ce49242d4157", "style": "IPY_MODEL_72e34dfa4a8547bfb1dd4536188c2826", "value": "<h5><b>Additional Outputs</b></h5>"}}, "931994e021d14a25b580ce49242d4157": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "72e34dfa4a8547bfb1dd4536188c2826": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "4a68cc3e06ce4448a614e9c3710dc8eb": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.5.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"alignmentgroup": "True", "customdata": [[10], [10], [9], [10], [10]], "hovertemplate": "Metric=Dice<br>Property=Brightness<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Dice", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Dice", "offsetgroup": "Dice", "orientation": "v", "showlegend": true, "textposition": "auto", "width": 0.2, "x": ["(-inf, 0.32)", "[0.32, 0.4)", "[0.4, 0.46)", "[0.46, 0.51)", "[0.51, inf)"], "xaxis": "x", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y", "type": "bar", "uid": "cb5e38ab-b5d2-456d-a09b-64b190ac7511"}, {"alignmentgroup": "True", "customdata": [[10], [10], [9], [10], [10]], "hovertemplate": "Metric=Dice<br>Property=RMS Contrast<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Dice", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Dice", "offsetgroup": "Dice", "orientation": "v", "showlegend": false, "textposition": "auto", "width": 0.2, "x": ["(-inf, 0.18)", "[0.18, 0.21)", "[0.21, 0.24)", "[0.24, 0.27)", "[0.27, inf)"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y2", "type": "bar", "uid": "f0b2a1d5-55c0-45bc-b0e9-5fc2a3c78199"}, {"alignmentgroup": "True", "customdata": [[10], [10], [9], [10], [10]], "hovertemplate": "Metric=Dice<br>Property=Mean Blue Relative Intensity<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Dice", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Dice", "offsetgroup": "Dice", "orientation": "v", "showlegend": false, "textposition": "auto", "width": 0.2, "x": ["(-inf, 0.22)", "[0.22, 0.29)", "[0.29, 0.32)", "[0.32, 0.35)", "[0.35, inf)"], "xaxis": "x3", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y3", "type": "bar", "uid": "474a391d-bb9f-4291-a973-bd96be3df2a4"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"showarrow": false, "text": "Brightness", "x": 0.14666666666666667, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "RMS Contrast", "x": 0.49, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Mean Blue Relative Intensity", "x": 0.8333333333333333, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Dice", "textangle": 90, "x": 0.98, "xanchor": "left", "xref": "paper", "y": 0.5, "yanchor": "middle", "yref": "paper"}], "barmode": "group", "legend": {"title": {"text": "Metric"}, "tracegroupgap": 0}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Metric Score Per Property Value Segment (showing top 3 properties by diffrence in segments)"}, "xaxis": {"anchor": "y", "domain": [0.0, 0.29333333333333333], "type": "category"}, "yaxis": {"anchor": "x", "domain": [0.0, 1.0], "showticklabels": true}, "xaxis2": {"anchor": "y2", "domain": [0.3433333333333333, 0.6366666666666667], "type": "category"}, "yaxis2": {"anchor": "x2", "domain": [0.0, 1.0], "matches": "y", "showticklabels": true}, "xaxis3": {"anchor": "y3", "domain": [0.6866666666666666, 0.98], "type": "category"}, "yaxis3": {"anchor": "x3", "domain": [0.0, 1.0], "matches": "y", "showticklabels": true}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 0, "y", "buffer"], "data": "AAAAIBGq5j8AAADAuRDSPwAAAEAHwuY/AAAAoLyt6D8AAADwa9boPw=="}, {"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "AAAAwOKWvT4AAABoD6/gPwAAACAEVuU/AAAAgDwR6z8AAADAtuvqPw=="}, {"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "AAAAwLkQ0j8AAABAEVrmPwAAAOCpgeo/AAAAwE386D8AAAAQfZXhPw=="}]}, "2d71ef7633cf4a7ab840cc8344cba34a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_18cb1132c5254bbaa6cb693d20274a51", "style": "IPY_MODEL_68eceeac273347c3a618b7d27ccbd128", "value": "<br><a href=\"#summary_HJ755NF4ZW9XA3KX7EEDTJVZH-section-WJR64\" style=\"font-size: 14px;\">Go to top</a>"}}, "18cb1132c5254bbaa6cb693d20274a51": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "68eceeac273347c3a618b7d27ccbd128": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "8466c1cf1f8b47d783b195be21dde112": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "3b256020da254cc89543318cb684fa3c": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "7ea5491ae46b4d16a651e923548fb151": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_1afc5aa5c5134d75bc3c1d786dc02af4", "IPY_MODEL_17434af74a7e435b937a01708d6c9f3e", "IPY_MODEL_eb96f6dabbf44d46a525f5b737400d18", "IPY_MODEL_2d0b0b9db9d64559a081b2eb0dc8c40d"], "layout": "IPY_MODEL_e4f346f4d6664bf7bf6783d2c2087fa4"}}, "1afc5aa5c5134d75bc3c1d786dc02af4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c71c6951f1314e7aab5afe6259b6dfa3", "style": "IPY_MODEL_dbd74f1c5fee4a6b8a11217aea2721c4", "value": "<h4 id=\"ImageSegmentPerformance-TrainDataset_HJ755NF4ZW9XA3KX7EEDTJVZH-section-WJR64\"><b>Image Segment Performance - Train Dataset</b></h4>"}}, "c71c6951f1314e7aab5afe6259b6dfa3": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "dbd74f1c5fee4a6b8a11217aea2721c4": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "17434af74a7e435b937a01708d6c9f3e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_e6b18658636b4d1982140ba494222de1", "style": "IPY_MODEL_8b1beadc7272413783aae8f9148a3eac", "value": "<p>Segment the data by various properties of the image, and compare the performance of the segments. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_image_segment_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "e6b18658636b4d1982140ba494222de1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "8b1beadc7272413783aae8f9148a3eac": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "eb96f6dabbf44d46a525f5b737400d18": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_20bff3864c2f4b67b642ba5dd77b4ec6", "style": "IPY_MODEL_4236930c997d476e9a8a3c3e671f3b39", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_63c0f_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_63c0f_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_63c0f_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_63c0f_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_63c0f_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_63c0f_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_63c0f_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_63c0f_row0_col1\" class=\"data row0 col1\" >Segment's ratio between score to mean is greater than 80%</td>\n      <td id=\"T_63c0f_row0_col2\" class=\"data row0 col2\" >Properties with failed segments: Area: {'Range': '(-inf, 268,288)', 'Metric': 'Dice', 'Ratio': 0.54}, Mean Blue Relative Intensity: {'Range': '[0.3, 0.32)', 'Metric': 'Dice', 'Ratio': 0.58}, Mean Green Relative Intensity: {'Range': '[0.373, inf)', 'Metric': 'Dice', 'Ratio': 0.71}, Mean Red Relative Intensity: {'Range': '[0.32, 0.34)', 'Metric': 'Dice', 'Ratio': 0.75}</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "20bff3864c2f4b67b642ba5dd77b4ec6": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "4236930c997d476e9a8a3c3e671f3b39": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "2d0b0b9db9d64559a081b2eb0dc8c40d": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_0a149d1079194868b9c9d11c3a595b27", "IPY_MODEL_0e4fd987c9744dc4b013956e371f4040", "IPY_MODEL_3acf626901bd42958cef2a98ce2daa58"], "layout": "IPY_MODEL_853997c262df4ad7b7875ccea3f7e42a"}}, "0a149d1079194868b9c9d11c3a595b27": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_d31946de4fce4bafb5d6c4f3dbc94145", "style": "IPY_MODEL_61adb8ccdae04a929dc874c20dc21012", "value": "<h5><b>Additional Outputs</b></h5>"}}, "d31946de4fce4bafb5d6c4f3dbc94145": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "61adb8ccdae04a929dc874c20dc21012": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "0e4fd987c9744dc4b013956e371f4040": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.5.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"alignmentgroup": "True", "customdata": [[10], [9], [6], [13], [10]], "hovertemplate": "Metric=Dice<br>Property=Area<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Dice", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Dice", "offsetgroup": "Dice", "orientation": "v", "showlegend": true, "textposition": "auto", "width": 0.2, "x": ["(-inf, 268,288)", "[268,288, 273,792)", "[273,792, 307,200)", "[307,200, 307,584)", "[307,584, inf)"], "xaxis": "x", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y", "type": "bar", "uid": "ceb8e72a-82d1-4eba-8bd1-97c4011088a2"}, {"alignmentgroup": "True", "customdata": [[10], [9], [10], [9], [10]], "hovertemplate": "Metric=Dice<br>Property=Mean Red Relative Intensity<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Dice", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Dice", "offsetgroup": "Dice", "orientation": "v", "showlegend": false, "textposition": "auto", "width": 0.2, "x": ["(-inf, 0.32)", "[0.32, 0.34)", "[0.34, 0.35)", "[0.35, 0.38)", "[0.38, inf)"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y2", "type": "bar", "uid": "88a1ddf1-dc61-4b46-9273-b2424a2f0394"}, {"alignmentgroup": "True", "customdata": [[10], [9], [10], [9], [10]], "hovertemplate": "Metric=Dice<br>Property=Mean Blue Relative Intensity<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Dice", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Dice", "offsetgroup": "Dice", "orientation": "v", "showlegend": false, "textposition": "auto", "width": 0.2, "x": ["(-inf, 0.26)", "[0.26, 0.3)", "[0.3, 0.32)", "[0.32, 0.33)", "[0.33, inf)"], "xaxis": "x3", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y3", "type": "bar", "uid": "ea61fad3-640a-4265-a013-df0a800bc22d"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"showarrow": false, "text": "Area", "x": 0.14666666666666667, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Mean Red Relative Intensity", "x": 0.49, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Mean Blue Relative Intensity", "x": 0.8333333333333333, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Dice", "textangle": 90, "x": 0.98, "xanchor": "left", "xref": "paper", "y": 0.5, "yanchor": "middle", "yref": "paper"}], "barmode": "group", "legend": {"title": {"text": "Metric"}, "tracegroupgap": 0}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Metric Score Per Property Value Segment (showing top 3 properties by diffrence in segments)"}, "xaxis": {"anchor": "y", "domain": [0.0, 0.29333333333333333], "type": "category"}, "yaxis": {"anchor": "x", "domain": [0.0, 1.0], "showticklabels": true}, "xaxis2": {"anchor": "y2", "domain": [0.3433333333333333, 0.6366666666666667], "type": "category"}, "yaxis2": {"anchor": "x2", "domain": [0.0, 1.0], "matches": "y", "showticklabels": true}, "xaxis3": {"anchor": "y3", "domain": [0.6866666666666666, 0.98], "type": "category"}, "yaxis3": {"anchor": "x3", "domain": [0.0, 1.0], "matches": "y", "showticklabels": true}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 0, "y", "buffer"], "data": "AAAAwMOX1D8AAACwOQjsPwAAAOCNn+g/AAAAsCkA4T8AAADgwPLePw=="}, {"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "AAAAoJjR6j8AAADgZMDbPwAAAABGct4/AAAAUEdT3j8AAAAgCNjkPw=="}, {"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "AAAAAGY56j8AAABAgKrfPwAAAKCgAdg/AAAAIO9n5j8AAACgDXjrPw=="}]}, "3acf626901bd42958cef2a98ce2daa58": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_922258a7d02b4112a2979bfa95bfb477", "style": "IPY_MODEL_b0fcf8960e9d4593bd27bbbac31b6b35", "value": "<br><a href=\"#summary_HJ755NF4ZW9XA3KX7EEDTJVZH-section-WJR64\" style=\"font-size: 14px;\">Go to top</a>"}}, "922258a7d02b4112a2979bfa95bfb477": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b0fcf8960e9d4593bd27bbbac31b6b35": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "853997c262df4ad7b7875ccea3f7e42a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e4f346f4d6664bf7bf6783d2c2087fa4": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "0901ed1203f044509c2b14f18736ec5e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "0d6e42967e5649b0998202febd95891d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "4e90a832b0df497b88d16e31fec31b57": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a9d4b8852f694ca593a6e2732b64cdd5": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_883f3f1dfa0b44d4baa989126112ba10", "IPY_MODEL_849cd1a74f3c490294c73c503c974535"], "layout": "IPY_MODEL_d812a4dff2e340cc9848a464cf823112"}}, "883f3f1dfa0b44d4baa989126112ba10": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_282ce4727ad941179eda5103a284d5e4", "style": "IPY_MODEL_69a04eb7d3284e8caafc5e254415c560"}}, "282ce4727ad941179eda5103a284d5e4": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "69a04eb7d3284e8caafc5e254415c560": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "849cd1a74f3c490294c73c503c974535": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "_titles": {"0": "Passed"}, "children": ["IPY_MODEL_d147b3f97af745a08e881a0fd51b6e00"], "layout": "IPY_MODEL_8051353c6d324cebab9a995944cc0b0b", "selected_index": null}}, "d147b3f97af745a08e881a0fd51b6e00": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_90e7cd6507a44692bad27dda20c7e684", "style": "IPY_MODEL_6ef3d833a0834d948f4dbe082da63805", "value": "<p>No outputs to show.</p>"}}, "90e7cd6507a44692bad27dda20c7e684": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "6ef3d833a0834d948f4dbe082da63805": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "8051353c6d324cebab9a995944cc0b0b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d812a4dff2e340cc9848a464cf823112": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "fff8161110274b129f9fb27f91a33b53": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_868305cfeb014db4a4fbd5f3c2cf2d7c", "IPY_MODEL_44033b85a24145bf9ab9341a3a2fdc76"], "layout": "IPY_MODEL_5a1542221b6342da91297fc59ae6d32e"}}, "868305cfeb014db4a4fbd5f3c2cf2d7c": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_a850fa0064474a809a61dd75f5fd5fa2", "style": "IPY_MODEL_5e7ac7bec3094c64be9b89233ee6f047"}}, "a850fa0064474a809a61dd75f5fd5fa2": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "5e7ac7bec3094c64be9b89233ee6f047": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "44033b85a24145bf9ab9341a3a2fdc76": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "_titles": {"0": "Other"}, "children": ["IPY_MODEL_cb6798794f5c4b71924fb86e8f76f45e"], "layout": "IPY_MODEL_c459354570d147d29a669b9037b877ea", "selected_index": null}}, "cb6798794f5c4b71924fb86e8f76f45e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_a3503444e2c84e779e722efaa17e3e78", "style": "IPY_MODEL_6d605fd87c8e4e65b4462469f999e25b", "value": "<p>No outputs to show.</p>"}}, "a3503444e2c84e779e722efaa17e3e78": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "6d605fd87c8e4e65b4462469f999e25b": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "c459354570d147d29a669b9037b877ea": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "5a1542221b6342da91297fc59ae6d32e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "219b420c3ffc43828ee77895662de0db": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_c0608d4b0dac418aacaa8e14cf808c90", "IPY_MODEL_f7455173fd654d389cdb1e7bd0439e84"], "layout": "IPY_MODEL_de0caf6fec5743bf8e4fba722d5892ec"}}, "c0608d4b0dac418aacaa8e14cf808c90": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3fcaa71e716e4dd1b949b9acb440428a", "style": "IPY_MODEL_9f5fba49812e4400b17a8eec090114b1"}}, "3fcaa71e716e4dd1b949b9acb440428a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9f5fba49812e4400b17a8eec090114b1": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "f7455173fd654d389cdb1e7bd0439e84": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "_titles": {"0": "Didn't Run"}, "children": ["IPY_MODEL_5c078a1a0a7344e683c3802778db324b"], "layout": "IPY_MODEL_39293cf9ce7b4022a7b99140ec2ccad5", "selected_index": null}}, "5c078a1a0a7344e683c3802778db324b": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c90e60955f714f968ba9d6b8397f34cd", "style": "IPY_MODEL_3fd960b19cea4d95877f1c575a4ecff7", "value": "<style type=\"text/css\">\n#T_0640d_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_0640d_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_0640d_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_0640d_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_0640d_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_0640d_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Check</th>\n      <th class=\"col_heading level0 col1\" >Reason</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_0640d_row0_col0\" class=\"data row0 col0\" >Mean Average Precision Report - Test Dataset</td>\n      <td id=\"T_0640d_row0_col1\" class=\"data row0 col1\" >Check is irrelevant for task of type TaskType.SEMANTIC_SEGMENTATION</td>\n    </tr>\n    <tr>\n      <td id=\"T_0640d_row1_col0\" class=\"data row1 col0\" >Mean Average Precision Report - Train Dataset</td>\n      <td id=\"T_0640d_row1_col1\" class=\"data row1 col1\" >Check is irrelevant for task of type TaskType.SEMANTIC_SEGMENTATION</td>\n    </tr>\n    <tr>\n      <td id=\"T_0640d_row2_col0\" class=\"data row2 col0\" >Mean Average Recall Report - Test Dataset</td>\n      <td id=\"T_0640d_row2_col1\" class=\"data row2 col1\" >Check is irrelevant for task of type TaskType.SEMANTIC_SEGMENTATION</td>\n    </tr>\n    <tr>\n      <td id=\"T_0640d_row3_col0\" class=\"data row3 col0\" >Mean Average Recall Report - Train Dataset</td>\n      <td id=\"T_0640d_row3_col1\" class=\"data row3 col1\" >Check is irrelevant for task of type TaskType.SEMANTIC_SEGMENTATION</td>\n    </tr>\n    <tr>\n      <td id=\"T_0640d_row4_col0\" class=\"data row4 col0\" >Simple Model Comparison</td>\n      <td id=\"T_0640d_row4_col1\" class=\"data row4 col1\" >Check is irrelevant for task of type TaskType.SEMANTIC_SEGMENTATION</td>\n    </tr>\n    <tr>\n      <td id=\"T_0640d_row5_col0\" class=\"data row5 col0\" >Confusion Matrix Report - Test Dataset</td>\n      <td id=\"T_0640d_row5_col1\" class=\"data row5 col1\" >Check is irrelevant for task of type TaskType.SEMANTIC_SEGMENTATION</td>\n    </tr>\n    <tr>\n      <td id=\"T_0640d_row6_col0\" class=\"data row6 col0\" >Confusion Matrix Report - Train Dataset</td>\n      <td id=\"T_0640d_row6_col1\" class=\"data row6 col1\" >Check is irrelevant for task of type TaskType.SEMANTIC_SEGMENTATION</td>\n    </tr>\n    <tr>\n      <td id=\"T_0640d_row7_col0\" class=\"data row7 col0\" >Model Error Analysis</td>\n      <td id=\"T_0640d_row7_col1\" class=\"data row7 col1\" >Check is irrelevant for task of type TaskType.SEMANTIC_SEGMENTATION</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "c90e60955f714f968ba9d6b8397f34cd": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "3fd960b19cea4d95877f1c575a4ecff7": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "39293cf9ce7b4022a7b99140ec2ccad5": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "de0caf6fec5743bf8e4fba722d5892ec": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "79cb0772462346a29d1687382295a7b0": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "6523597732e24381a9ec11166787c865": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "35f56790a93449dc960bfb615868fe8f"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  15.286 seconds)


.. _sphx_glr_download_user-guide_vision_auto_quickstarts_plot_segmentation_tutorial.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_segmentation_tutorial.py <plot_segmentation_tutorial.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_segmentation_tutorial.ipynb <plot_segmentation_tutorial.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
