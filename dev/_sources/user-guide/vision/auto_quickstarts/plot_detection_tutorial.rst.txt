
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "user-guide/vision/auto_quickstarts/plot_detection_tutorial.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_user-guide_vision_auto_quickstarts_plot_detection_tutorial.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_user-guide_vision_auto_quickstarts_plot_detection_tutorial.py:


.. _vision_detection_tutorial:

==========================
Object Detection Tutorial
==========================

In this tutorial, you will learn how to validate your **object detection model** using deepchecks test suites.
You can read more about the different checks and suites for computer vision use cases at the
:doc:`examples section  </checks_gallery/vision/index>`

If you just want to see the output of this tutorial, jump to the :ref:`observing the results <vision_segmentation_tutorial__observing_the_result>` section.

An object detection tasks usually consist of two parts:

- Object Localization, where the model predicts the location of an object in the image,
- Object Classification, where the model predicts the class of the detected object.

The common output of an object detection model is a list of bounding boxes around the objects, and
their classes.

.. code-block:: bash

    # Before we start, if you don't have deepchecks vision package installed yet, run:
    import sys
    !{sys.executable} -m pip install "deepchecks[vision]" --quiet --upgrade # --user

    # or install using pip from your python environment

.. GENERATED FROM PYTHON SOURCE LINES 32-34

Defining the data and model
===========================

.. GENERATED FROM PYTHON SOURCE LINES 34-56

.. code-block:: default


    # Importing the required packages
    import os
    import urllib.request
    import xml.etree.ElementTree as ET
    import zipfile
    from functools import partial

    import albumentations as A
    import matplotlib.pyplot as plt
    import numpy as np
    import torch
    import torchvision
    from albumentations.pytorch import ToTensorV2
    from PIL import Image
    from torch import nn
    from torch.utils.data import DataLoader, Dataset
    from torchvision.models.detection import _utils as det_utils
    from torchvision.models.detection.ssdlite import SSDLiteClassificationHead

    from deepchecks.vision.detection_data import DetectionData








.. GENERATED FROM PYTHON SOURCE LINES 57-68

Load Data
~~~~~~~~~
The model in this tutorial is used to detect tomatoes in images. The model is trained on a dataset consisted of
895 images of tomatoes, with bounding box annotations provided in PASCAL VOC format.
All annotations belong to a single class: tomato.

.. note::
    The dataset is available at the following link:
    https://www.kaggle.com/andrewmvd/tomato-detection

    We thank the authors of the dataset for providing the dataset.

.. GENERATED FROM PYTHON SOURCE LINES 68-141

.. code-block:: default


    url = 'https://figshare.com/ndownloader/files/34488599'
    urllib.request.urlretrieve(url, 'tomato-detection.zip')

    with zipfile.ZipFile('tomato-detection.zip', 'r') as zip_ref:
        zip_ref.extractall('.')

    class TomatoDataset(Dataset):
        def __init__(self, root, transforms):
            self.root = root
            self.transforms = transforms

            self.images = list(sorted(os.listdir(os.path.join(root, 'images'))))
            self.annotations = list(sorted(os.listdir(os.path.join(root, 'annotations'))))

        def __getitem__(self, idx):
            img_path = os.path.join(self.root, "images", self.images[idx])
            ann_path = os.path.join(self.root, "annotations", self.annotations[idx])
            img = Image.open(img_path).convert("RGB")
            bboxes = []
            labels = []
            with open(ann_path, 'r') as f:
                tree = ET.parse(f)
                root = tree.getroot()
                size = root.find('size')
                w = int(size.find('width').text)
                h = int(size.find('height').text)

                for obj in root.iter('object'):
                    difficult = obj.find('difficult').text
                    if int(difficult) == 1:
                        continue
                    cls_id = 1
                    xmlbox = obj.find('bndbox')
                    b = [float(xmlbox.find('xmin').text), float(xmlbox.find('ymin').text), float(xmlbox.find('xmax').text),
                            float(xmlbox.find('ymax').text)]
                    bboxes.append(b)
                    labels.append(cls_id)

            bboxes = torch.as_tensor(np.array(bboxes), dtype=torch.float32)
            labels = torch.as_tensor(np.array(labels), dtype=torch.int64)

            if self.transforms is not None:
                res = self.transforms(image=np.array(img), bboxes=bboxes, class_labels=labels)

            target = {
                'boxes': [torch.Tensor(x) for x in res['bboxes']],
                'labels': res['class_labels']
            }

            img = res['image']

            return img, target

        def __len__(self):
            return len(self.images)

    data_transforms = A.Compose([
        A.Resize(height=256, width=256),
        A.CenterCrop(height=224, width=224),
        A.Normalize(mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225)),
        ToTensorV2(),
    ], bbox_params=A.BboxParams(format='pascal_voc', label_fields=['class_labels']))

    dataset = TomatoDataset(root=os.path.join(os.path.curdir, 'tomato-detection/data'),
                            transforms=data_transforms)
    train_set, test_set = torch.utils.data.random_split(dataset,
                                                        [int(len(dataset)*0.9), len(dataset)-int(len(dataset)*0.9)],
                                                        generator=torch.Generator().manual_seed(42))
    test_set.transforms = A.Compose([ToTensorV2()])
    train_loader = DataLoader(train_set, batch_size=64, collate_fn=(lambda batch: tuple(zip(*batch))))
    test_loader = DataLoader(test_set, batch_size=64, collate_fn=(lambda batch: tuple(zip(*batch))))








.. GENERATED FROM PYTHON SOURCE LINES 142-145

Visualize a Few Images
~~~~~~~~~~~~~~~~~~~~~~
Let's visualize a few training images so as to understand the data augmentation.

.. GENERATED FROM PYTHON SOURCE LINES 145-180

.. code-block:: default


    def prepare(inp):
        """Imshow for Tensor."""
        inp = inp.numpy().transpose((1, 2, 0))
        mean = np.array([0.485, 0.456, 0.406])
        std = np.array([0.229, 0.224, 0.225])
        inp = std * inp + mean
        inp = np.clip(inp, 0, 1) * 255
        inp = inp.transpose((2,0,1))
        return torch.tensor(inp, dtype=torch.uint8)

    import torchvision.transforms.functional as F


    def show(imgs):
        if not isinstance(imgs, list):
            imgs = [imgs]
        fig, axs = plt.subplots(ncols=len(imgs), squeeze=False, figsize=(20,20))
        for i, img in enumerate(imgs):
            img = img.detach()
            img = F.to_pil_image(img)
            axs[0, i].imshow(np.asarray(img))
            axs[0, i].set(xticklabels=[], yticklabels=[], xticks=[], yticks=[])

    from torchvision.utils import draw_bounding_boxes

    data = next(iter(train_loader))
    inp, targets = data[0][:4], data[1][:4]


    result = [draw_bounding_boxes(prepare(inp[i]), torch.stack(targets[i]['boxes']),
                                  colors=['yellow'] * torch.stack(targets[i]['boxes']).shape[0], width=5)
              for i in range(len(targets))]
    show(result)




.. image-sg:: /user-guide/vision/auto_quickstarts/images/sphx_glr_plot_detection_tutorial_001.png
   :alt: plot detection tutorial
   :srcset: /user-guide/vision/auto_quickstarts/images/sphx_glr_plot_detection_tutorial_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 181-192

.. image :: /_static/images/tutorials/tomatoes.png
    :alt: Tomatoes with bbox

Downloading a Pre-trained Model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In this tutorial, we will download a pre-trained SSDlite model and a MobileNetV3 Large backbone
from the official PyTorch repository. For more details, please refer to the
`official documentation <https://pytorch.org/vision/stable/generated/torchvision.models.detection.ssdlite320_mobilenet_v3_large.html#torchvision.models.detection.ssdlite320_mobilenet_v3_large>`_.

After downloading the model, we will fine-tune it for our particular classes. We will do it by replacing the pre-trained
head with a new one that matches our needs.

.. GENERATED FROM PYTHON SOURCE LINES 192-204

.. code-block:: default


    device = torch.device("cuda") if torch.cuda.is_available() else torch.device("cpu")

    model = torchvision.models.detection.ssdlite320_mobilenet_v3_large(pretrained=True)

    in_channels = det_utils.retrieve_out_channels(model.backbone, (320, 320))
    num_anchors = model.anchor_generator.num_anchors_per_location()
    norm_layer = partial(nn.BatchNorm2d, eps=0.001, momentum=0.03)

    model.head.classification_head = SSDLiteClassificationHead(in_channels, num_anchors, 2, norm_layer)
    model.to(device)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Downloading: "https://download.pytorch.org/models/ssdlite320_mobilenet_v3_large_coco-a79551df.pth" to /home/runner/.cache/torch/hub/checkpoints/ssdlite320_mobilenet_v3_large_coco-a79551df.pth
      0%|          | 0.00/13.4M [00:00<?, ?B/s]     23%|##2       | 3.07M/13.4M [00:00<00:00, 32.1MB/s]    100%|##########| 13.4M/13.4M [00:00<00:00, 91.6MB/s]

    SSD(
      (backbone): SSDLiteFeatureExtractorMobileNet(
        (features): Sequential(
          (0): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): Hardswish()
            )
            (1): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                  (1): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (1): ConvNormActivation(
                  (0): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (2): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (1): ConvNormActivation(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
                  (1): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (2): ConvNormActivation(
                  (0): Conv2d(64, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(24, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (3): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(24, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(72, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (1): ConvNormActivation(
                  (0): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=72, bias=False)
                  (1): BatchNorm2d(72, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (2): ConvNormActivation(
                  (0): Conv2d(72, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(24, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (4): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(24, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(72, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (1): ConvNormActivation(
                  (0): Conv2d(72, 72, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=72, bias=False)
                  (1): BatchNorm2d(72, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (2): SqueezeExcitation(
                  (avgpool): AdaptiveAvgPool2d(output_size=1)
                  (fc1): Conv2d(72, 24, kernel_size=(1, 1), stride=(1, 1))
                  (fc2): Conv2d(24, 72, kernel_size=(1, 1), stride=(1, 1))
                  (activation): ReLU()
                  (scale_activation): Hardsigmoid()
                )
                (3): ConvNormActivation(
                  (0): Conv2d(72, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(40, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (5): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(40, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(120, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (1): ConvNormActivation(
                  (0): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
                  (1): BatchNorm2d(120, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (2): SqueezeExcitation(
                  (avgpool): AdaptiveAvgPool2d(output_size=1)
                  (fc1): Conv2d(120, 32, kernel_size=(1, 1), stride=(1, 1))
                  (fc2): Conv2d(32, 120, kernel_size=(1, 1), stride=(1, 1))
                  (activation): ReLU()
                  (scale_activation): Hardsigmoid()
                )
                (3): ConvNormActivation(
                  (0): Conv2d(120, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(40, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (6): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(40, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(120, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (1): ConvNormActivation(
                  (0): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
                  (1): BatchNorm2d(120, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (2): SqueezeExcitation(
                  (avgpool): AdaptiveAvgPool2d(output_size=1)
                  (fc1): Conv2d(120, 32, kernel_size=(1, 1), stride=(1, 1))
                  (fc2): Conv2d(32, 120, kernel_size=(1, 1), stride=(1, 1))
                  (activation): ReLU()
                  (scale_activation): Hardsigmoid()
                )
                (3): ConvNormActivation(
                  (0): Conv2d(120, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(40, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (7): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(240, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (1): ConvNormActivation(
                  (0): Conv2d(240, 240, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=240, bias=False)
                  (1): BatchNorm2d(240, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (2): ConvNormActivation(
                  (0): Conv2d(240, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (8): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(80, 200, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(200, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (1): ConvNormActivation(
                  (0): Conv2d(200, 200, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=200, bias=False)
                  (1): BatchNorm2d(200, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (2): ConvNormActivation(
                  (0): Conv2d(200, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (9): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(80, 184, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(184, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (1): ConvNormActivation(
                  (0): Conv2d(184, 184, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=184, bias=False)
                  (1): BatchNorm2d(184, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (2): ConvNormActivation(
                  (0): Conv2d(184, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (10): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(80, 184, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(184, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (1): ConvNormActivation(
                  (0): Conv2d(184, 184, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=184, bias=False)
                  (1): BatchNorm2d(184, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (2): ConvNormActivation(
                  (0): Conv2d(184, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (11): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (1): ConvNormActivation(
                  (0): Conv2d(480, 480, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=480, bias=False)
                  (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (2): SqueezeExcitation(
                  (avgpool): AdaptiveAvgPool2d(output_size=1)
                  (fc1): Conv2d(480, 120, kernel_size=(1, 1), stride=(1, 1))
                  (fc2): Conv2d(120, 480, kernel_size=(1, 1), stride=(1, 1))
                  (activation): ReLU()
                  (scale_activation): Hardsigmoid()
                )
                (3): ConvNormActivation(
                  (0): Conv2d(480, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(112, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (12): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(112, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(672, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (1): ConvNormActivation(
                  (0): Conv2d(672, 672, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=672, bias=False)
                  (1): BatchNorm2d(672, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (2): SqueezeExcitation(
                  (avgpool): AdaptiveAvgPool2d(output_size=1)
                  (fc1): Conv2d(672, 168, kernel_size=(1, 1), stride=(1, 1))
                  (fc2): Conv2d(168, 672, kernel_size=(1, 1), stride=(1, 1))
                  (activation): ReLU()
                  (scale_activation): Hardsigmoid()
                )
                (3): ConvNormActivation(
                  (0): Conv2d(672, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(112, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (13): ConvNormActivation(
              (0): Conv2d(112, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(672, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): Hardswish()
            )
          )
          (1): Sequential(
            (0): Sequential(
              (1): ConvNormActivation(
                (0): Conv2d(672, 672, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=672, bias=False)
                (1): BatchNorm2d(672, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): Hardswish()
              )
              (2): SqueezeExcitation(
                (avgpool): AdaptiveAvgPool2d(output_size=1)
                (fc1): Conv2d(672, 168, kernel_size=(1, 1), stride=(1, 1))
                (fc2): Conv2d(168, 672, kernel_size=(1, 1), stride=(1, 1))
                (activation): ReLU()
                (scale_activation): Hardsigmoid()
              )
              (3): ConvNormActivation(
                (0): Conv2d(672, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (1): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (1): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (1): ConvNormActivation(
                  (0): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=480, bias=False)
                  (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (2): SqueezeExcitation(
                  (avgpool): AdaptiveAvgPool2d(output_size=1)
                  (fc1): Conv2d(480, 120, kernel_size=(1, 1), stride=(1, 1))
                  (fc2): Conv2d(120, 480, kernel_size=(1, 1), stride=(1, 1))
                  (activation): ReLU()
                  (scale_activation): Hardsigmoid()
                )
                (3): ConvNormActivation(
                  (0): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (2): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (1): ConvNormActivation(
                  (0): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=480, bias=False)
                  (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (2): SqueezeExcitation(
                  (avgpool): AdaptiveAvgPool2d(output_size=1)
                  (fc1): Conv2d(480, 120, kernel_size=(1, 1), stride=(1, 1))
                  (fc2): Conv2d(120, 480, kernel_size=(1, 1), stride=(1, 1))
                  (activation): ReLU()
                  (scale_activation): Hardsigmoid()
                )
                (3): ConvNormActivation(
                  (0): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (3): ConvNormActivation(
              (0): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): Hardswish()
            )
          )
        )
        (extra): ModuleList(
          (0): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(480, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)
              (1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
            (2): ConvNormActivation(
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
          )
          (1): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (1): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
            (2): ConvNormActivation(
              (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
          )
          (2): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (1): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
            (2): ConvNormActivation(
              (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
          )
          (3): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
              (1): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
            (2): ConvNormActivation(
              (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
          )
        )
      )
      (anchor_generator): DefaultBoxGenerator(aspect_ratios=[[2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3]], clip=True, scales=[0.2, 0.35, 0.5, 0.65, 0.8, 0.95, 1.0], steps=None)
      (head): SSDLiteHead(
        (classification_head): SSDLiteClassificationHead(
          (module_list): ModuleList(
            (0): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(672, 672, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=672, bias=False)
                (1): BatchNorm2d(672, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(672, 12, kernel_size=(1, 1), stride=(1, 1))
            )
            (1): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(480, 480, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=480, bias=False)
                (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(480, 12, kernel_size=(1, 1), stride=(1, 1))
            )
            (2): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512, bias=False)
                (1): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(512, 12, kernel_size=(1, 1), stride=(1, 1))
            )
            (3): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
                (1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
            )
            (4): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
                (1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
            )
            (5): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                (1): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(128, 12, kernel_size=(1, 1), stride=(1, 1))
            )
          )
        )
        (regression_head): SSDLiteRegressionHead(
          (module_list): ModuleList(
            (0): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(672, 672, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=672, bias=False)
                (1): BatchNorm2d(672, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(672, 24, kernel_size=(1, 1), stride=(1, 1))
            )
            (1): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(480, 480, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=480, bias=False)
                (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(480, 24, kernel_size=(1, 1), stride=(1, 1))
            )
            (2): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512, bias=False)
                (1): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(512, 24, kernel_size=(1, 1), stride=(1, 1))
            )
            (3): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
                (1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(256, 24, kernel_size=(1, 1), stride=(1, 1))
            )
            (4): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
                (1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(256, 24, kernel_size=(1, 1), stride=(1, 1))
            )
            (5): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                (1): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(128, 24, kernel_size=(1, 1), stride=(1, 1))
            )
          )
        )
      )
      (transform): GeneralizedRCNNTransform(
          Normalize(mean=[0.5, 0.5, 0.5], std=[0.5, 0.5, 0.5])
          Resize(min_size=(320,), max_size=320, mode='bilinear')
      )
    )



.. GENERATED FROM PYTHON SOURCE LINES 205-208

Loading Pre-trained Weights
~~~~~~~~~~~~~~~~~~~~~~~~~~~
For this tutorial we will not include the training code itself, but will download and load pre-trained weights.

.. GENERATED FROM PYTHON SOURCE LINES 208-212

.. code-block:: default


    model.load_state_dict(torch.load('tomato-detection/ssd_model.pth'))
    _ = model.eval()








.. GENERATED FROM PYTHON SOURCE LINES 213-221

Validating the Model With Deepchecks
=====================================
Now, after we have the training data, test data and the model, we can validate the model with
deepchecks test suites.

Visualize the Data Loader and the Model Outputs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
First we'll make sure we are familiar with the data loader and the model outputs.

.. GENERATED FROM PYTHON SOURCE LINES 221-233

.. code-block:: default


    batch = next(iter(train_loader))

    print("Batch type is: ", type(batch))
    print("First element is: ", type(batch[0]), "with len of ", len(batch[0]))
    print("Example output of an image shape from the dataloader ", batch[0][0].shape)
    print("Image values", batch[0][0])
    print("-"*80)

    print("Second element is: ", type(batch[1]), "with len of ", len(batch[1]))
    print("Example output of a label from the dataloader ", batch[1][0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Batch type is:  <class 'tuple'>
    First element is:  <class 'tuple'> with len of  64
    Example output of an image shape from the dataloader  torch.Size([3, 224, 224])
    Image values tensor([[[-1.79253, -1.82678, -1.82678,  ...,  1.39267,  1.34130,  1.32417],
             [-1.72403, -1.79253, -1.80966,  ...,  1.35842,  1.32417,  1.34130],
             [-1.75828, -1.74116, -1.70691,  ...,  1.32417,  1.34130,  1.35842],
             ...,
             [-1.84391, -1.82678, -1.75828,  ...,  0.62206,  0.19394, -0.35405],
             [-1.80966, -1.79253, -1.72403,  ...,  0.81043,  0.72481,  0.34806],
             [-1.79253, -1.84391, -1.75828,  ...,  0.81043,  0.82755,  0.69056]],

            [[-1.38796, -1.45798, -1.45798,  ...,  1.51821,  1.46569,  1.46569],
             [-1.38796, -1.47549, -1.52801,  ...,  1.50070,  1.46569,  1.48319],
             [-1.42297, -1.47549, -1.49300,  ...,  1.46569,  1.50070,  1.50070],
             ...,
             [-1.70308, -1.68557, -1.61555,  ...,  0.67787,  0.22269, -0.33753],
             [-1.68557, -1.66807, -1.58053,  ...,  0.87045,  0.74790,  0.38025],
             [-1.68557, -1.70308, -1.61555,  ...,  0.87045,  0.85294,  0.71289]],

            [[-1.57786, -1.61272, -1.61272,  ...,  1.66397,  1.61168,  1.59425],
             [-1.54301, -1.59529, -1.64758,  ...,  1.62911,  1.59425,  1.59425],
             [-1.59529, -1.59529, -1.61272,  ...,  1.59425,  1.61168,  1.62911],
             ...,
             [-1.63015, -1.59529, -1.52558,  ...,  0.46135,  0.02562, -0.53211],
             [-1.59529, -1.54301, -1.47329,  ...,  0.72279,  0.61821,  0.21734],
             [-1.59529, -1.59529, -1.50815,  ...,  0.72279,  0.72279,  0.56593]]])
    --------------------------------------------------------------------------------
    Second element is:  <class 'tuple'> with len of  64
    Example output of a label from the dataloader  {'boxes': [tensor([  0.00000,  75.13600,  39.68000, 165.75999]), tensor([ 0.00000,  0.00000, 94.08000, 93.56800])], 'labels': [tensor(1), tensor(1)]}




.. GENERATED FROM PYTHON SOURCE LINES 234-247

Implementing the DetectionData class
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The checks in the package validate the model & data by calculating various quantities over the data, labels and
predictions. In order to do that, those must be in a pre-defined format, according to the task type.
The first step is to implement a class that enables deepchecks to interact with your model and data and transform
them to this pre-defined format, which is set for each task type.
In this tutorial, we will implement the object detection task type by implementing a class that inherits from the
:class:`deepchecks.vision.detection_data.DetectionData` class.

The DetectionData class contains additional data and general methods intended for easy access to relevant metadata
for object detection ML models validation.
To learn more about the expected format please visit the API reference for the
:class:`deepchecks.vision.detection_data.DetectionData` class.

.. GENERATED FROM PYTHON SOURCE LINES 247-320

.. code-block:: default


    from deepchecks.vision.detection_data import DetectionData


    class TomatoData(DetectionData):

        def __init__(self, *args, **kwargs):
            super().__init__(*args, **kwargs)

        def batch_to_images(self, batch):
            """
            Convert a batch of data to images in the expected format. The expected format is an iterable of cv2 images,
            where each image is a numpy array of shape (height, width, channels). The numbers in the array should be in the
            range [0, 255] in a uint8 format.
            """
            inp = torch.stack(list(batch[0])).cpu().detach().numpy().transpose((0, 2, 3, 1))
            mean = [0.485, 0.456, 0.406]
            std = [0.229, 0.224, 0.225]
            # Un-normalize the images
            inp = std * inp + mean
            inp = np.clip(inp, 0, 1)
            return inp * 255

        def batch_to_labels(self, batch):
            """
            Convert a batch of data to labels in the expected format. The expected format is a list of tensors of length N,
            where N is the number of samples. Each tensor element is in a shape of [B, 5], where B is the number of bboxes
            in the image, and each bounding box is in the structure of [class_id, x, y, w, h].
            """
            tensor_annotations = batch[1]
            label = []
            for annotation in tensor_annotations:
                if len(annotation["boxes"]):
                    bbox = torch.stack(annotation["boxes"])
                    # Convert the Pascal VOC xyxy format to xywh format
                    bbox[:, 2:] = bbox[:, 2:] - bbox[:, :2]
                    # The label shape is [class_id, x, y, w, h]
                    label.append(
                        torch.concat([torch.stack(annotation["labels"]).reshape((-1, 1)), bbox], dim=1)
                    )
                else:
                    # If it's an empty image, we need to add an empty label
                    label.append(torch.tensor([]))
            return label

        def infer_on_batch(self, batch, model, device):
            """
            Returns the predictions for a batch of data. The expected format is a list of tensors of shape length N, where N
            is the number of samples. Each tensor element is in a shape of [B, 6], where B is the number of bboxes in the
            predictions, and each bounding box is in the structure of [x, y, w, h, score, class_id].
            """
            nm_thrs = 0.2
            score_thrs = 0.7
            imgs = list(img.to(device) for img in batch[0])
            # Getting the predictions of the model on the batch
            with torch.no_grad():
                preds = model(imgs)
            processed_pred = []
            for pred in preds:
                # Performoing non-maximum suppression on the detections
                keep_boxes = torchvision.ops.nms(pred['boxes'], pred['scores'], nm_thrs)
                score_filter = pred['scores'][keep_boxes] > score_thrs

                # get the filtered result
                test_boxes = pred['boxes'][keep_boxes][score_filter].reshape((-1, 4))
                test_boxes[:, 2:] = test_boxes[:, 2:] - test_boxes[:, :2]  # xyxy to xywh
                test_labels = pred['labels'][keep_boxes][score_filter]
                test_scores = pred['scores'][keep_boxes][score_filter]

                processed_pred.append(
                    torch.concat([test_boxes, test_scores.reshape((-1, 1)), test_labels.reshape((-1, 1))], dim=1))
            return processed_pred








.. GENERATED FROM PYTHON SOURCE LINES 321-322

After defining the task class, we can validate it by running the following code:

.. GENERATED FROM PYTHON SOURCE LINES 322-336

.. code-block:: default


    # We have a single label here, which is the tomato class
    # The label_map is a dictionary that maps the class id to the class name, for display purposes.
    LABEL_MAP = {
        1: 'Tomato'
    }
    training_data = TomatoData(data_loader=train_loader, label_map=LABEL_MAP)
    test_data = TomatoData(data_loader=test_loader, label_map=LABEL_MAP)

    training_data.validate_format(model, device=device)
    test_data.validate_format(model, device=device)

    # And observe the output:





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Deepchecks will try to validate the extractors given...
    torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
    Structure validation
    --------------------
    Label formatter: Pass!
    Prediction formatter: Pass!
    Image formatter: Pass!

    Content validation
    ------------------
    For validating the content within the structure you have to manually observe the classes, image, label and prediction.
    Examples of classes observed in the batch's labels: [[1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1], [1]]
    Visual images & label & prediction: should open in a new window
    *******************************************************************************
    This machine does not support GUI
    The formatted image was saved in:
    /home/runner/work/deepchecks/deepchecks/docs/source/user-guide/vision/quickstarts/deepchecks_formatted_image (4).jpg
    Visual examples of an image with prediction and label data. Label is red, prediction is blue, and deepchecks loves you.
    validate_extractors can be set to skip the image saving or change the save path
    *******************************************************************************
    Deepchecks will try to validate the extractors given...
    Structure validation
    --------------------
    Label formatter: Pass!
    Prediction formatter: Pass!
    Image formatter: Pass!

    Content validation
    ------------------
    For validating the content within the structure you have to manually observe the classes, image, label and prediction.
    Examples of classes observed in the batch's labels: [[1, 1, 1, 1], [1], [1, 1, 1, 1, 1, 1, 1], [1], [1]]
    Visual images & label & prediction: should open in a new window
    *******************************************************************************
    This machine does not support GUI
    The formatted image was saved in:
    /home/runner/work/deepchecks/deepchecks/docs/source/user-guide/vision/quickstarts/deepchecks_formatted_image (5).jpg
    Visual examples of an image with prediction and label data. Label is red, prediction is blue, and deepchecks loves you.
    validate_extractors can be set to skip the image saving or change the save path
    *******************************************************************************

    True



.. GENERATED FROM PYTHON SOURCE LINES 337-341

Running Deepchecks' suite on our data and model!
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Now that we have defined the task class, we can validate the model with the deepchecks' model evaluation suite.
This can be done with this simple few lines of code:

.. GENERATED FROM PYTHON SOURCE LINES 341-347

.. code-block:: default


    from deepchecks.vision.suites import model_evaluation

    suite = model_evaluation()
    result = suite.run(training_data, test_data, model, device=device)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    The ImageSegmentPerformance check is deprecated and will be removed in the 0.11 version. Please use the WeakSegmentsPerformance check instead.
    The ModelErrorAnalysis check is deprecated and will be removed in the 0.11 version. Please use the WeakSegmentsPerformance check instead.
    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:05]    Validating Input:
    |#####| 1/1 [Time: 00:05]
    Ingesting Batches - Train Dataset:
    |             | 0/13 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |#            | 1/13 [Time: 00:03]
    Ingesting Batches - Train Dataset:
    |##           | 2/13 [Time: 00:06]
    Ingesting Batches - Train Dataset:
    |###          | 3/13 [Time: 00:09]
    Ingesting Batches - Train Dataset:
    |####         | 4/13 [Time: 00:12]
    Ingesting Batches - Train Dataset:
    |#####        | 5/13 [Time: 00:16]
    Ingesting Batches - Train Dataset:
    |######       | 6/13 [Time: 00:19]
    Ingesting Batches - Train Dataset:
    |#######      | 7/13 [Time: 00:23]
    Ingesting Batches - Train Dataset:
    |########     | 8/13 [Time: 00:26]
    Ingesting Batches - Train Dataset:
    |#########    | 9/13 [Time: 00:29]
    Ingesting Batches - Train Dataset:
    |##########   | 10/13 [Time: 00:33]
    Ingesting Batches - Train Dataset:
    |###########  | 11/13 [Time: 00:36]
    Ingesting Batches - Train Dataset:
    |############ | 12/13 [Time: 00:39]
    Ingesting Batches - Train Dataset:
    |#############| 13/13 [Time: 00:41]
    Ingesting Batches - Train Dataset:
    |#############| 13/13 [Time: 00:41]

    Computing Single Dataset Checks - Train Dataset:
    |     | 0/4 [Time: 00:00]

    Computing Single Dataset Checks - Train Dataset:
    |#2   | 1/4 [Time: 00:00, Check=Mean Average Precision Report]

    Computing Single Dataset Checks - Train Dataset:
    |##5  | 2/4 [Time: 00:00, Check=Mean Average Recall Report]   

    Computing Single Dataset Checks - Train Dataset:
    |#####| 4/4 [Time: 00:05, Check=Image Segment Performance] 

    Computing Single Dataset Checks - Train Dataset:
    |#####| 4/4 [Time: 00:05, Check=Image Segment Performance]


    Ingesting Batches - Test Dataset:
    |     | 0/2 [Time: 00:00]


    Ingesting Batches - Test Dataset:
    |##5  | 1/2 [Time: 00:03]


    Ingesting Batches - Test Dataset:
    |#####| 2/2 [Time: 00:04]


    Ingesting Batches - Test Dataset:
    |#####| 2/2 [Time: 00:04]



    Computing Single Dataset Checks - Test Dataset:
    |     | 0/4 [Time: 00:00]



    Computing Single Dataset Checks - Test Dataset:
    |##5  | 2/4 [Time: 00:00, Check=Mean Average Recall Report]



    Computing Single Dataset Checks - Test Dataset:
    |#####| 4/4 [Time: 00:00, Check=Image Segment Performance] 



    Computing Single Dataset Checks - Test Dataset:
    |#####| 4/4 [Time: 00:00, Check=Image Segment Performance]




    Computing Checks:
    |     | 0/4 [Time: 00:00]




    Computing Checks:
    |     | 0/4 [Time: 00:00, Check=Class Performance]




    Computing Checks:
    |#2   | 1/4 [Time: 00:00, Check=Class Performance]




    Computing Checks:
    |#2   | 1/4 [Time: 00:00, Check=Train Test Prediction Drift]




    Computing Checks:
    |##5  | 2/4 [Time: 00:00, Check=Train Test Prediction Drift]




    Computing Checks:
    |##5  | 2/4 [Time: 00:00, Check=Simple Model Comparison]    




    Computing Checks:
    |##5  | 2/4 [Time: 00:00, Check=Model Error Analysis]   Default parameter min_samples_leaf will change in version 2.6.See https://github.com/scikit-learn-contrib/category_encoders/issues/327
    Default parameter smoothing will change in version 2.6.See https://github.com/scikit-learn-contrib/category_encoders/issues/327





    Computing Checks:
    |#####| 4/4 [Time: 00:00, Check=Model Error Analysis]




    Computing Checks:
    |#####| 4/4 [Time: 00:00, Check=Model Error Analysis]                                           
                                                                          

                                                                                                               


                                                               



                                                                                                              




                                                                           



.. GENERATED FROM PYTHON SOURCE LINES 348-353

We also have suites for:
:func:`data integrity <deepchecks.vision.suites.default_suites.data_integrity>`
- validating a single dataset and
:func:`train test validation <deepchecks.vision.suites.default_suites.train_test_validation>` -
validating the dataset split

.. GENERATED FROM PYTHON SOURCE LINES 355-360

.. _observing_the_result:

Observing the results:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The results can be saved as a html file with the following code:

.. GENERATED FROM PYTHON SOURCE LINES 360-363

.. code-block:: default


    result.save_as_html('output.html')





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    'output (3).html'



.. GENERATED FROM PYTHON SOURCE LINES 364-365

Or, if working inside a notebook, the output can be displayed directly by simply printing the result object:

.. GENERATED FROM PYTHON SOURCE LINES 365-367

.. code-block:: default


    result





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Model Evaluation Suite</title>
        <link rel="icon" type="image/x-icon" href="https://deepchecks.com/wp-content/themes/deepchecks/assets/favicons/favicon.ico">
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"4258c205664347fa83fce786898763d1": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "_titles": {"0": "Model Evaluation Suite"}, "children": ["IPY_MODEL_7b37d782abdb4750a01e06e61299eaf9"], "layout": "IPY_MODEL_f9bfae7990164876b7d7562f5b431c87"}}, "7b37d782abdb4750a01e06e61299eaf9": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_f3452246243b4a06b59286f097821a70", "IPY_MODEL_388f5fca0a254f1297d2804db7a92868", "IPY_MODEL_ec33b35b42d248ca964cd78a1d2a4e0e", "IPY_MODEL_2bb94ae28fed49e0ae22162cf0934cb6", "IPY_MODEL_aa5c7039c75c4579bf315d353cb4f876"], "layout": "IPY_MODEL_a2e4f693e2254f79a60343e1b52dd1bf"}}, "f3452246243b4a06b59286f097821a70": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_24d651e1654541bab0d363e7b227d3ba", "style": "IPY_MODEL_774772e25f6a4300964cee2f78580ed7", "value": "\n            <h1 id=\"summary_UH17J8QO09VS9KKH4A3YJTU7F\">Model Evaluation Suite</h1>\n            <p>\n                The suite is composed of various checks such as: Simple Model Comparison, Mean Average Precision Report, Train Test Prediction Drift, etc...<br>\n                Each check may contain conditions (which will result in pass / fail / warning / error\n                , represented by \n<span style=\"color: green;display:inline-block\">\u2713</span> /\n<span style=\"color: red;display:inline-block\">\u2716</span> /\n<span style=\"color: orange;font-weight:bold;display:inline-block\">!</span> /\n<span style=\"color: firebrick;font-weight:bold;display:inline-block\">\u2048</span>\n) as well as other outputs such as plots or tables.<br>\n                Suites, checks and conditions can all be modified. Read more about\n                <a href=https://docs.deepchecks.com/en/stable/examples/guides/create_a_custom_suite.html?utm_source=display_output&utm_medium=referral&utm_campaign=suite_link target=\"_blank\">custom suites</a>.\n            </p>\n\n"}}, "24d651e1654541bab0d363e7b227d3ba": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "774772e25f6a4300964cee2f78580ed7": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "388f5fca0a254f1297d2804db7a92868": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_ebe14537bc2b4f5881346efaf92ce056", "IPY_MODEL_095c67bd32a841488865c15afa5e0b0c"], "layout": "IPY_MODEL_a53d3450e689419981752c989fd1c5d7"}}, "ebe14537bc2b4f5881346efaf92ce056": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c30b7249be3b48c98a33afb22c63cd11", "style": "IPY_MODEL_84d7e8400d0743d8a3c13c7ac10d251c", "value": "<span id=\"summary_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\"></span>"}}, "c30b7249be3b48c98a33afb22c63cd11": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "84d7e8400d0743d8a3c13c7ac10d251c": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "095c67bd32a841488865c15afa5e0b0c": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "_titles": {"0": "Didn't Pass"}, "children": ["IPY_MODEL_612049b19c974df9a9ec527bd4f8a097"], "layout": "IPY_MODEL_0b2df2b55369432b8b5d3842ebba9bca", "selected_index": null}}, "612049b19c974df9a9ec527bd4f8a097": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_2dd78e11d14940f6b68dcd041ca2815f", "IPY_MODEL_f5806566e1384d01ad58546da14b00ac", "IPY_MODEL_8415b3fa5a09415896989f2ef844dfaa", "IPY_MODEL_486fbb6e1b074b6abbe0067b32026437", "IPY_MODEL_f15c4942e47d4e4290337b4d2e3907b4", "IPY_MODEL_486fbb6e1b074b6abbe0067b32026437", "IPY_MODEL_a135d35af11344e9b7fb790684a8b70a", "IPY_MODEL_486fbb6e1b074b6abbe0067b32026437", "IPY_MODEL_f0e5868f7a78407ebeade694a63a0102", "IPY_MODEL_486fbb6e1b074b6abbe0067b32026437", "IPY_MODEL_12e41b0aa8c341caa8af33cfa484df4b"], "layout": "IPY_MODEL_1c501208ddf743da99f153b1bd869ea3"}}, "2dd78e11d14940f6b68dcd041ca2815f": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6a321034d0864b018f1db3f789fb5700", "style": "IPY_MODEL_be6aaa7e0880403ab9c2e6c805c50b28", "value": "<style type=\"text/css\">\n#T_b33b4_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_b33b4_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_b33b4_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_b33b4_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_b33b4_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_b33b4_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Check</th>\n      <th class=\"col_heading level0 col2\" >Condition</th>\n      <th class=\"col_heading level0 col3\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_b33b4_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_b33b4_row0_col1\" class=\"data row0 col1\" ><a href=\"#ClassPerformance_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\">Class Performance</a></td>\n      <td id=\"T_b33b4_row0_col2\" class=\"data row0 col2\" >Train-Test scores relative degradation is less than 0.1</td>\n      <td id=\"T_b33b4_row0_col3\" class=\"data row0 col3\" >2 scores failed. Found max degradation of 49.42% for metric Average Precision and class Tomato.</td>\n    </tr>\n    <tr>\n      <td id=\"T_b33b4_row1_col0\" class=\"data row1 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_b33b4_row1_col1\" class=\"data row1 col1\" ><a href=\"#MeanAveragePrecisionReport-TestDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\">Mean Average Precision Report - Test Dataset</a></td>\n      <td id=\"T_b33b4_row1_col2\" class=\"data row1 col2\" >mAP score is greater than 0.3</td>\n      <td id=\"T_b33b4_row1_col3\" class=\"data row1 col3\" >mAP score is: 0.01</td>\n    </tr>\n    <tr>\n      <td id=\"T_b33b4_row2_col0\" class=\"data row2 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_b33b4_row2_col1\" class=\"data row2 col1\" ><a href=\"#MeanAveragePrecisionReport-TrainDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\">Mean Average Precision Report - Train Dataset</a></td>\n      <td id=\"T_b33b4_row2_col2\" class=\"data row2 col2\" >mAP score is greater than 0.3</td>\n      <td id=\"T_b33b4_row2_col3\" class=\"data row2 col3\" >mAP score is: 0.03</td>\n    </tr>\n    <tr>\n      <td id=\"T_b33b4_row3_col0\" class=\"data row3 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_b33b4_row3_col1\" class=\"data row3 col1\" ><a href=\"#ImageSegmentPerformance-TestDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\">Image Segment Performance - Test Dataset</a></td>\n      <td id=\"T_b33b4_row3_col2\" class=\"data row3 col2\" >Segment's ratio between score to mean is greater than 80%</td>\n      <td id=\"T_b33b4_row3_col3\" class=\"data row3 col3\" >Properties with failed segments: Brightness: {'Range': '(-inf, 0.33)', 'Metric': 'Average Precision', 'Ratio': 0.11}, Mean Blue Relative Intensity: {'Range': '[0.2, 0.23)', 'Metric': 'Average Precision', 'Ratio': 0.29}, Mean Green Relative Intensity: {'Range': '[0.41, 0.45)', 'Metric': 'Average Reca...</td>\n    </tr>\n    <tr>\n      <td id=\"T_b33b4_row4_col0\" class=\"data row4 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_b33b4_row4_col1\" class=\"data row4 col1\" ><a href=\"#ImageSegmentPerformance-TrainDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\">Image Segment Performance - Train Dataset</a></td>\n      <td id=\"T_b33b4_row4_col2\" class=\"data row4 col2\" >Segment's ratio between score to mean is greater than 80%</td>\n      <td id=\"T_b33b4_row4_col3\" class=\"data row4 col3\" >Properties with failed segments: Brightness: {'Range': '[0.32, 0.38)', 'Metric': 'Average Recall', 'Ratio': 0.53}, Mean Blue Relative Intensity: {'Range': '(-inf, 0.2)', 'Metric': 'Average Recall', 'Ratio': 0.68}, Mean Green Relative Intensity: {'Range': '[0.45, 0.48)', 'Metric': 'Average Precision'...</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "6a321034d0864b018f1db3f789fb5700": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "be6aaa7e0880403ab9c2e6c805c50b28": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "f5806566e1384d01ad58546da14b00ac": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_35eee03469634e799ff7aa0d0f5ac160", "style": "IPY_MODEL_6cd84c4e5496459cad84d612b672d817", "value": "<hr style=\"background-color: #eee;border: 0 none;color: #eee;height: 4px;\">"}}, "35eee03469634e799ff7aa0d0f5ac160": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "6cd84c4e5496459cad84d612b672d817": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "8415b3fa5a09415896989f2ef844dfaa": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_1e81837449654095ab03cd5a7656ef78", "IPY_MODEL_63a054280f984d44a6a59dc9412a96ca", "IPY_MODEL_d9bae52e9cba40b2a8708858b2db7ad5", "IPY_MODEL_5130251f005040328635a6e2e5ceb5aa"], "layout": "IPY_MODEL_139341f8d34c444990e16bdb5374166e"}}, "1e81837449654095ab03cd5a7656ef78": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3685184cfbfa44aa9a8b7bf278a9f6cd", "style": "IPY_MODEL_f145c4ceafdd4dceae712e0805309eaa", "value": "<h4 id=\"ClassPerformance_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\"><b>Class Performance</b></h4>"}}, "3685184cfbfa44aa9a8b7bf278a9f6cd": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "f145c4ceafdd4dceae712e0805309eaa": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "63a054280f984d44a6a59dc9412a96ca": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_bdfa7d22312246218ce85c0098304ede", "style": "IPY_MODEL_00bcc7de546b4c0394a5424fd69270df", "value": "<p>Summarize given metrics on a dataset and model. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_class_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "bdfa7d22312246218ce85c0098304ede": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "00bcc7de546b4c0394a5424fd69270df": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "d9bae52e9cba40b2a8708858b2db7ad5": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_bc7a3464e05f4f8ba1b7205e97523fe8", "style": "IPY_MODEL_b813b75d306341259ac90bf578338749", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_a21f7_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a21f7_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a21f7_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a21f7_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a21f7_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_a21f7_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_a21f7_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_a21f7_row0_col1\" class=\"data row0 col1\" >Train-Test scores relative degradation is less than 0.1</td>\n      <td id=\"T_a21f7_row0_col2\" class=\"data row0 col2\" >2 scores failed. Found max degradation of 49.42% for metric Average Precision and class Tomato.</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "bc7a3464e05f4f8ba1b7205e97523fe8": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b813b75d306341259ac90bf578338749": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "5130251f005040328635a6e2e5ceb5aa": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_bfc74f3eb8a8419998db23309b0e5e0c", "IPY_MODEL_912900d44aad421783ed72634e7152d8", "IPY_MODEL_ac2ed935b5dc4a5eac01c3737702b191"], "layout": "IPY_MODEL_5767a05b09974c96b6c04ecd58c58a0a"}}, "bfc74f3eb8a8419998db23309b0e5e0c": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_00bbb7307c254d03bfc2860058146df1", "style": "IPY_MODEL_58fc69b9064143a092f38c7c4589ecbb", "value": "<h5><b>Additional Outputs</b></h5>"}}, "00bbb7307c254d03bfc2860058146df1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "58fc69b9064143a092f38c7c4589ecbb": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "912900d44aad421783ed72634e7152d8": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Train<br>Metric=Average Recall<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Train", "marker": {"color": "#00008b", "pattern": {"shape": ""}}, "name": "Train", "offsetgroup": "Train", "orientation": "v", "showlegend": true, "x": ["Tomato"], "xaxis": "x", "y": {"dtype": "float64", "shape": [1]}, "yaxis": "y", "type": "histogram", "uid": "007b0fd5-f52d-49c5-80fb-4249df97a666"}, {"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Train<br>Metric=Average Precision<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Train", "marker": {"color": "#00008b", "pattern": {"shape": ""}}, "name": "Train", "offsetgroup": "Train", "orientation": "v", "showlegend": false, "x": ["Tomato"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [1]}, "yaxis": "y2", "type": "histogram", "uid": "1da16428-0e09-4af0-b2d3-9dc7b5f1cbe1"}, {"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Test<br>Metric=Average Recall<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Test", "marker": {"color": "#69b3a2", "pattern": {"shape": ""}}, "name": "Test", "offsetgroup": "Test", "orientation": "v", "showlegend": true, "x": ["Tomato"], "xaxis": "x", "y": {"dtype": "float64", "shape": [1]}, "yaxis": "y", "type": "histogram", "uid": "69ca1381-8c84-4c68-a188-bda28adf1c49"}, {"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Test<br>Metric=Average Precision<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Test", "marker": {"color": "#69b3a2", "pattern": {"shape": ""}}, "name": "Test", "offsetgroup": "Test", "orientation": "v", "showlegend": false, "x": ["Tomato"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [1]}, "yaxis": "y2", "type": "histogram", "uid": "6f5803d1-233c-4312-9798-2a56ba45c56f"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"showarrow": false, "text": "Average Recall", "x": 0.2375, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Average Precision", "x": 0.7625, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}], "barmode": "group", "legend": {"title": {"text": "Dataset"}, "tracegroupgap": 0}, "margin": {"t": 60}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "xaxis": {"anchor": "y", "domain": [0.0, 0.475], "title": {"text": "Class"}, "type": "category"}, "yaxis": {"anchor": "x", "domain": [0.0, 1.0], "showticklabels": true, "title": {"text": "Value"}}, "xaxis2": {"anchor": "y2", "domain": [0.525, 1.0], "matches": "x", "title": {"text": "Class"}, "type": "category"}, "yaxis2": {"anchor": "x2", "domain": [0.0, 1.0], "showticklabels": true, "title": {"text": "Value"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 0, "y", "buffer"], "data": "a7nPcI9Srz8="}, {"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "Nr3odJkgnT8="}, {"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "gaoocvZKpj8="}, {"encoding": "base64", "path": ["_data", 3, "y", "buffer"], "data": "XTbPw752jT8="}]}, "ac2ed935b5dc4a5eac01c3737702b191": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_43fdb55142384fa89df77fa484fb2c4f", "style": "IPY_MODEL_b51cb3e99f0440348206c5779872763d", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\" style=\"font-size: 14px;\">Go to top</a>"}}, "43fdb55142384fa89df77fa484fb2c4f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b51cb3e99f0440348206c5779872763d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "5767a05b09974c96b6c04ecd58c58a0a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "139341f8d34c444990e16bdb5374166e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "486fbb6e1b074b6abbe0067b32026437": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_a5aaa019b74049ec81ff774d4c67f464", "style": "IPY_MODEL_d70164f04375491cac88d94d135350dc", "value": "<hr style=\"background-color: #eee;border: 0 none;color: #eee;height: 4px;\">"}}, "a5aaa019b74049ec81ff774d4c67f464": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d70164f04375491cac88d94d135350dc": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "f15c4942e47d4e4290337b4d2e3907b4": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_18db8ad156ac486a821ad1045e76b82b", "IPY_MODEL_d01c8e07dec74be9a68740f704890837", "IPY_MODEL_539603ec1f9b4d70ba9524d8a65886bf", "IPY_MODEL_7e0ea8c8e7aa40bfb588e7267ff0396c"], "layout": "IPY_MODEL_a69e1ae6328a4ec08e93de39585b2a7c"}}, "18db8ad156ac486a821ad1045e76b82b": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_5f35283ad1594752893f1e600e165ad9", "style": "IPY_MODEL_aadc534c53074e55b10a1c9eb2aa6c98", "value": "<h4 id=\"MeanAveragePrecisionReport-TestDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\"><b>Mean Average Precision Report - Test Dataset</b></h4>"}}, "5f35283ad1594752893f1e600e165ad9": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "aadc534c53074e55b10a1c9eb2aa6c98": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "d01c8e07dec74be9a68740f704890837": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_f39bd2edd99146eaa1f5167c8ca145f0", "style": "IPY_MODEL_219038697da943e985d0ad2caa10b5b5", "value": "<p>Summarize mean average precision metrics on a dataset and model per IoU and bounding box area. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_mean_average_precision_report.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "f39bd2edd99146eaa1f5167c8ca145f0": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "219038697da943e985d0ad2caa10b5b5": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "539603ec1f9b4d70ba9524d8a65886bf": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_a3af859e8c704948a45140505452d711", "style": "IPY_MODEL_19dc0c4eab0e438cbec3a72281e92578", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_5f818_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_5f818_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_5f818_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_5f818_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_5f818_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_5f818_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_5f818_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_5f818_row0_col1\" class=\"data row0 col1\" >mAP score is greater than 0.3</td>\n      <td id=\"T_5f818_row0_col2\" class=\"data row0 col2\" >mAP score is: 0.01</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "a3af859e8c704948a45140505452d711": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "19dc0c4eab0e438cbec3a72281e92578": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "7e0ea8c8e7aa40bfb588e7267ff0396c": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_ed3d445444ad4cdcbe124e3f2b55070a", "IPY_MODEL_097fc816fd4e43c9b6049bc4def7d7da", "IPY_MODEL_bae49de681034e9bb0b9654e23dd9d28", "IPY_MODEL_74c99591301e4bc7a202905df3797a68"], "layout": "IPY_MODEL_c0a583a32a694fe5b68b134bfda5ad9b"}}, "ed3d445444ad4cdcbe124e3f2b55070a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_5830735fa0f44934b6761941b64d2cf1", "style": "IPY_MODEL_cacf21309199403b850f4fa31d1f10f9", "value": "<h5><b>Additional Outputs</b></h5>"}}, "5830735fa0f44934b6761941b64d2cf1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "cacf21309199403b850f4fa31d1f10f9": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "097fc816fd4e43c9b6049bc4def7d7da": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_5e81f62631214e70a1f001076c46931e", "style": "IPY_MODEL_ebc5d73f90a6405c978cb86a826fabdf", "value": "<style type=\"text/css\">\n#T_ed1fa_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_ed1fa_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_ed1fa_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_ed1fa_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_ed1fa_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_ed1fa_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >mAP@[.50::.95] (avg.%)</th>\n      <th class=\"col_heading level0 col1\" >mAP@.50 (%)</th>\n      <th class=\"col_heading level0 col2\" >mAP@.75 (%)</th>\n    </tr>\n    <tr>\n      <th class=\"index_name level0\" >Area size</th>\n      <th class=\"blank col0\" >&nbsp;</th>\n      <th class=\"blank col1\" >&nbsp;</th>\n      <th class=\"blank col2\" >&nbsp;</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_ed1fa_level0_row0\" class=\"row_heading level0 row0\" >All</th>\n      <td id=\"T_ed1fa_row0_col0\" class=\"data row0 col0\" >0.01</td>\n      <td id=\"T_ed1fa_row0_col1\" class=\"data row0 col1\" >0.05</td>\n      <td id=\"T_ed1fa_row0_col2\" class=\"data row0 col2\" >0.01</td>\n    </tr>\n    <tr>\n      <th id=\"T_ed1fa_level0_row1\" class=\"row_heading level0 row1\" >Small (area < 32^2)</th>\n      <td id=\"T_ed1fa_row1_col0\" class=\"data row1 col0\" >0.00</td>\n      <td id=\"T_ed1fa_row1_col1\" class=\"data row1 col1\" >0.01</td>\n      <td id=\"T_ed1fa_row1_col2\" class=\"data row1 col2\" >0.00</td>\n    </tr>\n    <tr>\n      <th id=\"T_ed1fa_level0_row2\" class=\"row_heading level0 row2\" >Medium (32^2 < area < 96^2)</th>\n      <td id=\"T_ed1fa_row2_col0\" class=\"data row2 col0\" >0.06</td>\n      <td id=\"T_ed1fa_row2_col1\" class=\"data row2 col1\" >0.20</td>\n      <td id=\"T_ed1fa_row2_col2\" class=\"data row2 col2\" >0.02</td>\n    </tr>\n    <tr>\n      <th id=\"T_ed1fa_level0_row3\" class=\"row_heading level0 row3\" >Large (area < 96^2)</th>\n      <td id=\"T_ed1fa_row3_col0\" class=\"data row3 col0\" >0.00</td>\n      <td id=\"T_ed1fa_row3_col1\" class=\"data row3 col1\" >0.00</td>\n      <td id=\"T_ed1fa_row3_col2\" class=\"data row3 col2\" >0.00</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "5e81f62631214e70a1f001076c46931e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ebc5d73f90a6405c978cb86a826fabdf": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "bae49de681034e9bb0b9654e23dd9d28": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"hovertemplate": "IoU threshold=%{x}<br>mAP (%)=%{y}<extra></extra>", "legendgroup": "", "line": {"color": "#636efa", "dash": "solid"}, "marker": {"symbol": "circle"}, "mode": "lines", "name": "", "orientation": "v", "showlegend": false, "x": {"dtype": "float64", "shape": [10]}, "xaxis": "x", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y", "type": "scatter", "uid": "4d335d43-d18c-4b0d-8985-3afab3677ae1"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"legend": {"tracegroupgap": 0}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Mean Average Precision over increasing IoU thresholds"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "title": {"text": "IoU threshold"}}, "yaxis": {"anchor": "x", "domain": [0.0, 1.0], "title": {"text": "mAP (%)"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 0, "x", "buffer"], "data": "AAAAAAAA4D+amZmZmZnhPzMzMzMzM+M/zczMzMzM5D9mZmZmZmbmPwAAAAAAAOg/mpmZmZmZ6T8zMzMzMzPrP8zMzMzMzOw/ZmZmZmZm7j8="}, {"encoding": "base64", "path": ["_data", 0, "y", "buffer"], "data": "BgvmbtEZqz+QrX77JeSgPw/SHG8RMZg/FzPxFFFKkD+d5TgXdvSFP90AvT0pBnc/cGmN5aPcWj+g9wM0ODY8PwAAAAAAAAAAAAAAAAAAAAA="}]}, "74c99591301e4bc7a202905df3797a68": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_91d1b2bdd88f44ee86a528c059e6c75a", "style": "IPY_MODEL_51e452cfea514828b96e30d1a4504f1d", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\" style=\"font-size: 14px;\">Go to top</a>"}}, "91d1b2bdd88f44ee86a528c059e6c75a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "51e452cfea514828b96e30d1a4504f1d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "c0a583a32a694fe5b68b134bfda5ad9b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a69e1ae6328a4ec08e93de39585b2a7c": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a135d35af11344e9b7fb790684a8b70a": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_5ba5787b72304afcbb281d8d80058c6b", "IPY_MODEL_e7addbc07110447ca19bc861fed419a6", "IPY_MODEL_3dee3aa9c0fd4e93ace4ee77d21126a0", "IPY_MODEL_20e65e96abbf41e89bc35997a0bbbf54"], "layout": "IPY_MODEL_43413a59c4dd498492a910ead823b6a5"}}, "5ba5787b72304afcbb281d8d80058c6b": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_ae0dc50cbe6e40e29ec5190f8652aba6", "style": "IPY_MODEL_bca8c745c20040c19d2277abf60cd261", "value": "<h4 id=\"MeanAveragePrecisionReport-TrainDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\"><b>Mean Average Precision Report - Train Dataset</b></h4>"}}, "ae0dc50cbe6e40e29ec5190f8652aba6": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "bca8c745c20040c19d2277abf60cd261": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "e7addbc07110447ca19bc861fed419a6": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_f910a620a3214b29b6cd6c8482d966db", "style": "IPY_MODEL_4cebba63f88b4d46bcfde7f68fcc86bd", "value": "<p>Summarize mean average precision metrics on a dataset and model per IoU and bounding box area. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_mean_average_precision_report.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "f910a620a3214b29b6cd6c8482d966db": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "4cebba63f88b4d46bcfde7f68fcc86bd": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "3dee3aa9c0fd4e93ace4ee77d21126a0": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_1aa3dcb268f44897a04e07b42962c31f", "style": "IPY_MODEL_a7261651f5484e74b533756faad8a937", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_fef8f_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_fef8f_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_fef8f_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_fef8f_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_fef8f_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_fef8f_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_fef8f_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_fef8f_row0_col1\" class=\"data row0 col1\" >mAP score is greater than 0.3</td>\n      <td id=\"T_fef8f_row0_col2\" class=\"data row0 col2\" >mAP score is: 0.03</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "1aa3dcb268f44897a04e07b42962c31f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a7261651f5484e74b533756faad8a937": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "20e65e96abbf41e89bc35997a0bbbf54": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_77c6e8b17f174beb908d6e1f94df96de", "IPY_MODEL_855c91e9cf8f45219e0aa45a161c1532", "IPY_MODEL_1cf657de545942ab9c7eaf3557eef119", "IPY_MODEL_d6f0916d41b44f87ad7f0dbfd02599f4"], "layout": "IPY_MODEL_86bb721a33df47dcaa5b390239409251"}}, "77c6e8b17f174beb908d6e1f94df96de": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_8c7b6586a873435592191d52a55f0fae", "style": "IPY_MODEL_00b380877e5042acb3d344fffb74ca51", "value": "<h5><b>Additional Outputs</b></h5>"}}, "8c7b6586a873435592191d52a55f0fae": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "00b380877e5042acb3d344fffb74ca51": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "855c91e9cf8f45219e0aa45a161c1532": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_4c84956232664f6c92e1c6bdd755cd6a", "style": "IPY_MODEL_49caa181a4404ef3a2bb35203a26f4b0", "value": "<style type=\"text/css\">\n#T_d6a28_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_d6a28_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_d6a28_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_d6a28_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_d6a28_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_d6a28_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >mAP@[.50::.95] (avg.%)</th>\n      <th class=\"col_heading level0 col1\" >mAP@.50 (%)</th>\n      <th class=\"col_heading level0 col2\" >mAP@.75 (%)</th>\n    </tr>\n    <tr>\n      <th class=\"index_name level0\" >Area size</th>\n      <th class=\"blank col0\" >&nbsp;</th>\n      <th class=\"blank col1\" >&nbsp;</th>\n      <th class=\"blank col2\" >&nbsp;</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_d6a28_level0_row0\" class=\"row_heading level0 row0\" >All</th>\n      <td id=\"T_d6a28_row0_col0\" class=\"data row0 col0\" >0.03</td>\n      <td id=\"T_d6a28_row0_col1\" class=\"data row0 col1\" >0.07</td>\n      <td id=\"T_d6a28_row0_col2\" class=\"data row0 col2\" >0.02</td>\n    </tr>\n    <tr>\n      <th id=\"T_d6a28_level0_row1\" class=\"row_heading level0 row1\" >Small (area < 32^2)</th>\n      <td id=\"T_d6a28_row1_col0\" class=\"data row1 col0\" >0.00</td>\n      <td id=\"T_d6a28_row1_col1\" class=\"data row1 col1\" >0.00</td>\n      <td id=\"T_d6a28_row1_col2\" class=\"data row1 col2\" >0.00</td>\n    </tr>\n    <tr>\n      <th id=\"T_d6a28_level0_row2\" class=\"row_heading level0 row2\" >Medium (32^2 < area < 96^2)</th>\n      <td id=\"T_d6a28_row2_col0\" class=\"data row2 col0\" >0.10</td>\n      <td id=\"T_d6a28_row2_col1\" class=\"data row2 col1\" >0.27</td>\n      <td id=\"T_d6a28_row2_col2\" class=\"data row2 col2\" >0.06</td>\n    </tr>\n    <tr>\n      <th id=\"T_d6a28_level0_row3\" class=\"row_heading level0 row3\" >Large (area < 96^2)</th>\n      <td id=\"T_d6a28_row3_col0\" class=\"data row3 col0\" >0.02</td>\n      <td id=\"T_d6a28_row3_col1\" class=\"data row3 col1\" >0.04</td>\n      <td id=\"T_d6a28_row3_col2\" class=\"data row3 col2\" >0.02</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "4c84956232664f6c92e1c6bdd755cd6a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "49caa181a4404ef3a2bb35203a26f4b0": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "1cf657de545942ab9c7eaf3557eef119": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"hovertemplate": "IoU threshold=%{x}<br>mAP (%)=%{y}<extra></extra>", "legendgroup": "", "line": {"color": "#636efa", "dash": "solid"}, "marker": {"symbol": "circle"}, "mode": "lines", "name": "", "orientation": "v", "showlegend": false, "x": {"dtype": "float64", "shape": [10]}, "xaxis": "x", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y", "type": "scatter", "uid": "d62d6fec-e837-440d-bc40-7d630752a514"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"legend": {"tracegroupgap": 0}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Mean Average Precision over increasing IoU thresholds"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "title": {"text": "IoU threshold"}}, "yaxis": {"anchor": "x", "domain": [0.0, 1.0], "title": {"text": "mAP (%)"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 0, "x", "buffer"], "data": "AAAAAAAA4D+amZmZmZnhPzMzMzMzM+M/zczMzMzM5D9mZmZmZmbmPwAAAAAAAOg/mpmZmZmZ6T8zMzMzMzPrP8zMzMzMzOw/ZmZmZmZm7j8="}, {"encoding": "base64", "path": ["_data", 0, "y", "buffer"], "data": "BSFOmC5zsT8514rrNLyqP2iHz+I3DqU/v5hhfP1PoD+QNvwyd9uZP3+pzGst+ZM//fA+IwNojj+OtiyKbl+HP/GgbeQr0YQ/+tliZfhGhD8="}]}, "d6f0916d41b44f87ad7f0dbfd02599f4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_599c7ab7900445aea1c3ee1db6a31675", "style": "IPY_MODEL_9dc5005c8de14d2c83891fe937880495", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\" style=\"font-size: 14px;\">Go to top</a>"}}, "599c7ab7900445aea1c3ee1db6a31675": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9dc5005c8de14d2c83891fe937880495": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "86bb721a33df47dcaa5b390239409251": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "43413a59c4dd498492a910ead823b6a5": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "f0e5868f7a78407ebeade694a63a0102": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_5fcf18bae9264c9f92e5a486df6e4c94", "IPY_MODEL_2fa765cebcce4f7395838dc38fe46ec3", "IPY_MODEL_ff07feefe3534aa9a3b1e50db75f6912", "IPY_MODEL_81f339befc4345d6a90f09cbb6e8dd0b"], "layout": "IPY_MODEL_dc7a932554644ed9849a68f85b6e4368"}}, "5fcf18bae9264c9f92e5a486df6e4c94": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_a5967bcf8fed4aa0800a684e65836177", "style": "IPY_MODEL_63e6dbe99d5749f99a059a09dde69aa8", "value": "<h4 id=\"ImageSegmentPerformance-TestDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\"><b>Image Segment Performance - Test Dataset</b></h4>"}}, "a5967bcf8fed4aa0800a684e65836177": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "63e6dbe99d5749f99a059a09dde69aa8": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "2fa765cebcce4f7395838dc38fe46ec3": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_e341cb379c1b4c94a0259575e6a2207d", "style": "IPY_MODEL_cb4ee137aafa403eafc2b0bd5322e5a8", "value": "<p>Segment the data by various properties of the image, and compare the performance of the segments. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_image_segment_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "e341cb379c1b4c94a0259575e6a2207d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "cb4ee137aafa403eafc2b0bd5322e5a8": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "ff07feefe3534aa9a3b1e50db75f6912": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_e743cf4d1bf94e92b21bd2207c6b8cec", "style": "IPY_MODEL_3db68604fc4344209e684ac7dad65691", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_80cfd_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_80cfd_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_80cfd_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_80cfd_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_80cfd_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_80cfd_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_80cfd_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_80cfd_row0_col1\" class=\"data row0 col1\" >Segment's ratio between score to mean is greater than 80%</td>\n      <td id=\"T_80cfd_row0_col2\" class=\"data row0 col2\" >Properties with failed segments: Brightness: {'Range': '(-inf, 0.33)', 'Metric': 'Average Precision', 'Ratio': 0.11}, Mean Blue Relative Intensity: {'Range': '[0.2, 0.23)', 'Metric': 'Average Precision', 'Ratio': 0.29}, Mean Green Relative Intensity: {'Range': '[0.41, 0.45)', 'Metric': 'Average Recall', 'Ratio': 0.28}, Mean Red Relative Intensity: {'Range': '(-inf, 0.31)', 'Metric': 'Average Precision', 'Ratio': 0.03}, RMS Contrast: {'Range': '[0.16, 0.19)', 'Metric': 'Average Precision', 'Ratio': 0.45}</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "e743cf4d1bf94e92b21bd2207c6b8cec": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "3db68604fc4344209e684ac7dad65691": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "81f339befc4345d6a90f09cbb6e8dd0b": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_964303511df6495fbfa2ee77a81cd5aa", "IPY_MODEL_bef2931d386b4a4788690f7ef681ba3d", "IPY_MODEL_bfd54090c9214d8a98184eac839154b3"], "layout": "IPY_MODEL_0acf5ae333f04b60b869e27edcbe179f"}}, "964303511df6495fbfa2ee77a81cd5aa": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_de4bcf70d150445faf85d18828dac411", "style": "IPY_MODEL_9ec9694216674b8989e1056abee25f8b", "value": "<h5><b>Additional Outputs</b></h5>"}}, "de4bcf70d150445faf85d18828dac411": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9ec9694216674b8989e1056abee25f8b": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "bef2931d386b4a4788690f7ef681ba3d": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"alignmentgroup": "True", "customdata": [[18], [18], [18], [18], [18]], "hovertemplate": "Metric=Average Precision<br>Property=Brightness<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Average Precision", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Average Precision", "offsetgroup": "Average Precision", "orientation": "v", "showlegend": true, "textposition": "auto", "width": 0.2, "x": ["(-inf, 0.33)", "[0.33, 0.38)", "[0.38, 0.44)", "[0.44, 0.52)", "[0.52, inf)"], "xaxis": "x", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y", "type": "bar", "uid": "8930c827-112d-46dd-a9ad-1deac71094ce"}, {"alignmentgroup": "True", "customdata": [[18], [18], [18], [18], [18]], "hovertemplate": "Metric=Average Precision<br>Property=RMS Contrast<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Average Precision", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Average Precision", "offsetgroup": "Average Precision", "orientation": "v", "showlegend": false, "textposition": "auto", "width": 0.2, "x": ["(-inf, 0.13)", "[0.13, 0.16)", "[0.16, 0.19)", "[0.19, 0.23)", "[0.23, inf)"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y2", "type": "bar", "uid": "049cf845-8f8b-4246-96c9-8a5492c6384f"}, {"alignmentgroup": "True", "customdata": [[18], [18], [18], [18], [18]], "hovertemplate": "Metric=Average Precision<br>Property=Mean Blue Relative Intensity<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Average Precision", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Average Precision", "offsetgroup": "Average Precision", "orientation": "v", "showlegend": false, "textposition": "auto", "width": 0.2, "x": ["(-inf, 0.2)", "[0.2, 0.23)", "[0.23, 0.26)", "[0.26, 0.29)", "[0.29, inf)"], "xaxis": "x3", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y3", "type": "bar", "uid": "3c989d69-137a-4015-8b96-9343158a44ac"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"showarrow": false, "text": "Brightness", "x": 0.14666666666666667, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "RMS Contrast", "x": 0.49, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Mean Blue Relative Intensity", "x": 0.8333333333333333, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Average Precision", "textangle": 90, "x": 0.98, "xanchor": "left", "xref": "paper", "y": 0.5, "yanchor": "middle", "yref": "paper"}], "barmode": "group", "legend": {"title": {"text": "Metric"}, "tracegroupgap": 0}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Metric Score Per Property Value Segment (showing top 3 properties by diffrence in segments)"}, "xaxis": {"anchor": "y", "domain": [0.0, 0.29333333333333333], "type": "category"}, "yaxis": {"anchor": "x", "domain": [0.0, 1.0], "showticklabels": true}, "xaxis2": {"anchor": "y2", "domain": [0.3433333333333333, 0.6366666666666667], "type": "category"}, "yaxis2": {"anchor": "x2", "domain": [0.0, 1.0], "matches": "y", "showticklabels": true}, "xaxis3": {"anchor": "y3", "domain": [0.6866666666666666, 0.98], "type": "category"}, "yaxis3": {"anchor": "x3", "domain": [0.0, 1.0], "matches": "y", "showticklabels": true}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 0, "y", "buffer"], "data": "UOFT4sEBZD+6EJcGS8x1P2gkhY/WApw/UGgMQnwpoz/NSkZvchKmPw=="}, {"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "qjdGlZCXij9xnsMvsMiFP1b//Ih7IIM/ls5SDDJMrT8aPbEx4+6NPw=="}, {"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "SYq3yNbwgD9CQ0U/Qtd/PxDD/6MD8Is/5zzwEx41mT/6j4Ubqhi0Pw=="}]}, "bfd54090c9214d8a98184eac839154b3": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_8a0ddc4d49ab4020ae6d31edc475466d", "style": "IPY_MODEL_c182a8ba361e42cab5a8baad3897a66d", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\" style=\"font-size: 14px;\">Go to top</a>"}}, "8a0ddc4d49ab4020ae6d31edc475466d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "c182a8ba361e42cab5a8baad3897a66d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "0acf5ae333f04b60b869e27edcbe179f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "dc7a932554644ed9849a68f85b6e4368": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "12e41b0aa8c341caa8af33cfa484df4b": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_29e9bb331cb7423d88e99e00deb23b1e", "IPY_MODEL_4677bb71927e4efca590e78022573ed7", "IPY_MODEL_e9d482806c0d49c0a2949f273fe5a826", "IPY_MODEL_b06b4048b76e447083f6b21e67c51b08"], "layout": "IPY_MODEL_d6417e9896884fa08844377feca0bd77"}}, "29e9bb331cb7423d88e99e00deb23b1e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_5809803636de49fa9139a548efde092d", "style": "IPY_MODEL_5938df4ecddf4dbaa7818da4db721365", "value": "<h4 id=\"ImageSegmentPerformance-TrainDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\"><b>Image Segment Performance - Train Dataset</b></h4>"}}, "5809803636de49fa9139a548efde092d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "5938df4ecddf4dbaa7818da4db721365": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "4677bb71927e4efca590e78022573ed7": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3d3c4bdd3fbf4b5391470f17665603fe", "style": "IPY_MODEL_d33f4f5d44774aa1945f645dcd5a7afc", "value": "<p>Segment the data by various properties of the image, and compare the performance of the segments. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_image_segment_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "3d3c4bdd3fbf4b5391470f17665603fe": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d33f4f5d44774aa1945f645dcd5a7afc": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "e9d482806c0d49c0a2949f273fe5a826": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_164b7dfb995b46a996252df9f8512c9e", "style": "IPY_MODEL_b39b3bdcf5df41739d84d93432053c43", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_22315_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_22315_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_22315_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_22315_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_22315_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_22315_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_22315_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_22315_row0_col1\" class=\"data row0 col1\" >Segment's ratio between score to mean is greater than 80%</td>\n      <td id=\"T_22315_row0_col2\" class=\"data row0 col2\" >Properties with failed segments: Brightness: {'Range': '[0.32, 0.38)', 'Metric': 'Average Recall', 'Ratio': 0.53}, Mean Blue Relative Intensity: {'Range': '(-inf, 0.2)', 'Metric': 'Average Recall', 'Ratio': 0.68}, Mean Green Relative Intensity: {'Range': '[0.45, 0.48)', 'Metric': 'Average Precision', 'Ratio': 0.54}, Mean Red Relative Intensity: {'Range': '(-inf, 0.31)', 'Metric': 'Average Recall', 'Ratio': 0.71}, RMS Contrast: {'Range': '[0.17, 0.2)', 'Metric': 'Average Precision', 'Ratio': 0.64}</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "164b7dfb995b46a996252df9f8512c9e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b39b3bdcf5df41739d84d93432053c43": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "b06b4048b76e447083f6b21e67c51b08": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_df03c19cd48a4f718f4b71d23ec08bdd", "IPY_MODEL_9e18731f6ff34827a0950ee3974f313e", "IPY_MODEL_d95d27aea12c4f7d954c7c7860cf028c"], "layout": "IPY_MODEL_9b63f4cb77474feb80e59f06b741deee"}}, "df03c19cd48a4f718f4b71d23ec08bdd": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_26730198eceb41e5a28aa8fea07470a3", "style": "IPY_MODEL_7016a3c28d834bb58336a6fa754757b6", "value": "<h5><b>Additional Outputs</b></h5>"}}, "26730198eceb41e5a28aa8fea07470a3": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "7016a3c28d834bb58336a6fa754757b6": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "9e18731f6ff34827a0950ee3974f313e": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"alignmentgroup": "True", "customdata": [[161], [161], [161], [161], [161]], "hovertemplate": "Metric=Average Precision<br>Property=RMS Contrast<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Average Precision", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Average Precision", "offsetgroup": "Average Precision", "orientation": "v", "showlegend": true, "textposition": "auto", "width": 0.2, "x": ["(-inf, 0.13)", "[0.13, 0.17)", "[0.17, 0.2)", "[0.2, 0.22)", "[0.22, inf)"], "xaxis": "x", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y", "type": "bar", "uid": "194fee0b-0f72-4a08-9f21-3c9622ce058f"}, {"alignmentgroup": "True", "customdata": [[161], [161], [161], [161], [161]], "hovertemplate": "Metric=Average Precision<br>Property=Mean Red Relative Intensity<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Average Precision", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Average Precision", "offsetgroup": "Average Precision", "orientation": "v", "showlegend": false, "textposition": "auto", "width": 0.2, "x": ["(-inf, 0.31)", "[0.31, 0.33)", "[0.33, 0.34)", "[0.34, 0.36)", "[0.36, inf)"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y2", "type": "bar", "uid": "8e29fb75-12b6-49fc-a9af-96522659260b"}, {"alignmentgroup": "True", "customdata": [[161], [161], [161], [161], [161]], "hovertemplate": "Metric=Average Precision<br>Property=Mean Green Relative Intensity<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Average Precision", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Average Precision", "offsetgroup": "Average Precision", "orientation": "v", "showlegend": false, "textposition": "auto", "width": 0.2, "x": ["(-inf, 0.36)", "[0.36, 0.41)", "[0.41, 0.45)", "[0.45, 0.48)", "[0.48, inf)"], "xaxis": "x3", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y3", "type": "bar", "uid": "a2e182c0-9790-497e-a158-42ccaaf98c5b"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"showarrow": false, "text": "RMS Contrast", "x": 0.14666666666666667, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Mean Red Relative Intensity", "x": 0.49, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Mean Green Relative Intensity", "x": 0.8333333333333333, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Average Precision", "textangle": 90, "x": 0.98, "xanchor": "left", "xref": "paper", "y": 0.5, "yanchor": "middle", "yref": "paper"}], "barmode": "group", "legend": {"title": {"text": "Metric"}, "tracegroupgap": 0}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Metric Score Per Property Value Segment (showing top 3 properties by diffrence in segments)"}, "xaxis": {"anchor": "y", "domain": [0.0, 0.29333333333333333], "type": "category"}, "yaxis": {"anchor": "x", "domain": [0.0, 1.0], "showticklabels": true}, "xaxis2": {"anchor": "y2", "domain": [0.3433333333333333, 0.6366666666666667], "type": "category"}, "yaxis2": {"anchor": "x2", "domain": [0.0, 1.0], "matches": "y", "showticklabels": true}, "xaxis3": {"anchor": "y3", "domain": [0.6866666666666666, 0.98], "type": "category"}, "yaxis3": {"anchor": "x3", "domain": [0.0, 1.0], "matches": "y", "showticklabels": true}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 0, "y", "buffer"], "data": "JXRcXuJalz+r47LAByaWPzYUli4HK5I/Iz8Q103dnz/G/oETTdimPw=="}, {"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "yjHMU8Kbkz+KLQLnymqTP3ea8WbsTJQ/HCKWQnsdlD8hb5+BaSGoPw=="}, {"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "YsKDDHeUpz/rH3r8KfagP/balbPxtJM/5SBNxni8jT+R12fT6YSWPw=="}]}, "d95d27aea12c4f7d954c7c7860cf028c": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_de0c76b51d68467490306ddc06f37767", "style": "IPY_MODEL_23c04c7a22724a5f9b5cb4706a21d0fb", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\" style=\"font-size: 14px;\">Go to top</a>"}}, "de0c76b51d68467490306ddc06f37767": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "23c04c7a22724a5f9b5cb4706a21d0fb": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "9b63f4cb77474feb80e59f06b741deee": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d6417e9896884fa08844377feca0bd77": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "1c501208ddf743da99f153b1bd869ea3": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "0b2df2b55369432b8b5d3842ebba9bca": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a53d3450e689419981752c989fd1c5d7": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ec33b35b42d248ca964cd78a1d2a4e0e": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_38f271d24a8a4438bc6cd5811d14d006", "IPY_MODEL_227725f63bc14f7ab68a38034a896a15"], "layout": "IPY_MODEL_708f4b878f1e4cb9828f618f35e588eb"}}, "38f271d24a8a4438bc6cd5811d14d006": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_aa7a4790bed849358a600915ac631cd3", "style": "IPY_MODEL_58bc4c599986433a921337796a64934c", "value": "<span id=\"summary_UH17J8QO09VS9KKH4A3YJTU7F-section-I3DO7\"></span>"}}, "aa7a4790bed849358a600915ac631cd3": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "58bc4c599986433a921337796a64934c": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "227725f63bc14f7ab68a38034a896a15": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "_titles": {"0": "Passed"}, "children": ["IPY_MODEL_f018398f6d82417b993975c56e44f7ab"], "layout": "IPY_MODEL_101e3c6f6533440c83bbe2b9622237fb", "selected_index": null}}, "f018398f6d82417b993975c56e44f7ab": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_7ef69e981dc9425ba302987e56c48ab2", "IPY_MODEL_e62570829ea5433ebfa0f2bfcb8a56e8", "IPY_MODEL_beb7160a2f3741bf91d6eb9058f45eeb"], "layout": "IPY_MODEL_97a6bbd56dc7499688ba39056b886d79"}}, "7ef69e981dc9425ba302987e56c48ab2": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_4918951d74c44dcdb2d4e4c27073ad69", "style": "IPY_MODEL_4cd303e114b044ae9844cc830845112c", "value": "<style type=\"text/css\">\n#T_7b4f0_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_7b4f0_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_7b4f0_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_7b4f0_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_7b4f0_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_7b4f0_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Check</th>\n      <th class=\"col_heading level0 col2\" >Condition</th>\n      <th class=\"col_heading level0 col3\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_7b4f0_row0_col0\" class=\"data row0 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_7b4f0_row0_col1\" class=\"data row0 col1\" ><a href=\"#TrainTestPredictionDrift_UH17J8QO09VS9KKH4A3YJTU7F-section-I3DO7\">Train Test Prediction Drift</a></td>\n      <td id=\"T_7b4f0_row0_col2\" class=\"data row0 col2\" >categorical drift score < 0.15 and numerical drift score < 0.075 for prediction drift</td>\n      <td id=\"T_7b4f0_row0_col3\" class=\"data row0 col3\" >Passed for 3 prediction properties out of 3 prediction properties.\nFound prediction property \"Samples Per Class\" has the highest categorical drift score: 0\nFound prediction property \"Bounding Box Area (in pixels)\" has the highest numerical drift score: 0.05</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "4918951d74c44dcdb2d4e4c27073ad69": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "4cd303e114b044ae9844cc830845112c": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "e62570829ea5433ebfa0f2bfcb8a56e8": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3d59309bfdc64604b12fe29276252e4f", "style": "IPY_MODEL_9048f2c8a7cf4f83abab78cb4d7ffd99", "value": "<hr style=\"background-color: #eee;border: 0 none;color: #eee;height: 4px;\">"}}, "3d59309bfdc64604b12fe29276252e4f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9048f2c8a7cf4f83abab78cb4d7ffd99": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "beb7160a2f3741bf91d6eb9058f45eeb": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_3390a3e5711f4d67bb5510f32bb2e9f4", "IPY_MODEL_c3d1f9e0c4cc4fc2b6521c75428802a5", "IPY_MODEL_4052bd2fb5854c4496146f1defc812c5", "IPY_MODEL_fde262e99ccd4b49bda49593641c4a8d"], "layout": "IPY_MODEL_7a0d6cb4d0874170b36c48dacb9017f3"}}, "3390a3e5711f4d67bb5510f32bb2e9f4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_bb765d3fbda84457abc03709b9163554", "style": "IPY_MODEL_89aa432c56ab4ef29c6be3a494adf532", "value": "<h4 id=\"TrainTestPredictionDrift_UH17J8QO09VS9KKH4A3YJTU7F-section-I3DO7\"><b>Train Test Prediction Drift</b></h4>"}}, "bb765d3fbda84457abc03709b9163554": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "89aa432c56ab4ef29c6be3a494adf532": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "c3d1f9e0c4cc4fc2b6521c75428802a5": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_fcfc7c296af3403cbe13d4020ab668e9", "style": "IPY_MODEL_86be8f6f63ef461e822ebd20a4e41f67", "value": "<p>    Calculate prediction drift between train dataset and test dataset, using statistical measures. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_train_test_prediction_drift.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "fcfc7c296af3403cbe13d4020ab668e9": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "86be8f6f63ef461e822ebd20a4e41f67": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "4052bd2fb5854c4496146f1defc812c5": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_cf4b79317b1243c7b8af0cf8a9b38d9b", "style": "IPY_MODEL_2c1c5528f29c4c44a4558219a9d868eb", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_c07d6_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_c07d6_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_c07d6_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_c07d6_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_c07d6_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_c07d6_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_c07d6_row0_col0\" class=\"data row0 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_c07d6_row0_col1\" class=\"data row0 col1\" >categorical drift score < 0.15 and numerical drift score < 0.075 for prediction drift</td>\n      <td id=\"T_c07d6_row0_col2\" class=\"data row0 col2\" >Passed for 3 prediction properties out of 3 prediction properties.\nFound prediction property \"Samples Per Class\" has the highest categorical drift score: 0\nFound prediction property \"Bounding Box Area (in pixels)\" has the highest numerical drift score: 0.05</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "cf4b79317b1243c7b8af0cf8a9b38d9b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "2c1c5528f29c4c44a4558219a9d868eb": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "fde262e99ccd4b49bda49593641c4a8d": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_5328ed7921f141c1b0ac30c92e3e0041", "IPY_MODEL_b9f43e4b265b4fbfa3f5a9077ae46d6e", "IPY_MODEL_b0070694218549008152e135a000b035", "IPY_MODEL_c7c8090ced4b4f9c82f69526b91e1f19", "IPY_MODEL_1e20dc8705df41a8be54e009203efd5f", "IPY_MODEL_162634d0a8f44e90bb9eef5743a354ec", "IPY_MODEL_fb2733abea9643ef8d58ffe2d74f7d81"], "layout": "IPY_MODEL_843e023ca06b4e14882857b5a44379a0"}}, "5328ed7921f141c1b0ac30c92e3e0041": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_9596e3c580eb4c5a8cddea04bac9722d", "style": "IPY_MODEL_e86368a31e1b47b7b186ebf91a0ac997", "value": "<h5><b>Additional Outputs</b></h5>"}}, "9596e3c580eb4c5a8cddea04bac9722d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e86368a31e1b47b7b186ebf91a0ac997": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "b9f43e4b265b4fbfa3f5a9077ae46d6e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_9f6193c6127a499f9266f5842d23a6b4", "style": "IPY_MODEL_b43dea1bd9f04cbb9f0afa9c1a07ff05", "value": "<div><span>The Drift score is a measure for the difference between two distributions. In this check, drift is measured for the distribution of the following prediction properties: ['Samples Per Class', 'Bounding Box Area (in pixels)', 'Number of Bounding Boxes Per Image']. </span></div>"}}, "9f6193c6127a499f9266f5842d23a6b4": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b43dea1bd9f04cbb9f0afa9c1a07ff05": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "b0070694218549008152e135a000b035": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_bfd48b1d6e994c1c9c3af6e5d96c0d45", "style": "IPY_MODEL_9cdfcc36df8c4a23a60819523b941ebe", "value": "<div>For discrete distribution plots, showing the top 10 categories with largest difference between train and test.</div>"}}, "bfd48b1d6e994c1c9c3af6e5d96c0d45": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9cdfcc36df8c4a23a60819523b941ebe": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "c7c8090ced4b4f9c82f69526b91e1f19": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"base": 0, "marker": {"color": "#01B8AA"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.04909983289982629], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "489beaf1-3990-408a-ac74-067220b756c5"}, {"fill": "tozeroy", "line": {"color": "#00008b", "shape": "spline"}, "name": "Train Dataset", "x": [0.0, 40.57234451293945, 88.40034179687501, 101.94984039306641, 142.885078125, 144.57436096191407, 209.68835510253908, 210.84809470663265, 233.3550714111328, 255.44640502929687, 277.5053771972656, 286.138935546875, 337.81747192382807, 341.54990844726564, 375.3567028808594, 391.6453649902344, 421.6961894132653, 435.5433337402344, 476.99168090820314, 477.0551733398436, 532.7958935546876, 550.8075854492188, 609.4138110351562, 610.4113647460938, 632.544284119898, 674.1289916992188, 687.7242089843751, 729.5895654296875, 790.2676708984377, 822.4559155273437, 843.3923788265306, 874.9538818359376, 967.7557666015625, 989.3529272460937, 1047.158798828125, 1054.2404735331634, 1059.1815087890625, 1146.2523876953126, 1189.4223876953126, 1239.7685546875, 1265.088568239796, 1310.629248046875, 1315.47939453125, 1382.8502880859376, 1405.4354980468752, 1434.7302783203127, 1475.9366629464284, 1485.2040722656252, 1508.4928369140625, 1533.6705048230351, 1541.8587548828125, 1561.3465576171875, 1602.7967529296877, 1609.080810546875, 1609.080810546875, 1648.795517578125, 1659.3760205078127, 1666.134924816991, 1686.7847576530612, 1706.5015576171875, 1714.1850244140628, 1730.3003662109375, 1757.8273046875, 1772.892802734375, 1808.639404296875, 1808.639404296875, 1809.9861474609377, 1844.8886083984373, 1852.6264892578124, 1873.8375830078128, 1894.84630859375, 1897.632852359694, 1921.667861328125, 1934.5618359375, 1936.8492041015627, 1975.7114892578124, 1981.9228271484374, 2022.8222265625002, 2027.868525390625, 2059.975859375, 2064.825390625, 2089.370546875, 2108.4809470663267, 2111.687177734375, 2130.0811328125, 2159.62873046875, 2188.644189453125, 2204.190009765625, 2235.8789062500005, 2251.7717968750003, 2252.12998046875, 2284.6782519531253, 2312.38740234375, 2319.329041772959, 2353.8146484375, 2379.2007324218753, 2387.1789550781255, 2443.326240234375, 2470.8709375000003, 2500.2277246093745, 2514.27498046875, 2530.177136479592, 2537.6693359375, 2564.443701171875, 2587.2828515625006, 2623.5709472656254, 2674.396259765625, 2677.584912109375, 2741.0252311862246, 2780.139609375001, 2794.009824218751, 2895.4793359375003, 2951.873325892857, 3017.5436328125, 3083.181962890628, 3162.7214205994896, 3289.70162109375, 3373.5695153061224, 3454.780908203125, 3584.417610012755, 3795.265704719388, 4006.1137994260203, 4216.9618941326535, 4427.809988839285, 4638.658083545918, 4849.506178252551, 5060.354272959184, 5271.202367665816, 5482.050462372449, 5692.898557079082, 5903.746651785714, 6114.5947464923465, 6325.442841198979, 6536.290935905612, 6747.139030612245, 6957.987125318878, 7168.83522002551, 7379.683314732143, 7590.531409438776, 7801.379504145408, 8012.2275988520405, 8223.075693558674, 8433.923788265307, 8644.771882971938, 8855.61997767857, 9066.468072385203, 9277.316167091836, 9488.164261798469, 9699.012356505102, 9909.860451211734, 10120.708545918367, 10331.556640625], "xaxis": "x2", "y": {"dtype": "float64", "shape": [152]}, "yaxis": "y2", "type": "scatter", "uid": "e5ae1d6d-d5af-4493-be68-af66db442d36"}, {"line": {"color": "#00008b", "dash": "dash"}, "mode": "lines+markers", "name": "Train Mean", "x": [1533.6705048230351, 1533.6705048230351], "xaxis": "x2", "y": [0, 0.0003529046444468393], "yaxis": "y2", "type": "scatter", "uid": "4ce5ec4e-8d59-4ce4-a0ca-c3a974a578f4"}, {"line": {"color": "#00008b"}, "mode": "lines", "name": "Train Median", "x": [1609.080810546875, 1609.080810546875], "xaxis": "x2", "y": [0, 0.0003733876784879912], "yaxis": "y2", "type": "scatter", "uid": "37650fdd-a5d5-4cfb-a342-e680ae945a3a"}, {"fill": "tozeroy", "line": {"color": "#69b3a2", "shape": "spline"}, "name": "Test Dataset", "x": [0.0, 40.57234451293945, 88.40034179687501, 101.94984039306641, 142.885078125, 144.57436096191407, 209.68835510253908, 210.84809470663265, 233.3550714111328, 255.44640502929687, 277.5053771972656, 286.138935546875, 337.81747192382807, 341.54990844726564, 375.3567028808594, 391.6453649902344, 421.6961894132653, 435.5433337402344, 476.99168090820314, 477.0551733398436, 532.7958935546876, 550.8075854492188, 609.4138110351562, 610.4113647460938, 632.544284119898, 674.1289916992188, 687.7242089843751, 729.5895654296875, 790.2676708984377, 822.4559155273437, 843.3923788265306, 874.9538818359376, 967.7557666015625, 989.3529272460937, 1047.158798828125, 1054.2404735331634, 1059.1815087890625, 1146.2523876953126, 1189.4223876953126, 1239.7685546875, 1265.088568239796, 1310.629248046875, 1315.47939453125, 1382.8502880859376, 1405.4354980468752, 1434.7302783203127, 1475.9366629464284, 1485.2040722656252, 1508.4928369140625, 1533.6705048230351, 1541.8587548828125, 1561.3465576171875, 1602.7967529296877, 1609.080810546875, 1609.080810546875, 1648.795517578125, 1659.3760205078127, 1666.134924816991, 1686.7847576530612, 1706.5015576171875, 1714.1850244140628, 1730.3003662109375, 1757.8273046875, 1772.892802734375, 1808.639404296875, 1808.639404296875, 1809.9861474609377, 1844.8886083984373, 1852.6264892578124, 1873.8375830078128, 1894.84630859375, 1897.632852359694, 1921.667861328125, 1934.5618359375, 1936.8492041015627, 1975.7114892578124, 1981.9228271484374, 2022.8222265625002, 2027.868525390625, 2059.975859375, 2064.825390625, 2089.370546875, 2108.4809470663267, 2111.687177734375, 2130.0811328125, 2159.62873046875, 2188.644189453125, 2204.190009765625, 2235.8789062500005, 2251.7717968750003, 2252.12998046875, 2284.6782519531253, 2312.38740234375, 2319.329041772959, 2353.8146484375, 2379.2007324218753, 2387.1789550781255, 2443.326240234375, 2470.8709375000003, 2500.2277246093745, 2514.27498046875, 2530.177136479592, 2537.6693359375, 2564.443701171875, 2587.2828515625006, 2623.5709472656254, 2674.396259765625, 2677.584912109375, 2741.0252311862246, 2780.139609375001, 2794.009824218751, 2895.4793359375003, 2951.873325892857, 3017.5436328125, 3083.181962890628, 3162.7214205994896, 3289.70162109375, 3373.5695153061224, 3454.780908203125, 3584.417610012755, 3795.265704719388, 4006.1137994260203, 4216.9618941326535, 4427.809988839285, 4638.658083545918, 4849.506178252551, 5060.354272959184, 5271.202367665816, 5482.050462372449, 5692.898557079082, 5903.746651785714, 6114.5947464923465, 6325.442841198979, 6536.290935905612, 6747.139030612245, 6957.987125318878, 7168.83522002551, 7379.683314732143, 7590.531409438776, 7801.379504145408, 8012.2275988520405, 8223.075693558674, 8433.923788265307, 8644.771882971938, 8855.61997767857, 9066.468072385203, 9277.316167091836, 9488.164261798469, 9699.012356505102, 9909.860451211734, 10120.708545918367, 10331.556640625], "xaxis": "x2", "y": {"dtype": "float64", "shape": [152]}, "yaxis": "y2", "type": "scatter", "uid": "e9073e18-5397-4a8f-b6c6-074d421158ca"}, {"line": {"color": "#69b3a2", "dash": "dash"}, "mode": "lines+markers", "name": "Test Mean", "x": [1666.134924816991, 1666.134924816991], "xaxis": "x2", "y": [0, 0.0004169810240095183], "yaxis": "y2", "type": "scatter", "uid": "46c0d6f7-0d96-4dee-9cb3-3e35522f2e4b"}, {"line": {"color": "#69b3a2"}, "mode": "lines", "name": "Test Median", "x": [1808.639404296875, 1808.639404296875], "xaxis": "x2", "y": [0, 0.0004779631531220677], "yaxis": "y2", "type": "scatter", "uid": "b661f604-63e3-41e9-a3ab-ffe182a41443"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"font": {"size": 16}, "showarrow": false, "text": "Drift Score (Earth Mover's Distance)", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0000000000000002, "yanchor": "bottom", "yref": "paper"}, {"font": {"size": 16}, "showarrow": false, "text": "Distribution Plot", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 0.7200000000000001, "yanchor": "bottom", "yref": "paper"}], "bargroupgap": 0, "height": 400, "legend": {"title": {"text": "Legend"}, "y": 0.6, "yanchor": "top"}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Bounding Box Area (in pixels)", "x": 0.5, "xanchor": "center"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "dtick": 0.05, "fixedrange": true, "gridcolor": "black", "linecolor": "black", "range": [0, 0.4], "showgrid": false}, "yaxis": {"anchor": "x", "autorange": true, "color": "black", "domain": [0.9200000000000002, 1.0], "fixedrange": true, "rangemode": "normal", "showgrid": false, "showline": false, "showticklabels": false, "zeroline": false}, "xaxis2": {"anchor": "y2", "domain": [0.0, 1.0], "fixedrange": false, "range": [40.57234451293945, 3454.780908203125], "title": {"text": "Bounding Box Area (in pixels)"}}, "yaxis2": {"anchor": "x2", "domain": [0.0, 0.7200000000000001], "fixedrange": true, "title": {"text": "Probability Density"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "IVcLYJiZKj9DD6Oyre0tP5y4cO9I1DA/gQ1vm+1TMT9Tn1UcXboyP3ttqDEryDI/VtZGpxyWND8z+f8rAZ00PxeTUbDYGDU/r69+QaN/NT8tDIexWdM1P1c3ba3u7jU/maXppr1XNj8Loe8gZVs2P4h+m6moZTY/ZK5LEZBcNj/XyEq8wjU2P1pbpakBGzY//nYxCt+tNT9d4/2WrK01P7VkhtMQ5TQ/UzxlzQCbND96VpWh+5kzP6BoyCKClTM/jUDIg1QyMz+Bkh+eCnwyP1a5N5uwQjI/xy/cwKecMT/8MHbOQNEwPxGoKLbWejA/0VHBcVlLMD9SKS32MhEwPyWCr8Uqiy8/9Ys9goaQLz/5lMRGzucvPzp0YuSf+S8/CR78kHoDMD8a02QeObMwP7VQyEFvMDE/yP+yrGbeMT84zD4q8z8yP25Ak/O//TI/E8YeveoSMz/LlJudfUc0P8lePI51szQ/2GMeMWVBNT9g+SFyawo2P+e/g0WLNzY/6s6Dq1eoNj+lwRDowSA3P8rCMIpzRzc/Qj3TbmSiNz8pMHOqEF04Pwd0Kt5neDg/B3Qq3md4OD+Ez8CmHR45P6sBPV/4Rzk/O8E0vCZiOT+duOVFS685PzOUi2yr9Dk/yAlRX38OOj95sW5QWUI6PwPE/Rw2kzo/ZxCpSxe7Oj90eGYdZAw7P3R4Zh1kDDs/XjSiQxIPOz9ucREhUUo7PyRL7vu1VDs/Mn8tFuprOz/7f7xPE3s7P26jxaZ9fDs/yQ0/K9GCOz8jZUlD0oE7Pw5hMmtSgTs/HHiWguFpOz+T+vC6gmM7P2qLlMScJzs/gP41BRUeOz+jNJQer9Y6Pz5RT3JPyjo/PcBVi3mFOj+y00Ud6Ug6P1Oi/awrPjo/DXthK3H9OT8rUKVt2oo5P5fPUSyPDjk/GWqDQJLHOD+DlbF7Ui44P06LuOyN3Tc/u65h2LTbNz+FGHF6JC83P0o80NjflTY/Y31v5bJuNj+buRrhQag1P7ltf9LnEjU//fW6dofjND/T6anRWJIzP4W5D7bI6zI/MFfpS2g6Mj85ST14xeUxP8zzXFpAhjE/QF+UfWBZMT8fLF2h0rkwPxwDKDPiMjA/OyUYQiO+Lj+hgY+a8ngsP0qnF7j+VCw/5k5P5SWXKT8swSA19vMnP5sUezz3YSc/u7imnsdkIz+UbALSw1UhP7O2zwu9NR4/bMrfsrkmGj+3Kn5l8s0VP+qZhyXLJhA/sxhx/jVlCj+csRErc6cFP2sE/vNjWP8+jn2eW5go8j5mYPWzRK/lPntIXBMesdw+FSLP3Du00z6dxL3m1nzKPqAih8xk88Q+TclsGtCXxD6XdlPstNvCPonseRQKOcI+j+0BkHYAxT4iNdqERRnDPm0Pm9eBCLk+Yt7US1t/sj6iXHC62LOzPlx9iuyQULQ+OWoarpNbsz6loLb2X5azPtS/aS3gpbI+aWe/Q6pHqj6B+rKl7YqWPgt6c3j+vXQ+ZxqtDi79Qz6ZXxd85dU9PvCxWbxv/m8+1uaO0ykHkj5b+nFfucmjPpXHj9rlJqU+w+glUusmlj4ACBrGuFh9PuYDqBXfqYY+OV7pXpxfnz7NHFn54HOmPg=="}, {"encoding": "base64", "path": ["_data", 4, "y", "buffer"], "data": "VyLedikPIz8d9rnldfMlP+xLwiE+SCk/dV8c2LcwKj+N6z9DssksP5DWY7i54yw/reky2P0yMD/k2ZYW+jkwPzQFSCftuTA/TkC3ExkpMT90VSYAk4kxP17/L+lcqzE/g7IY65tHMj+5m3oG6k8yPxXePNbEiTI/4u4UTeyaMj9EIqQEh6kyPwh/p0VBqTI/+9251WuQMj92MwN6W5AyP/TDvDRDPTI/A+a2Z/cXMj/2ogZBioExP9pA2DykfjE/0AJTN9k7MT9x4A7NUbMwPw3jcIszhDA/CEidgzHcLz/J5ValGiEuP4aPq35zPS0/g0IBzcivLD/SiR49yucrPy2qwCPGJio/NBTKMYPkKT+8Wk4aMYkpPzByue81hyk/j9BglhKHKT9UVjhvdjQqP30mgvu3Cys/z6/z+Qd3LD8Lnm9SplstPwP6wxAIQy8/fWX6CZd8Lz8azsXDGoMxP59dZDF4LzI/FqmgZ3kcMz/Jelwws380P5JgMGaA0jQ/n+yeZkWmNT8Zdt2hvI82PxLWpO9Y3DY/bC8Z0WOTNz9LWKat9hc5PwAAHK1MUjk/AAAcrUxSOT+9M5o2lLs6P00FFGHwGDs/Wt113MdTOz+hNbwZMwM8P8PhWpK3ozw/NdHh8jPgPD8ix//B9Fo9PzLg86WTHj4/nF5I1niBPj/xlYEc5FI/P/GVgRzkUj8/rzkZ9w1aPz9TIMIQOQBAPxhE6n0bEEA/d90stMw2QD+Tw6EQFlZAPx+oqu+1WUA/RfZEIelzQD/bRPfIRX5AP56x5XvYf0A/kQGW/rmOQD8NvFsKGY9AP7V/CF65hEA/AnATAPyBQD/aMnE3umlAP1jIBZIYZUA/pJuPchpKQD/gy3dZSjFAP8OAMK7TLEA/wddReKoRQD+zAeLz8cE/P/f1hsyuVz8/DsYDW+YaPz/n/vgIbJc+P51kqPvUUT4/cLMIaTxQPj+0/4wgFro9P6CbTgT3MT0/tnnetpYOPT88Tu2LiFY8PwTqEYVGxTs/Tkuhg7uVOz/yUVVXNyo6P9tHRaBlYzk/niSIrl5/OD/H4Z+7Pgw4P0At2xU8hTc/MeAPluxDNz+CA2E061E2P5ko7ih+eTU//uG/c10RND8raeBpXQEyP6YWPWa03zE/+fQmhQWGLj/IIMRbjGgrPz5cYa+nVyo/6UpR/h99Iz+VkowQ4JIgP4ffeuekERw/UpoLYeSbGD9IrQvvxvMVP1ObSFEbCRM/DVYIw5DHED+QsYvUY/YLPzychXCvrQE/g36X8KLW4z6PS5Hvc7u1PvxBfBkUYHY+CWu2KL4zJT6KlxfT20HCPeVKJuKJWkw92cmkKpDCwzxhfWzpoqUoPJeqqdctPn07IRqYipT17TvlVQ64qfKLPLQDSBE9JRc9i0fWmVQEkT0AHhfrvzb2Pfthb+ZOvkk+Oa3czT98ij6MhC1TwTC4PsyQeJFZndM+bRANcx493D5Ane5KwAvSPg/nG8HLebQ+kIC/xRKghD7BzX5ysnFCPvFFZyPzSO09WEgJG7ejhD3vDkTH19MJPQo80qo0sXw8liXAjRZM3DvubzX1hMYoOwxIdanmQWM6uXYQNaqTijlnqMMb40egOA=="}]}, "1e20dc8705df41a8be54e009203efd5f": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"base": 0, "marker": {"color": "#01B8AA"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.020697123714912793], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "14429c23-11f7-483d-b52b-bc370a57cf33"}, {"marker": {"color": "#00008b"}, "name": "Train Dataset", "x": {"dtype": "float64", "shape": [16]}, "xaxis": "x2", "y": {"dtype": "float64", "shape": [16]}, "yaxis": "y2", "type": "bar", "uid": "aa7b944e-36cb-4923-b529-ff4e76066822"}, {"marker": {"color": "#69b3a2"}, "name": "Test Dataset", "x": {"dtype": "float64", "shape": [16]}, "xaxis": "x2", "y": {"dtype": "float64", "shape": [16]}, "yaxis": "y2", "type": "bar", "uid": "465f9da7-446d-460c-93ad-a0c92f27808f"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"font": {"size": 16}, "showarrow": false, "text": "Drift Score (Earth Mover's Distance)", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0000000000000002, "yanchor": "bottom", "yref": "paper"}, {"font": {"size": 16}, "showarrow": false, "text": "Distribution Plot", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 0.7200000000000001, "yanchor": "bottom", "yref": "paper"}], "bargroupgap": 0, "height": 400, "legend": {"title": {"text": "Legend"}, "y": 0.6, "yanchor": "top"}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Number of Bounding Boxes Per Image", "x": 0.5, "xanchor": "center"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "dtick": 0.05, "fixedrange": true, "gridcolor": "black", "linecolor": "black", "range": [0, 0.4], "showgrid": false}, "yaxis": {"anchor": "x", "autorange": true, "color": "black", "domain": [0.9200000000000002, 1.0], "fixedrange": true, "rangemode": "normal", "showgrid": false, "showline": false, "showticklabels": false, "zeroline": false}, "xaxis2": {"anchor": "y2", "domain": [0.0, 1.0], "range": [-3.4000000000000004, 20.4], "tickmode": "array", "ticks": "outside", "tickvals": {"dtype": "float64", "shape": [16]}}, "yaxis2": {"anchor": "x2", "autorange": true, "domain": [0.0, 0.7200000000000001], "fixedrange": true, "rangemode": "normal", "title": {"text": "Frequency"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 1, "x", "buffer"], "data": "AAAAAAAAAAAAAAAAAADwPwAAAAAAAABAAAAAAAAACEAAAAAAAAAQQAAAAAAAABRAAAAAAAAAGEAAAAAAAAAcQAAAAAAAACBAAAAAAAAAIkAAAAAAAAAkQAAAAAAAACZAAAAAAAAAKEAAAAAAAAAqQAAAAAAAACxAAAAAAAAAMUA="}, {"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "uQXWM9lxwj+dKnJlbYjHP8QL/wYiscc/ZCELWchCxj8Bpj7fmuW2P7kF1jPZcbI/gU8OlwGfrD+5BdYz2XGiPx2Boq0Gz5E/AaY+35rlhj8dgaKtBs+BP4+TcMZQWoQ/crgM+ORweT+Pk3DGUFpkP4+TcMZQWmQ/j5NwxlBaVD8="}, {"encoding": "base64", "path": ["_data", 2, "x", "buffer"], "data": "AAAAAAAAAAAAAAAAAADwPwAAAAAAAABAAAAAAAAACEAAAAAAAAAQQAAAAAAAABRAAAAAAAAAGEAAAAAAAAAcQAAAAAAAACBAAAAAAAAAIkAAAAAAAAAkQAAAAAAAACZAAAAAAAAAKEAAAAAAAAAqQAAAAAAAACxAAAAAAAAAMUA="}, {"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "F2zBFmzBxj8cx3Ecx3HMPxdswRZswbY/2IIt2IItyD8RERERERHBPxdswRZswaY/HMdxHMdxrD8RERERERGhPxdswRZswYY/F2zBFmzBlj8XbMEWbMGGPxdswRZswYY/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="}, {"encoding": "base64", "path": ["_layout", "xaxis2", "tickvals", "buffer"], "data": "AAAAAAAAAAAAAAAAAADwPwAAAAAAAABAAAAAAAAACEAAAAAAAAAQQAAAAAAAABRAAAAAAAAAGEAAAAAAAAAcQAAAAAAAACBAAAAAAAAAIkAAAAAAAAAkQAAAAAAAACZAAAAAAAAAKEAAAAAAAAAqQAAAAAAAACxAAAAAAAAAMUA="}]}, "162634d0a8f44e90bb9eef5743a354ec": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"base": 0, "marker": {"color": "#01B8AA"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "b0f31944-a9da-4f7a-830e-fe021bdbddf4"}, {"marker": {"color": "#00008b"}, "name": "Train Dataset", "x": ["Tomato"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [1]}, "yaxis": "y2", "type": "bar", "uid": "1216d7f1-43ce-40c7-818c-80bfa3edd155"}, {"marker": {"color": "#69b3a2"}, "name": "Test Dataset", "x": ["Tomato"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [1]}, "yaxis": "y2", "type": "bar", "uid": "7e25733a-3378-4500-bccc-bfd418cc75ff"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"font": {"size": 16}, "showarrow": false, "text": "Drift Score (Cramer's V)", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0000000000000002, "yanchor": "bottom", "yref": "paper"}, {"font": {"size": 16}, "showarrow": false, "text": "Distribution Plot", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 0.7200000000000001, "yanchor": "bottom", "yref": "paper"}], "bargroupgap": 0, "height": 400, "legend": {"title": {"text": "Legend"}, "y": 0.6, "yanchor": "top"}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Samples Per Class", "x": 0.5, "xanchor": "center"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "dtick": 0.05, "fixedrange": true, "gridcolor": "black", "linecolor": "black", "range": [0, 0.4], "showgrid": false}, "yaxis": {"anchor": "x", "autorange": true, "color": "black", "domain": [0.9200000000000002, 1.0], "fixedrange": true, "rangemode": "normal", "showgrid": false, "showline": false, "showticklabels": false, "zeroline": false}, "xaxis2": {"anchor": "y2", "domain": [0.0, 1.0], "range": [-3, 3], "type": "category"}, "yaxis2": {"anchor": "x2", "autorange": true, "domain": [0.0, 0.7200000000000001], "fixedrange": true, "rangemode": "normal", "title": {"text": "Frequency"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "AAAAAAAA8D8="}, {"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "AAAAAAAA8D8="}]}, "fb2733abea9643ef8d58ffe2d74f7d81": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_bcfa3516941c42f286bf50065469af49", "style": "IPY_MODEL_430b97aa557944d9b2d65200dc5d52c1", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-I3DO7\" style=\"font-size: 14px;\">Go to top</a>"}}, "bcfa3516941c42f286bf50065469af49": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "430b97aa557944d9b2d65200dc5d52c1": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "843e023ca06b4e14882857b5a44379a0": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "7a0d6cb4d0874170b36c48dacb9017f3": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "97a6bbd56dc7499688ba39056b886d79": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "101e3c6f6533440c83bbe2b9622237fb": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "708f4b878f1e4cb9828f618f35e588eb": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "2bb94ae28fed49e0ae22162cf0934cb6": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_9117296b2935416ebff1b1d00f80d9fd", "IPY_MODEL_9d1df6884c4947f89dbbc1bded68cf1c"], "layout": "IPY_MODEL_038324c878c64ff0835304a207da7190"}}, "9117296b2935416ebff1b1d00f80d9fd": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_04ba9144d9384f5cb847b1d711d26d12", "style": "IPY_MODEL_209743145e8445eaa0a51045f14b741d", "value": "<span id=\"summary_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\"></span>"}}, "04ba9144d9384f5cb847b1d711d26d12": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "209743145e8445eaa0a51045f14b741d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "9d1df6884c4947f89dbbc1bded68cf1c": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "_titles": {"0": "Other"}, "children": ["IPY_MODEL_b36d2550968d4451b62ce69721c8e12c"], "layout": "IPY_MODEL_82cc3d2c5ea14c87a206549df23ce42b", "selected_index": null}}, "b36d2550968d4451b62ce69721c8e12c": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_cb71755a235a425e9525820091557ef8", "IPY_MODEL_231b6d450c96434db42bd4448361e4b8", "IPY_MODEL_899d2b952c294d858672fe6e4732c16d", "IPY_MODEL_36d4d4a7b93f4cd59138db24e65cc24d", "IPY_MODEL_03911bd8476d4891a92f2f7964672a7e", "IPY_MODEL_36d4d4a7b93f4cd59138db24e65cc24d", "IPY_MODEL_42ac7d75fd754a85aed4e285e8d3ec5b", "IPY_MODEL_36d4d4a7b93f4cd59138db24e65cc24d", "IPY_MODEL_8dc72321b0834908a97de05ada30437b"], "layout": "IPY_MODEL_0120e4a79311406b89c3186f9a849cb9"}}, "cb71755a235a425e9525820091557ef8": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_cde5b2d594824a92a04bbec054d25cd1", "style": "IPY_MODEL_b8f23241026c4dc198a0e097eca99493", "value": "<style type=\"text/css\">\n#T_d1b2d_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_d1b2d_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_d1b2d_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_d1b2d_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_d1b2d_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_d1b2d_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Check</th>\n      <th class=\"col_heading level0 col1\" >Summary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_d1b2d_row0_col0\" class=\"data row0 col0\" ><a href=\"#MeanAverageRecallReport-TestDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\">Mean Average Recall Report - Test Dataset</a></td>\n      <td id=\"T_d1b2d_row0_col1\" class=\"data row0 col1\" >Summarize mean average recall metrics on a dataset and model per detections and area range. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_mean_average_recall_report.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></td>\n    </tr>\n    <tr>\n      <td id=\"T_d1b2d_row1_col0\" class=\"data row1 col0\" ><a href=\"#MeanAverageRecallReport-TrainDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\">Mean Average Recall Report - Train Dataset</a></td>\n      <td id=\"T_d1b2d_row1_col1\" class=\"data row1 col1\" >Summarize mean average recall metrics on a dataset and model per detections and area range. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_mean_average_recall_report.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></td>\n    </tr>\n    <tr>\n      <td id=\"T_d1b2d_row2_col0\" class=\"data row2 col0\" ><a href=\"#ConfusionMatrix-TestDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\">Confusion Matrix - Test Dataset</a></td>\n      <td id=\"T_d1b2d_row2_col1\" class=\"data row2 col1\" >Calculate the confusion matrix of the model on the given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_confusion_matrix.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></td>\n    </tr>\n    <tr>\n      <td id=\"T_d1b2d_row3_col0\" class=\"data row3 col0\" ><a href=\"#ConfusionMatrix-TrainDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\">Confusion Matrix - Train Dataset</a></td>\n      <td id=\"T_d1b2d_row3_col1\" class=\"data row3 col1\" >Calculate the confusion matrix of the model on the given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_confusion_matrix.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></td>\n    </tr>\n  </tbody>\n</table>\n"}}, "cde5b2d594824a92a04bbec054d25cd1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b8f23241026c4dc198a0e097eca99493": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "231b6d450c96434db42bd4448361e4b8": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_8ebfe925a1494d939a55c8b6309cd7ab", "style": "IPY_MODEL_37f66eb2437e4c09a94b9f76faf47afd", "value": "<hr style=\"background-color: #eee;border: 0 none;color: #eee;height: 4px;\">"}}, "8ebfe925a1494d939a55c8b6309cd7ab": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "37f66eb2437e4c09a94b9f76faf47afd": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "899d2b952c294d858672fe6e4732c16d": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_c201331d53c046efbe9f5d38ad6c4b9b", "IPY_MODEL_679edb49e6a740e2861a95ded100ac9c", "IPY_MODEL_82429059d7464f8e891d8fbd02fef025"], "layout": "IPY_MODEL_4f881148de354efe94f5e1e3f2b0f951"}}, "c201331d53c046efbe9f5d38ad6c4b9b": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3e773d46e72843b4bdfc5051738db2c7", "style": "IPY_MODEL_9fa05185e2154fa9aa7b001178d81469", "value": "<h4 id=\"MeanAverageRecallReport-TestDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\"><b>Mean Average Recall Report - Test Dataset</b></h4>"}}, "3e773d46e72843b4bdfc5051738db2c7": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9fa05185e2154fa9aa7b001178d81469": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "679edb49e6a740e2861a95ded100ac9c": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3d9f3170ff41460188f7c3e79f2e52f1", "style": "IPY_MODEL_440b0a6918d1462c9f6ebeb5aa0c7fb2", "value": "<p>Summarize mean average recall metrics on a dataset and model per detections and area range. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_mean_average_recall_report.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "3d9f3170ff41460188f7c3e79f2e52f1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "440b0a6918d1462c9f6ebeb5aa0c7fb2": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "82429059d7464f8e891d8fbd02fef025": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_cd64b24d49a04d29939128f8b3e71a29", "IPY_MODEL_298df835f73c44cdb73d15ee1131383f", "IPY_MODEL_ab30bf15d2214802a2943e67ca7ea733"], "layout": "IPY_MODEL_3daede0fb03c49b19ce21f10ad69d2d2"}}, "cd64b24d49a04d29939128f8b3e71a29": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_25feade5818047a3acd51f066f054143", "style": "IPY_MODEL_03adae84e9114d76afa3b986dc5d9d73", "value": "<h5><b>Additional Outputs</b></h5>"}}, "25feade5818047a3acd51f066f054143": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "03adae84e9114d76afa3b986dc5d9d73": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "298df835f73c44cdb73d15ee1131383f": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_1f08221819e84eb2ae0a301a91ed11f1", "style": "IPY_MODEL_af77a68b9cf048969814ee4408ae5b1b", "value": "<style type=\"text/css\">\n#T_24d62_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_24d62_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_24d62_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_24d62_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_24d62_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_24d62_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >AR@1 (%)</th>\n      <th class=\"col_heading level0 col1\" >AR@10 (%)</th>\n      <th class=\"col_heading level0 col2\" >AR@100 (%)</th>\n    </tr>\n    <tr>\n      <th class=\"index_name level0\" >Area size</th>\n      <th class=\"blank col0\" >&nbsp;</th>\n      <th class=\"blank col1\" >&nbsp;</th>\n      <th class=\"blank col2\" >&nbsp;</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_24d62_level0_row0\" class=\"row_heading level0 row0\" >All</th>\n      <td id=\"T_24d62_row0_col0\" class=\"data row0 col0\" >0.02</td>\n      <td id=\"T_24d62_row0_col1\" class=\"data row0 col1\" >0.04</td>\n      <td id=\"T_24d62_row0_col2\" class=\"data row0 col2\" >0.04</td>\n    </tr>\n    <tr>\n      <th id=\"T_24d62_level0_row1\" class=\"row_heading level0 row1\" >Small (area < 32^2)</th>\n      <td id=\"T_24d62_row1_col0\" class=\"data row1 col0\" >0.00</td>\n      <td id=\"T_24d62_row1_col1\" class=\"data row1 col1\" >0.01</td>\n      <td id=\"T_24d62_row1_col2\" class=\"data row1 col2\" >0.01</td>\n    </tr>\n    <tr>\n      <th id=\"T_24d62_level0_row2\" class=\"row_heading level0 row2\" >Medium (32^2 < area < 96^2)</th>\n      <td id=\"T_24d62_row2_col0\" class=\"data row2 col0\" >0.07</td>\n      <td id=\"T_24d62_row2_col1\" class=\"data row2 col1\" >0.17</td>\n      <td id=\"T_24d62_row2_col2\" class=\"data row2 col2\" >0.17</td>\n    </tr>\n    <tr>\n      <th id=\"T_24d62_level0_row3\" class=\"row_heading level0 row3\" >Large (area < 96^2)</th>\n      <td id=\"T_24d62_row3_col0\" class=\"data row3 col0\" >0.00</td>\n      <td id=\"T_24d62_row3_col1\" class=\"data row3 col1\" >0.00</td>\n      <td id=\"T_24d62_row3_col2\" class=\"data row3 col2\" >0.00</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "1f08221819e84eb2ae0a301a91ed11f1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "af77a68b9cf048969814ee4408ae5b1b": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "ab30bf15d2214802a2943e67ca7ea733": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_14a994acd2f04ecf8a10e487c3fbef3f", "style": "IPY_MODEL_6e6b82b0b2c44d82978a35dd9abdd2a5", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\" style=\"font-size: 14px;\">Go to top</a>"}}, "14a994acd2f04ecf8a10e487c3fbef3f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "6e6b82b0b2c44d82978a35dd9abdd2a5": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "3daede0fb03c49b19ce21f10ad69d2d2": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "4f881148de354efe94f5e1e3f2b0f951": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "36d4d4a7b93f4cd59138db24e65cc24d": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6cf808644be34cf1b2bc1209a861a69b", "style": "IPY_MODEL_64876268c0e24c16bca6c73d6be02f93", "value": "<hr style=\"background-color: #eee;border: 0 none;color: #eee;height: 4px;\">"}}, "6cf808644be34cf1b2bc1209a861a69b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "64876268c0e24c16bca6c73d6be02f93": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "03911bd8476d4891a92f2f7964672a7e": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_4cff31f56cc64ed78a5a605ba8a9afc7", "IPY_MODEL_2741000f90cf488881bed850f2e2e77a", "IPY_MODEL_c2ba214710084795bc0a49e17d4d655b"], "layout": "IPY_MODEL_1741e7b9564a4133b28fec3703fc4e34"}}, "4cff31f56cc64ed78a5a605ba8a9afc7": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_a5d91ada75a043af87354ee1bff2bcd1", "style": "IPY_MODEL_049d9be59e464e9b99557fca6fd03258", "value": "<h4 id=\"MeanAverageRecallReport-TrainDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\"><b>Mean Average Recall Report - Train Dataset</b></h4>"}}, "a5d91ada75a043af87354ee1bff2bcd1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "049d9be59e464e9b99557fca6fd03258": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "2741000f90cf488881bed850f2e2e77a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_94dba846ad9645cc9d27853b51a2b59b", "style": "IPY_MODEL_cbef53f19d15405abe6c2ea3683948a0", "value": "<p>Summarize mean average recall metrics on a dataset and model per detections and area range. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_mean_average_recall_report.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "94dba846ad9645cc9d27853b51a2b59b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "cbef53f19d15405abe6c2ea3683948a0": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "c2ba214710084795bc0a49e17d4d655b": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_74fa24eda01841d98b14f7a6ad1b162a", "IPY_MODEL_b1c1d5f4e4484f978761b5ff43750d9e", "IPY_MODEL_82a333273dc94b6cb85048d627fbdba4"], "layout": "IPY_MODEL_22c06b8d2f984cf0884aff1921d8a47a"}}, "74fa24eda01841d98b14f7a6ad1b162a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_71fb50a393c340d79f0be935c5cb5192", "style": "IPY_MODEL_6a7a56faa7b34731b86bbdc719d98086", "value": "<h5><b>Additional Outputs</b></h5>"}}, "71fb50a393c340d79f0be935c5cb5192": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "6a7a56faa7b34731b86bbdc719d98086": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "b1c1d5f4e4484f978761b5ff43750d9e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_945ee0f8eab44334877a0c45aaa29e9f", "style": "IPY_MODEL_50ad5c04cb4749a1a779e017d2bf2eb8", "value": "<style type=\"text/css\">\n#T_51d26_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_51d26_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_51d26_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_51d26_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_51d26_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_51d26_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >AR@1 (%)</th>\n      <th class=\"col_heading level0 col1\" >AR@10 (%)</th>\n      <th class=\"col_heading level0 col2\" >AR@100 (%)</th>\n    </tr>\n    <tr>\n      <th class=\"index_name level0\" >Area size</th>\n      <th class=\"blank col0\" >&nbsp;</th>\n      <th class=\"blank col1\" >&nbsp;</th>\n      <th class=\"blank col2\" >&nbsp;</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_51d26_level0_row0\" class=\"row_heading level0 row0\" >All</th>\n      <td id=\"T_51d26_row0_col0\" class=\"data row0 col0\" >0.02</td>\n      <td id=\"T_51d26_row0_col1\" class=\"data row0 col1\" >0.06</td>\n      <td id=\"T_51d26_row0_col2\" class=\"data row0 col2\" >0.06</td>\n    </tr>\n    <tr>\n      <th id=\"T_51d26_level0_row1\" class=\"row_heading level0 row1\" >Small (area < 32^2)</th>\n      <td id=\"T_51d26_row1_col0\" class=\"data row1 col0\" >0.00</td>\n      <td id=\"T_51d26_row1_col1\" class=\"data row1 col1\" >0.01</td>\n      <td id=\"T_51d26_row1_col2\" class=\"data row1 col2\" >0.01</td>\n    </tr>\n    <tr>\n      <th id=\"T_51d26_level0_row2\" class=\"row_heading level0 row2\" >Medium (32^2 < area < 96^2)</th>\n      <td id=\"T_51d26_row2_col0\" class=\"data row2 col0\" >0.09</td>\n      <td id=\"T_51d26_row2_col1\" class=\"data row2 col1\" >0.22</td>\n      <td id=\"T_51d26_row2_col2\" class=\"data row2 col2\" >0.22</td>\n    </tr>\n    <tr>\n      <th id=\"T_51d26_level0_row3\" class=\"row_heading level0 row3\" >Large (area < 96^2)</th>\n      <td id=\"T_51d26_row3_col0\" class=\"data row3 col0\" >0.00</td>\n      <td id=\"T_51d26_row3_col1\" class=\"data row3 col1\" >0.02</td>\n      <td id=\"T_51d26_row3_col2\" class=\"data row3 col2\" >0.02</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "945ee0f8eab44334877a0c45aaa29e9f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "50ad5c04cb4749a1a779e017d2bf2eb8": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "82a333273dc94b6cb85048d627fbdba4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_5f9a2e74fea946ffabfe610c145c21a5", "style": "IPY_MODEL_4a47f46f930545a68508cb76597a012d", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\" style=\"font-size: 14px;\">Go to top</a>"}}, "5f9a2e74fea946ffabfe610c145c21a5": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "4a47f46f930545a68508cb76597a012d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "22c06b8d2f984cf0884aff1921d8a47a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "1741e7b9564a4133b28fec3703fc4e34": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "42ac7d75fd754a85aed4e285e8d3ec5b": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_952076e7d23349c9ba9d12d17f9ee5ed", "IPY_MODEL_82baf2825edf4e6a9d968f5b095e4c10", "IPY_MODEL_cd09d692b58e455d869c5b921b72f78f"], "layout": "IPY_MODEL_ef47ff0291d24f5cbad6f7d1cd9e64c1"}}, "952076e7d23349c9ba9d12d17f9ee5ed": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_df3c2f62aaa949dca98ee264a5ce4a83", "style": "IPY_MODEL_85fa7229332346eda6d8b3ec18d3b828", "value": "<h4 id=\"ConfusionMatrix-TestDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\"><b>Confusion Matrix - Test Dataset</b></h4>"}}, "df3c2f62aaa949dca98ee264a5ce4a83": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "85fa7229332346eda6d8b3ec18d3b828": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "82baf2825edf4e6a9d968f5b095e4c10": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_100f27caa68e477c95cc1e8b8e34cf5a", "style": "IPY_MODEL_a24c06e6c64e48d1889e279751413da7", "value": "<p>Calculate the confusion matrix of the model on the given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_confusion_matrix.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "100f27caa68e477c95cc1e8b8e34cf5a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a24c06e6c64e48d1889e279751413da7": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "cd09d692b58e455d869c5b921b72f78f": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_1bd623ef69404349a445a5759bfd22af", "IPY_MODEL_755183da51e54cbc9ee986ceedaad421", "IPY_MODEL_74eb283cd27249a5ae47989854bd0fee", "IPY_MODEL_7844629583284956a59fdd9cc32f9db7", "IPY_MODEL_36a910a0a7a742a49582e1ab2c78d311"], "layout": "IPY_MODEL_f7239d559eda40f4bde88e2912f439fb"}}, "1bd623ef69404349a445a5759bfd22af": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_290f965b96364eaaa84e72f867a2d0df", "style": "IPY_MODEL_8b3b338764404073a0167246d2a45623", "value": "<h5><b>Additional Outputs</b></h5>"}}, "290f965b96364eaaa84e72f867a2d0df": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "8b3b338764404073a0167246d2a45623": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "755183da51e54cbc9ee986ceedaad421": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_0bee06f0f1334fb98d14f4bf36750b60", "style": "IPY_MODEL_cb4813acffe34a64aea308ded1616f4d", "value": "<div>Showing 10 of 1 classes:</div>"}}, "0bee06f0f1334fb98d14f4bf36750b60": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "cb4813acffe34a64aea308ded1616f4d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "74eb283cd27249a5ae47989854bd0fee": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_7468c838aa994597bab6faf6957d4879", "style": "IPY_MODEL_fccdc9fe7bd8406aa7cbe5a0a3313587", "value": "<div>\"No overlapping\" categories are labels and prediction which did not have a matching label/prediction.<br>For example a predictions that did not have a sufficiently overlapping label bounding box will appear under \"No overlapping\" category in the True Value axis (y-axis).</div>"}}, "7468c838aa994597bab6faf6957d4879": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "fccdc9fe7bd8406aa7cbe5a0a3313587": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "7844629583284956a59fdd9cc32f9db7": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"colorbar": {"title": {"text": "% out of<br>True Values"}}, "text": [[49.0, 369.0], [84.0, 0.0]], "texttemplate": "%{z}%<br>(%{text})", "x": ["Tomato", "No overlapping"], "y": ["Tomato", "No overlapping"], "z": [["11.72", "88.28"], ["100", "0"]], "type": "heatmap", "uid": "1768b877-ac53-4753-8591-0db074767706"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"height": 600, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Percent Out of True Values (Count)"}, "xaxis": {"constrain": "domain", "scaleanchor": "y", "title": {"text": "Predicted Value"}, "type": "category"}, "yaxis": {"autorange": "reversed", "constrain": "domain", "title": {"text": "True value"}, "type": "category"}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}}, "36a910a0a7a742a49582e1ab2c78d311": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_10bef6acbcfa4c96ae70beb5c81457da", "style": "IPY_MODEL_dc880ed70dd44525a08c500e70726d9c", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\" style=\"font-size: 14px;\">Go to top</a>"}}, "10bef6acbcfa4c96ae70beb5c81457da": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "dc880ed70dd44525a08c500e70726d9c": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "f7239d559eda40f4bde88e2912f439fb": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ef47ff0291d24f5cbad6f7d1cd9e64c1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "8dc72321b0834908a97de05ada30437b": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_fa51b08670cb4bf69deb54c30ba94372", "IPY_MODEL_4faaf05adc2e40279429e8432d3c073e", "IPY_MODEL_b5c7703419674e4ba6aa5b80797bae52"], "layout": "IPY_MODEL_d157d744e29b4600b7d2894e0b18afcf"}}, "fa51b08670cb4bf69deb54c30ba94372": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_7dbd8c47e033400ab04b1afd6daa231d", "style": "IPY_MODEL_e3913df6fcdb4a9eb470bb534cd5620b", "value": "<h4 id=\"ConfusionMatrix-TrainDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\"><b>Confusion Matrix - Train Dataset</b></h4>"}}, "7dbd8c47e033400ab04b1afd6daa231d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e3913df6fcdb4a9eb470bb534cd5620b": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "4faaf05adc2e40279429e8432d3c073e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_9a8ead5dcf7b4230b4990872f7d7c962", "style": "IPY_MODEL_b6aee445c8774f728461ee2950d1be70", "value": "<p>Calculate the confusion matrix of the model on the given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_confusion_matrix.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "9a8ead5dcf7b4230b4990872f7d7c962": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b6aee445c8774f728461ee2950d1be70": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "b5c7703419674e4ba6aa5b80797bae52": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_85cb87230d48484f95fd5b30b337bffe", "IPY_MODEL_56fd8308e92f4bdc972354d1019cbdd4", "IPY_MODEL_996090aa56004d6592876ecb782c7e03", "IPY_MODEL_570d06df008849dd9fff40e229666095", "IPY_MODEL_8cfa9303be3a4f57b18829fd794e47eb"], "layout": "IPY_MODEL_3a927725584c4610884775fbdb732380"}}, "85cb87230d48484f95fd5b30b337bffe": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_f68927cb821a4e0e8b40c73dd385c471", "style": "IPY_MODEL_51e557ebdb90457781e89802266fec4a", "value": "<h5><b>Additional Outputs</b></h5>"}}, "f68927cb821a4e0e8b40c73dd385c471": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "51e557ebdb90457781e89802266fec4a": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "56fd8308e92f4bdc972354d1019cbdd4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3df2c3f787fd465fbd516ce43a85ee04", "style": "IPY_MODEL_65a58b0947784f099fbcde65cb64d3e9", "value": "<div>Showing 10 of 1 classes:</div>"}}, "3df2c3f787fd465fbd516ce43a85ee04": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "65a58b0947784f099fbcde65cb64d3e9": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "996090aa56004d6592876ecb782c7e03": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3169f0c2ad2e4aad80c31bfa7dac1f41", "style": "IPY_MODEL_ae123d434fc343fc9c23839fc8a59fe3", "value": "<div>\"No overlapping\" categories are labels and prediction which did not have a matching label/prediction.<br>For example a predictions that did not have a sufficiently overlapping label bounding box will appear under \"No overlapping\" category in the True Value axis (y-axis).</div>"}}, "3169f0c2ad2e4aad80c31bfa7dac1f41": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ae123d434fc343fc9c23839fc8a59fe3": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "570d06df008849dd9fff40e229666095": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"colorbar": {"title": {"text": "% out of<br>True Values"}}, "text": [[535.0, 3527.0], [958.0, 0.0]], "texttemplate": "%{z}%<br>(%{text})", "x": ["Tomato", "No overlapping"], "y": ["Tomato", "No overlapping"], "z": [["13.17", "86.83"], ["100", "0"]], "type": "heatmap", "uid": "e16be87b-9371-4865-b7b7-1101ff1410ba"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"height": 600, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Percent Out of True Values (Count)"}, "xaxis": {"constrain": "domain", "scaleanchor": "y", "title": {"text": "Predicted Value"}, "type": "category"}, "yaxis": {"autorange": "reversed", "constrain": "domain", "title": {"text": "True value"}, "type": "category"}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}}, "8cfa9303be3a4f57b18829fd794e47eb": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c4287faad5fd43bc861aafceab09e924", "style": "IPY_MODEL_b4d16b8e25ab4f0bbd8e2a5a6363300e", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\" style=\"font-size: 14px;\">Go to top</a>"}}, "c4287faad5fd43bc861aafceab09e924": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b4d16b8e25ab4f0bbd8e2a5a6363300e": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "3a927725584c4610884775fbdb732380": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d157d744e29b4600b7d2894e0b18afcf": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "0120e4a79311406b89c3186f9a849cb9": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "82cc3d2c5ea14c87a206549df23ce42b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "038324c878c64ff0835304a207da7190": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "aa5c7039c75c4579bf315d353cb4f876": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_0e28c8baeda64167b3f27d1ddf50313a", "IPY_MODEL_7a659da34dde4c2db6910b5f1280d0dc"], "layout": "IPY_MODEL_2b6c3d12c5d84345b030a0ed689e358f"}}, "0e28c8baeda64167b3f27d1ddf50313a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_46b480d0cc36477ca50413caa4febd87", "style": "IPY_MODEL_d95baa643e354206b61a05c401fd205e"}}, "46b480d0cc36477ca50413caa4febd87": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d95baa643e354206b61a05c401fd205e": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "7a659da34dde4c2db6910b5f1280d0dc": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "_titles": {"0": "Didn't Run"}, "children": ["IPY_MODEL_094d81a3ffc74f4faa35369568a05723"], "layout": "IPY_MODEL_ee1291ec019248b6a0cde26335d34afb", "selected_index": null}}, "094d81a3ffc74f4faa35369568a05723": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_d4448830ba8c481ab88780295c1f1c10", "style": "IPY_MODEL_50c43671d13b4955ba724d51e6213955", "value": "<style type=\"text/css\">\n#T_32ce4_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_32ce4_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_32ce4_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_32ce4_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_32ce4_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_32ce4_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Check</th>\n      <th class=\"col_heading level0 col1\" >Reason</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_32ce4_row0_col0\" class=\"data row0 col0\" >Simple Model Comparison</td>\n      <td id=\"T_32ce4_row0_col1\" class=\"data row0 col1\" >Check is irrelevant for task of type TaskType.OBJECT_DETECTION</td>\n    </tr>\n    <tr>\n      <td id=\"T_32ce4_row1_col0\" class=\"data row1 col0\" >Model Error Analysis</td>\n      <td id=\"T_32ce4_row1_col1\" class=\"data row1 col1\" >DeepchecksProcessError: Unable to train meaningful error model (r^2 score: 0.2)</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "d4448830ba8c481ab88780295c1f1c10": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "50c43671d13b4955ba724d51e6213955": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "ee1291ec019248b6a0cde26335d34afb": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "2b6c3d12c5d84345b030a0ed689e358f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a2e4f693e2254f79a60343e1b52dd1bf": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "f9bfae7990164876b7d7562f5b431c87": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "4258c205664347fa83fce786898763d1"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  4.207 seconds)


.. _sphx_glr_download_user-guide_vision_auto_quickstarts_plot_detection_tutorial.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_detection_tutorial.py <plot_detection_tutorial.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_detection_tutorial.ipynb <plot_detection_tutorial.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
