
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "user-guide/tabular/auto_tutorials/plot_quick_data_integrity.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_user-guide_tabular_auto_tutorials_plot_quick_data_integrity.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_user-guide_tabular_auto_tutorials_plot_quick_data_integrity.py:


Data Integrity Suite on Avocado Sales Data - Quickstart
*******************************************************

The deepchecks integrity suite is relevant any time you have data that you wish to validate:
whether it's on a fresh batch of data, or right before splitting it or using it for training. 
Here we'll use the avocado prices dataset, to demonstrate how you can run
the suite with only a few simple lines of code, and see which kind of insights it can find.

.. code-block:: bash

    # Before we start, if you don't have deepchecks installed yet,
    # make sure to run:
    pip install deepchecks -U --quiet #--user

.. GENERATED FROM PYTHON SOURCE LINES 19-21

Load and Prepare Data
====================================================

.. GENERATED FROM PYTHON SOURCE LINES 21-27

.. code-block:: default


    from deepchecks.tabular import datasets

    # load data
    data = datasets.regression.avocado.load_data(data_format='DataFrame', as_train_test=False)








.. GENERATED FROM PYTHON SOURCE LINES 28-29

Insert a few typcial problems to dataset for demonstration.

.. GENERATED FROM PYTHON SOURCE LINES 29-45

.. code-block:: default


    import pandas as pd

    def add_dirty_data(df):
        # change strings
        df.loc[df[df['type'] == 'organic'].sample(frac=0.18).index,'type'] = 'Organic'
        df.loc[df[df['type'] == 'organic'].sample(frac=0.01).index,'type'] = 'ORGANIC'
        # add duplicates
        df = pd.concat([df, df.sample(frac=0.156)], axis=0, ignore_index=True)
        # add column with single value
        df['Is Ripe'] = True
        return df


    dirty_df = add_dirty_data(data)








.. GENERATED FROM PYTHON SOURCE LINES 46-54

Run Deepchecks for Data Integrity
====================================

Define a Dataset Object
------------------------

Create a deepchecks Dataset, including the relevant metadata (label, date, index, etc.).
Check out :class:`deepchecks.tabular.Dataset` to see all of the columns that can be declared.

.. GENERATED FROM PYTHON SOURCE LINES 54-62

.. code-block:: default


    from deepchecks.tabular import Dataset

    # We explicitly state the categorical features,
    # otherwise they will be automatically inferred, which may not work perfectly and is not recommended.
    # The label can be passed as a column name or a separate pd.Series / pd.DataFrame
    ds = Dataset(dirty_df, cat_features = ['type'], datetime_name='Date', label = 'AveragePrice')








.. GENERATED FROM PYTHON SOURCE LINES 63-72

Run the Deepchecks Suite
--------------------------

Validate your data with the :class:`deepchecks.tabular.suites.single_dataset_integrity` suite.
It runs on a single dataset, so you can run it on any batch of data (e.g. train data, test data, a new batch of data
that recently arrived)

Check out the :doc:`when should you use </getting-started/when_should_you_use>`
deepchecks guide for some more info about the existing suites and when to use them.

.. GENERATED FROM PYTHON SOURCE LINES 72-79

.. code-block:: default


    from deepchecks.tabular.suites import data_integrity

    # Run Suite:
    integ_suite = data_integrity()
    integ_suite.run(ds)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Data Integrity Suite:
    |          | 0/10 [00:00<?, ? Check/s]    Data Integrity Suite:
    |###       | 3/10 [00:00<00:00, 18.18 Check/s, Check=Mixed Nulls]    Data Integrity Suite:
    |######    | 6/10 [00:00<00:00,  9.80 Check/s, Check=Data Duplicates]    Data Integrity Suite:
    |##########| 10/10 [00:00<00:00, 10.06 Check/s, Check=Feature Label Correlation]                                                                                                      

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Data Integrity Suite</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
        <script>
            (!window.navigator.onLine ? alert('needs internet connection') : '');
        </script>
    </head>
    <body>
    
    <script src="" crossorigin="anonymous"></script>
    <script type="application/vnd.jupyter.widget-state+json">
    {
      "version_major": 2,
      "version_minor": 0,
      "state": {
        "2e3b74c5c14c4034848fd50d04120fe6": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "children": [
              "IPY_MODEL_c298c6c25263485c88bca53da152a40d",
              "IPY_MODEL_db216971148b4d25a8ab970cb7ab8043",
              "IPY_MODEL_64bb53192b194c4b8fb30b6ea6cd41dd"
            ],
            "layout": "IPY_MODEL_cba8f404ff414cab89bf933ea9271992"
          }
        },
        "c298c6c25263485c88bca53da152a40d": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_7e0f65c5fd454b4cb27cfcecdcf84abc",
            "style": "IPY_MODEL_43982fd2574445d79ca69b1b0eb287f6",
            "value": "<style>.jupyter-widgets.widget-tab > .p-TabBar .p-TabBar-tab {flex: 0 1 auto}</style>"
          }
        },
        "7e0f65c5fd454b4cb27cfcecdcf84abc": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "43982fd2574445d79ca69b1b0eb287f6": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "db216971148b4d25a8ab970cb7ab8043": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_eec10cd16bca410a8c68544689abc99d",
            "style": "IPY_MODEL_4f3cdf2da6604802b07f6c579179e466",
            "value": "\n            <h1 id=\"summary_EBBK7W1DAKRM8J5ECRUYF38DI\">Data Integrity Suite</h1>\n            <p>\n                The suite is composed of various checks such as: Conflicting Labels, Mixed Data Types, Data Duplicates, etc...<br>\n                Each check may contain conditions (which will result in pass / fail / warning / error\n                , represented by \n<span style=\"color: green;display:inline-block\">\u2713</span> /\n<span style=\"color: red;display:inline-block\">\u2716</span> /\n<span style=\"color: orange;font-weight:bold;display:inline-block\">!</span> /\n<span style=\"color: firebrick;font-weight:bold;display:inline-block\">\u2048</span>\n) as well as other outputs such as plots or tables.<br>\n                Suites, checks and conditions can all be modified. Read more about\n                <a href=https://docs.deepchecks.com/en/stable/examples/guides/create_a_custom_suite.html?utm_source=display_output&utm_medium=referral&utm_campaign=suite_link target=\"_blank\">custom suites</a>.\n            </p>\n\n"
          }
        },
        "eec10cd16bca410a8c68544689abc99d": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "4f3cdf2da6604802b07f6c579179e466": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "64bb53192b194c4b8fb30b6ea6cd41dd": {
          "model_name": "TabModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_titles": {
              "0": "Checks With Conditions",
              "1": "Checks Without Conditions",
              "2": "Checks Without Output"
            },
            "children": [
              "IPY_MODEL_c20779002cfb49caa289d711a2cf1584",
              "IPY_MODEL_22c0a9f3c7f248fdbf62483793183108",
              "IPY_MODEL_bb85ad563842421aa36e6173fb9cf47d"
            ],
            "layout": "IPY_MODEL_6c6586a164bd45628130074081e72242"
          }
        },
        "c20779002cfb49caa289d711a2cf1584": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "rendered_html",
              "jp-RenderedHTMLCommon",
              "jp-RenderedHTML",
              "jp-OutputArea-output"
            ],
            "children": [
              "IPY_MODEL_53a1e770b5f3472ab1f0502afc49beb6",
              "IPY_MODEL_49e52d8ec40048d8b0cb92091881a9fd",
              "IPY_MODEL_38ae0bc1814549ada5ef3e1942d5fdc2",
              "IPY_MODEL_7ac4b1f70eed448ca86cfd2065d5ca0c",
              "IPY_MODEL_d2ff73792c42499e8da9a05e115e9461",
              "IPY_MODEL_7ac4b1f70eed448ca86cfd2065d5ca0c",
              "IPY_MODEL_02164ac58dc64140b54ac9c830c5546d",
              "IPY_MODEL_7ac4b1f70eed448ca86cfd2065d5ca0c",
              "IPY_MODEL_c6041db91c0848cfb994080cf226993a"
            ],
            "layout": "IPY_MODEL_133795b85cd642349bbc02de3243a688"
          }
        },
        "53a1e770b5f3472ab1f0502afc49beb6": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "rendered_html",
              "jp-RenderedHTMLCommon",
              "jp-RenderedHTML",
              "jp-OutputArea-output"
            ],
            "layout": "IPY_MODEL_6ecea4aa01954270b7f90ac76c720d4c",
            "style": "IPY_MODEL_e995c046d4514504bf81ddd684d19d00",
            "value": "<h2>Conditions Summary</h2><style type=\"text/css\">\n#T_1c992_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_1c992_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_1c992_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_1c992_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_1c992_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_1c992_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Check</th>\n      <th class=\"col_heading level0 col2\" >Condition</th>\n      <th class=\"col_heading level0 col3\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_1c992_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_1c992_row0_col1\" class=\"data row0 col1\" ><a href=#SingleValueinColumn_EBBK7W1DAKRM8J5ECRUYF38DI>Single Value in Column</a></td>\n      <td id=\"T_1c992_row0_col2\" class=\"data row0 col2\" >Does not contain only a single value</td>\n      <td id=\"T_1c992_row0_col3\" class=\"data row0 col3\" >Found 1 out of 14 columns with a single value: ['Is Ripe']</td>\n    </tr>\n    <tr>\n      <td id=\"T_1c992_row1_col0\" class=\"data row1 col0\" ><div style=\"color: orange;text-align: center;font-weight:bold\">!</div></td>\n      <td id=\"T_1c992_row1_col1\" class=\"data row1 col1\" ><a href=#StringMismatch_EBBK7W1DAKRM8J5ECRUYF38DI>String Mismatch</a></td>\n      <td id=\"T_1c992_row1_col2\" class=\"data row1 col2\" >No string variants</td>\n      <td id=\"T_1c992_row1_col3\" class=\"data row1 col3\" >Found 1 out of 2 columns with amount of variants above threshold: {'type': ['organic']}</td>\n    </tr>\n    <tr>\n      <td id=\"T_1c992_row2_col0\" class=\"data row2 col0\" ><div style=\"color: orange;text-align: center;font-weight:bold\">!</div></td>\n      <td id=\"T_1c992_row2_col1\" class=\"data row2 col1\" ><a href=#DataDuplicates_EBBK7W1DAKRM8J5ECRUYF38DI>Data Duplicates</a></td>\n      <td id=\"T_1c992_row2_col2\" class=\"data row2 col2\" >Duplicate data ratio is not greater than 0%</td>\n      <td id=\"T_1c992_row2_col3\" class=\"data row2 col3\" >Found 13.5% duplicate data</td>\n    </tr>\n    <tr>\n      <td id=\"T_1c992_row3_col0\" class=\"data row3 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_1c992_row3_col1\" class=\"data row3 col1\" ><a href=#FeatureLabelCorrelation_EBBK7W1DAKRM8J5ECRUYF38DI>Feature Label Correlation</a></td>\n      <td id=\"T_1c992_row3_col2\" class=\"data row3 col2\" >Features' Predictive Power Score is not greater than 0.8</td>\n      <td id=\"T_1c992_row3_col3\" class=\"data row3 col3\" >Passed for 12 relevant columns</td>\n    </tr>\n    <tr>\n      <td id=\"T_1c992_row4_col0\" class=\"data row4 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_1c992_row4_col1\" class=\"data row4 col1\" >Special Characters</td>\n      <td id=\"T_1c992_row4_col2\" class=\"data row4 col2\" >Ratio of entirely special character samples not greater than 0.1%</td>\n      <td id=\"T_1c992_row4_col3\" class=\"data row4 col3\" >Passed for 14 relevant columns</td>\n    </tr>\n    <tr>\n      <td id=\"T_1c992_row5_col0\" class=\"data row5 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_1c992_row5_col1\" class=\"data row5 col1\" >Mixed Nulls</td>\n      <td id=\"T_1c992_row5_col2\" class=\"data row5 col2\" >Not more than 1 different null types</td>\n      <td id=\"T_1c992_row5_col3\" class=\"data row5 col3\" >Passed for 14 relevant columns</td>\n    </tr>\n    <tr>\n      <td id=\"T_1c992_row6_col0\" class=\"data row6 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_1c992_row6_col1\" class=\"data row6 col1\" >Mixed Data Types</td>\n      <td id=\"T_1c992_row6_col2\" class=\"data row6 col2\" >Rare data types in column are either more than 10% or less than 1% of the data</td>\n      <td id=\"T_1c992_row6_col3\" class=\"data row6 col3\" >14 columns passed: found 0 columns with negligible types mix, and 14 columns without any types mix</td>\n    </tr>\n    <tr>\n      <td id=\"T_1c992_row7_col0\" class=\"data row7 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_1c992_row7_col1\" class=\"data row7 col1\" >String Length Out Of Bounds</td>\n      <td id=\"T_1c992_row7_col2\" class=\"data row7 col2\" >Ratio of outliers not greater than 0% string length outliers</td>\n      <td id=\"T_1c992_row7_col3\" class=\"data row7 col3\" >No relevant columns to check were found</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "6ecea4aa01954270b7f90ac76c720d4c": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "e995c046d4514504bf81ddd684d19d00": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "49e52d8ec40048d8b0cb92091881a9fd": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_57da4a2daa514124a0a40b677bdbfe24",
            "style": "IPY_MODEL_b0fba5c08c824e95a08a2f7f9edfbfce",
            "value": "<h2>Check With Conditions Output</h2>"
          }
        },
        "57da4a2daa514124a0a40b677bdbfe24": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "b0fba5c08c824e95a08a2f7f9edfbfce": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "38ae0bc1814549ada5ef3e1942d5fdc2": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "rendered_html",
              "jp-RenderedHTMLCommon",
              "jp-RenderedHTML",
              "jp-OutputArea-output"
            ],
            "children": [
              "IPY_MODEL_bdc0136472e94ed3802c5766ba6c9c45",
              "IPY_MODEL_189251d36b8b432cb6f1bfca9f752513",
              "IPY_MODEL_323c06fb650947eda0b6358e99c297a4",
              "IPY_MODEL_2f128885faae419586e5f6762617951d"
            ],
            "layout": "IPY_MODEL_32607629a076475993471a44b8a07db5"
          }
        },
        "bdc0136472e94ed3802c5766ba6c9c45": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_72e8645c99f241538e082b68dadbfd57",
            "style": "IPY_MODEL_c60b81b71e0642938975d41f5cc46868",
            "value": "<h4 id=\"SingleValueinColumn_EBBK7W1DAKRM8J5ECRUYF38DI\"><b>Single Value in Column</b></h4>"
          }
        },
        "72e8645c99f241538e082b68dadbfd57": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "c60b81b71e0642938975d41f5cc46868": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "189251d36b8b432cb6f1bfca9f752513": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_c88743491c9543f9878d952acbb6d73a",
            "style": "IPY_MODEL_e0e3b2de4ddb45c9aa1bbb4c085db307",
            "value": "<p>Check if there are columns which have only a single unique value in all rows.</p>"
          }
        },
        "c88743491c9543f9878d952acbb6d73a": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "e0e3b2de4ddb45c9aa1bbb4c085db307": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "323c06fb650947eda0b6358e99c297a4": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_681fb07d96054a96bf88d7801a252fa3",
            "style": "IPY_MODEL_260000f21e094c56bcae3ed99c382428",
            "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_9d595_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_9d595_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_9d595_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_9d595_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_9d595_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_9d595_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_9d595_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_9d595_row0_col1\" class=\"data row0 col1\" >Does not contain only a single value</td>\n      <td id=\"T_9d595_row0_col2\" class=\"data row0 col2\" >Found 1 out of 14 columns with a single value: ['Is Ripe']</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "681fb07d96054a96bf88d7801a252fa3": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "260000f21e094c56bcae3ed99c382428": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "2f128885faae419586e5f6762617951d": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "children": [
              "IPY_MODEL_8f3a50725e9e4d3ba32b8851fae2b714",
              "IPY_MODEL_076213274fec49deaba6b747b2eb016a",
              "IPY_MODEL_2f8ecdcfc4eb482aa785249815019235",
              "IPY_MODEL_d00cb414217b43468b465cc14f9783d6"
            ],
            "layout": "IPY_MODEL_d981bd34ca144370bf318d91b5f0efa5"
          }
        },
        "8f3a50725e9e4d3ba32b8851fae2b714": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_8a63e806ab2c41f0ae850f2bc08e9ad1",
            "style": "IPY_MODEL_e94c3b47ae09402281c4abebab1a8dbe",
            "value": "<h5><b>Additional Outputs</b></h5>"
          }
        },
        "8a63e806ab2c41f0ae850f2bc08e9ad1": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "e94c3b47ae09402281c4abebab1a8dbe": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "076213274fec49deaba6b747b2eb016a": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_9d63ca0ded8547c89968ca8854eceea8",
            "style": "IPY_MODEL_ce4c8669a0894912b68a6981a6789400",
            "value": "<div>The following columns have only one unique value</div>"
          }
        },
        "9d63ca0ded8547c89968ca8854eceea8": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "ce4c8669a0894912b68a6981a6789400": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "2f8ecdcfc4eb482aa785249815019235": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_33db7b2ba795484c99acdea5ad0e821f",
            "style": "IPY_MODEL_f2d6af77c64a486f89a55e4987225975",
            "value": "<style type=\"text/css\">\n#T_7baa9_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_7baa9_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_7baa9_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_7baa9_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_7baa9_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_7baa9_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >Is Ripe</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_7baa9_level0_row0\" class=\"row_heading level0 row0\" >Single unique value</th>\n      <td id=\"T_7baa9_row0_col0\" class=\"data row0 col0\" >True</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "33db7b2ba795484c99acdea5ad0e821f": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "f2d6af77c64a486f89a55e4987225975": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "d00cb414217b43468b465cc14f9783d6": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_9acb9ff0d36f4e2fa807d0bf1a0a34bd",
            "style": "IPY_MODEL_e6dac805e85e48599673fb82a51408f6",
            "value": "<br><a href=\"#summary_EBBK7W1DAKRM8J5ECRUYF38DI\" style=\"font-size: 14px\">Go to top</a>"
          }
        },
        "9acb9ff0d36f4e2fa807d0bf1a0a34bd": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "e6dac805e85e48599673fb82a51408f6": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "d981bd34ca144370bf318d91b5f0efa5": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "32607629a076475993471a44b8a07db5": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "7ac4b1f70eed448ca86cfd2065d5ca0c": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_27e6935b17f341bd88e2bfd1d077390d",
            "style": "IPY_MODEL_40a09552fb3348a59adfb68e0ebbb630",
            "value": "<hr style=\"background-color: #eee;border: 0 none;color: #eee;height: 4px;\">"
          }
        },
        "27e6935b17f341bd88e2bfd1d077390d": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "40a09552fb3348a59adfb68e0ebbb630": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "d2ff73792c42499e8da9a05e115e9461": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "rendered_html",
              "jp-RenderedHTMLCommon",
              "jp-RenderedHTML",
              "jp-OutputArea-output"
            ],
            "children": [
              "IPY_MODEL_85cc868d5c564734993a1e0c2124cb51",
              "IPY_MODEL_bd7b8e3264e34c28b030a92c8bbc6b75",
              "IPY_MODEL_fc38fb6de8d24e6e9a44846907a095dd",
              "IPY_MODEL_0c3b2b812ee9441da7fbf5e507035c4c"
            ],
            "layout": "IPY_MODEL_68a7cde66f1a480f99aee17c7bae605c"
          }
        },
        "85cc868d5c564734993a1e0c2124cb51": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_2f56fb7b359d4f7aaf17a6504c601bc2",
            "style": "IPY_MODEL_152873e2be0941878ee8c6139c87333e",
            "value": "<h4 id=\"StringMismatch_EBBK7W1DAKRM8J5ECRUYF38DI\"><b>String Mismatch</b></h4>"
          }
        },
        "2f56fb7b359d4f7aaf17a6504c601bc2": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "152873e2be0941878ee8c6139c87333e": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "bd7b8e3264e34c28b030a92c8bbc6b75": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_2f63baf6d77a44f6b81606ff915eb217",
            "style": "IPY_MODEL_8dfe9f056ff84432a0cf79de4969a562",
            "value": "<p>Detect different variants of string categories (e.g. \"mislabeled\" vs \"mis-labeled\") in a categorical column.</p>"
          }
        },
        "2f63baf6d77a44f6b81606ff915eb217": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "8dfe9f056ff84432a0cf79de4969a562": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "fc38fb6de8d24e6e9a44846907a095dd": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_4381a4377463414faf0e6a31781dcdfb",
            "style": "IPY_MODEL_bc686967bf1b4d948fb02a9447e49957",
            "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_5f51a_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_5f51a_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_5f51a_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_5f51a_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_5f51a_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_5f51a_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_5f51a_row0_col0\" class=\"data row0 col0\" ><div style=\"color: orange;text-align: center;font-weight:bold\">!</div></td>\n      <td id=\"T_5f51a_row0_col1\" class=\"data row0 col1\" >No string variants</td>\n      <td id=\"T_5f51a_row0_col2\" class=\"data row0 col2\" >Found 1 out of 2 columns with amount of variants above threshold: {'type': ['organic']}</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "4381a4377463414faf0e6a31781dcdfb": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "bc686967bf1b4d948fb02a9447e49957": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "0c3b2b812ee9441da7fbf5e507035c4c": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "children": [
              "IPY_MODEL_c787fb584b2a4c72905aab035091bfb4",
              "IPY_MODEL_772a8961e632441fbde88e5f5e6d35d4",
              "IPY_MODEL_d9950144c0164d5385203ac2d4fc59f8",
              "IPY_MODEL_6e6bf534124a49909bf2447acf195f83"
            ],
            "layout": "IPY_MODEL_4d6ae56a380f45ceba226b79e6058666"
          }
        },
        "c787fb584b2a4c72905aab035091bfb4": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_78bdc93ca3034c00a8594fe7c7187b18",
            "style": "IPY_MODEL_b984feefcd5f4460a69a03d89ca5231a",
            "value": "<h5><b>Additional Outputs</b></h5>"
          }
        },
        "78bdc93ca3034c00a8594fe7c7187b18": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "b984feefcd5f4460a69a03d89ca5231a": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "772a8961e632441fbde88e5f5e6d35d4": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_1810de96c59947919e5741747b8d44f0",
            "style": "IPY_MODEL_56e5bea98be14077b9b3653be34230a5",
            "value": "<div>* showing only the top 10 columns, you can change it using n_top_columns param</div>"
          }
        },
        "1810de96c59947919e5741747b8d44f0": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "56e5bea98be14077b9b3653be34230a5": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "d9950144c0164d5385203ac2d4fc59f8": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_f75253e6280e4856b9ecedd9f3945e58",
            "style": "IPY_MODEL_be27de3a267b43b5ae7cecd448a59cdc",
            "value": "<style type=\"text/css\">\n#T_2bcc8_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_2bcc8_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_2bcc8_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_2bcc8_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_2bcc8_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_2bcc8_\">\n  <thead>\n    <tr>\n      <th class=\"blank\" >&nbsp;</th>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >Value</th>\n      <th class=\"col_heading level0 col1\" >Count</th>\n      <th class=\"col_heading level0 col2\" >% In data</th>\n    </tr>\n    <tr>\n      <th class=\"index_name level0\" >Column Name</th>\n      <th class=\"index_name level1\" >Base form</th>\n      <th class=\"blank col0\" >&nbsp;</th>\n      <th class=\"blank col1\" >&nbsp;</th>\n      <th class=\"blank col2\" >&nbsp;</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_2bcc8_level0_row0\" class=\"row_heading level0 row0\" rowspan=\"3\">type</th>\n      <th id=\"T_2bcc8_level1_row0\" class=\"row_heading level1 row0\" >organic</th>\n      <td id=\"T_2bcc8_row0_col0\" class=\"data row0 col0\" >ORGANIC</td>\n      <td id=\"T_2bcc8_row0_col1\" class=\"data row0 col1\" >88</td>\n      <td id=\"T_2bcc8_row0_col2\" class=\"data row0 col2\" >0.42%</td>\n    </tr>\n    <tr>\n      <th id=\"T_2bcc8_level1_row1\" class=\"row_heading level1 row1\" >organic</th>\n      <td id=\"T_2bcc8_row1_col0\" class=\"data row1 col0\" >Organic</td>\n      <td id=\"T_2bcc8_row1_col1\" class=\"data row1 col1\" >1877</td>\n      <td id=\"T_2bcc8_row1_col2\" class=\"data row1 col2\" >8.9%</td>\n    </tr>\n    <tr>\n      <th id=\"T_2bcc8_level1_row2\" class=\"row_heading level1 row2\" >organic</th>\n      <td id=\"T_2bcc8_row2_col0\" class=\"data row2 col0\" >organic</td>\n      <td id=\"T_2bcc8_row2_col1\" class=\"data row2 col1\" >8592</td>\n      <td id=\"T_2bcc8_row2_col2\" class=\"data row2 col2\" >40.73%</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "f75253e6280e4856b9ecedd9f3945e58": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "be27de3a267b43b5ae7cecd448a59cdc": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "6e6bf534124a49909bf2447acf195f83": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_8c61a836fe15498a89b026acf815ad55",
            "style": "IPY_MODEL_78292b8317d549dda9e62f5292aeaa1d",
            "value": "<br><a href=\"#summary_EBBK7W1DAKRM8J5ECRUYF38DI\" style=\"font-size: 14px\">Go to top</a>"
          }
        },
        "8c61a836fe15498a89b026acf815ad55": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "78292b8317d549dda9e62f5292aeaa1d": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "4d6ae56a380f45ceba226b79e6058666": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "68a7cde66f1a480f99aee17c7bae605c": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "02164ac58dc64140b54ac9c830c5546d": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "rendered_html",
              "jp-RenderedHTMLCommon",
              "jp-RenderedHTML",
              "jp-OutputArea-output"
            ],
            "children": [
              "IPY_MODEL_68c3f251d3984800a6e3c0ddca2d45b4",
              "IPY_MODEL_04ff75d7e10d464dba6eb090f2c8393c",
              "IPY_MODEL_12b6c50e8975400b97126d834b8d8fcc",
              "IPY_MODEL_2c9a08be16484760a7ed2bd10e0a407d"
            ],
            "layout": "IPY_MODEL_ddb893cd7f4c42848ca146ea8f621674"
          }
        },
        "68c3f251d3984800a6e3c0ddca2d45b4": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_c5c0aa65b0cd4351a1684b7712f77293",
            "style": "IPY_MODEL_b8f370816d9649e09d16ef510c83419f",
            "value": "<h4 id=\"DataDuplicates_EBBK7W1DAKRM8J5ECRUYF38DI\"><b>Data Duplicates</b></h4>"
          }
        },
        "c5c0aa65b0cd4351a1684b7712f77293": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "b8f370816d9649e09d16ef510c83419f": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "04ff75d7e10d464dba6eb090f2c8393c": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_c048d5086b9b4d939da1b5c8cd203a2d",
            "style": "IPY_MODEL_0d3d7952861d4d909b026744f2bdb9f7",
            "value": "<p>Checks for duplicate samples in the dataset.</p>"
          }
        },
        "c048d5086b9b4d939da1b5c8cd203a2d": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "0d3d7952861d4d909b026744f2bdb9f7": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "12b6c50e8975400b97126d834b8d8fcc": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_b30bf660ec154a1da42609275973d237",
            "style": "IPY_MODEL_f24c68998e494354a7b8f8a3b267dda8",
            "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_789d4_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_789d4_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_789d4_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_789d4_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_789d4_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_789d4_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_789d4_row0_col0\" class=\"data row0 col0\" ><div style=\"color: orange;text-align: center;font-weight:bold\">!</div></td>\n      <td id=\"T_789d4_row0_col1\" class=\"data row0 col1\" >Duplicate data ratio is not greater than 0%</td>\n      <td id=\"T_789d4_row0_col2\" class=\"data row0 col2\" >Found 13.5% duplicate data</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "b30bf660ec154a1da42609275973d237": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "f24c68998e494354a7b8f8a3b267dda8": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "2c9a08be16484760a7ed2bd10e0a407d": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "children": [
              "IPY_MODEL_8f5ab477a9cf4c0b9fa46c00ab3149bb",
              "IPY_MODEL_f72680ee15bc49ffa33c3c1fd46ca816",
              "IPY_MODEL_8cc30c6f262342ff962ab0758ba3ee17",
              "IPY_MODEL_914261d3b3eb4a14893e03f1f509bc60",
              "IPY_MODEL_bf50cab74c4e4142abf8e1c27c282448"
            ],
            "layout": "IPY_MODEL_74c6f2dd167a4e5aa034ed247c64c41d"
          }
        },
        "8f5ab477a9cf4c0b9fa46c00ab3149bb": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_18bce7c0ae6e45638790b34b8773a52b",
            "style": "IPY_MODEL_0a87839bd7ee43b5804acc71fa818b98",
            "value": "<h5><b>Additional Outputs</b></h5>"
          }
        },
        "18bce7c0ae6e45638790b34b8773a52b": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "0a87839bd7ee43b5804acc71fa818b98": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "f72680ee15bc49ffa33c3c1fd46ca816": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_e4db31b91f1a4c9ea6c3fd594bae2310",
            "style": "IPY_MODEL_1b440571ffe240d594609317d7f0ab97",
            "value": "<div>13.5% of data samples are duplicates. </div>"
          }
        },
        "e4db31b91f1a4c9ea6c3fd594bae2310": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "1b440571ffe240d594609317d7f0ab97": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "8cc30c6f262342ff962ab0758ba3ee17": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_12d1e33d41ab43178e72de77a6c87d4f",
            "style": "IPY_MODEL_e9b8a81ef1b44c1eb4074f508eb9d093",
            "value": "<div>Each row in the table shows an example of duplicate data and the number of times it appears.</div>"
          }
        },
        "12d1e33d41ab43178e72de77a6c87d4f": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "e9b8a81ef1b44c1eb4074f508eb9d093": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "914261d3b3eb4a14893e03f1f509bc60": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_406c32bcdae340d0aef104dfc2a2f855",
            "style": "IPY_MODEL_d5a47e7d1d14424794a2533319d0f780",
            "value": "<style type=\"text/css\">\n#T_acfce_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_acfce_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_acfce_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_acfce_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_acfce_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_acfce_\">\n  <thead>\n    <tr>\n      <th class=\"blank\" >&nbsp;</th>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >Date</th>\n      <th class=\"col_heading level0 col1\" >AveragePrice</th>\n      <th class=\"col_heading level0 col2\" >Total Volume</th>\n      <th class=\"col_heading level0 col3\" >4046</th>\n      <th class=\"col_heading level0 col4\" >4225</th>\n      <th class=\"col_heading level0 col5\" >4770</th>\n      <th class=\"col_heading level0 col6\" >Total Bags</th>\n      <th class=\"col_heading level0 col7\" >Small Bags</th>\n      <th class=\"col_heading level0 col8\" >Large Bags</th>\n      <th class=\"col_heading level0 col9\" >XLarge Bags</th>\n      <th class=\"col_heading level0 col10\" >type</th>\n      <th class=\"col_heading level0 col11\" >year</th>\n      <th class=\"col_heading level0 col12\" >region</th>\n      <th class=\"col_heading level0 col13\" >Is Ripe</th>\n    </tr>\n    <tr>\n      <th class=\"index_name level0\" >Instances</th>\n      <th class=\"index_name level1\" >Number of Duplicates</th>\n      <th class=\"blank col0\" >&nbsp;</th>\n      <th class=\"blank col1\" >&nbsp;</th>\n      <th class=\"blank col2\" >&nbsp;</th>\n      <th class=\"blank col3\" >&nbsp;</th>\n      <th class=\"blank col4\" >&nbsp;</th>\n      <th class=\"blank col5\" >&nbsp;</th>\n      <th class=\"blank col6\" >&nbsp;</th>\n      <th class=\"blank col7\" >&nbsp;</th>\n      <th class=\"blank col8\" >&nbsp;</th>\n      <th class=\"blank col9\" >&nbsp;</th>\n      <th class=\"blank col10\" >&nbsp;</th>\n      <th class=\"blank col11\" >&nbsp;</th>\n      <th class=\"blank col12\" >&nbsp;</th>\n      <th class=\"blank col13\" >&nbsp;</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_acfce_level0_row0\" class=\"row_heading level0 row0\" >1143, 20833</th>\n      <th id=\"T_acfce_level1_row0\" class=\"row_heading level1 row0\" >2</th>\n      <td id=\"T_acfce_row0_col0\" class=\"data row0 col0\" >2015-01-04 00:00:00</td>\n      <td id=\"T_acfce_row0_col1\" class=\"data row0 col1\" >0.80</td>\n      <td id=\"T_acfce_row0_col2\" class=\"data row0 col2\" >317861.35</td>\n      <td id=\"T_acfce_row0_col3\" class=\"data row0 col3\" >134003.07</td>\n      <td id=\"T_acfce_row0_col4\" class=\"data row0 col4\" >120628.37</td>\n      <td id=\"T_acfce_row0_col5\" class=\"data row0 col5\" >4591.23</td>\n      <td id=\"T_acfce_row0_col6\" class=\"data row0 col6\" >58638.68</td>\n      <td id=\"T_acfce_row0_col7\" class=\"data row0 col7\" >58126.59</td>\n      <td id=\"T_acfce_row0_col8\" class=\"data row0 col8\" >512.09</td>\n      <td id=\"T_acfce_row0_col9\" class=\"data row0 col9\" >0.00</td>\n      <td id=\"T_acfce_row0_col10\" class=\"data row0 col10\" >conventional</td>\n      <td id=\"T_acfce_row0_col11\" class=\"data row0 col11\" >2015</td>\n      <td id=\"T_acfce_row0_col12\" class=\"data row0 col12\" >LasVegas</td>\n      <td id=\"T_acfce_row0_col13\" class=\"data row0 col13\" >True</td>\n    </tr>\n    <tr>\n      <th id=\"T_acfce_level0_row1\" class=\"row_heading level0 row1\" >1247, 19859</th>\n      <th id=\"T_acfce_level1_row1\" class=\"row_heading level1 row1\" >2</th>\n      <td id=\"T_acfce_row1_col0\" class=\"data row1 col0\" >2015-01-04 00:00:00</td>\n      <td id=\"T_acfce_row1_col1\" class=\"data row1 col1\" >0.92</td>\n      <td id=\"T_acfce_row1_col2\" class=\"data row1 col2\" >101162.98</td>\n      <td id=\"T_acfce_row1_col3\" class=\"data row1 col3\" >1991.63</td>\n      <td id=\"T_acfce_row1_col4\" class=\"data row1 col4\" >75090.16</td>\n      <td id=\"T_acfce_row1_col5\" class=\"data row1 col5\" >283.88</td>\n      <td id=\"T_acfce_row1_col6\" class=\"data row1 col6\" >23797.31</td>\n      <td id=\"T_acfce_row1_col7\" class=\"data row1 col7\" >7769.36</td>\n      <td id=\"T_acfce_row1_col8\" class=\"data row1 col8\" >16027.95</td>\n      <td id=\"T_acfce_row1_col9\" class=\"data row1 col9\" >0.00</td>\n      <td id=\"T_acfce_row1_col10\" class=\"data row1 col10\" >conventional</td>\n      <td id=\"T_acfce_row1_col11\" class=\"data row1 col11\" >2015</td>\n      <td id=\"T_acfce_row1_col12\" class=\"data row1 col12\" >Louisville</td>\n      <td id=\"T_acfce_row1_col13\" class=\"data row1 col13\" >True</td>\n    </tr>\n    <tr>\n      <th id=\"T_acfce_level0_row2\" class=\"row_heading level0 row2\" >2651, 19748</th>\n      <th id=\"T_acfce_level1_row2\" class=\"row_heading level1 row2\" >2</th>\n      <td id=\"T_acfce_row2_col0\" class=\"data row2 col0\" >2015-01-04 00:00:00</td>\n      <td id=\"T_acfce_row2_col1\" class=\"data row2 col1\" >0.97</td>\n      <td id=\"T_acfce_row2_col2\" class=\"data row2 col2\" >339909.13</td>\n      <td id=\"T_acfce_row2_col3\" class=\"data row2 col3\" >226346.70</td>\n      <td id=\"T_acfce_row2_col4\" class=\"data row2 col4\" >37517.53</td>\n      <td id=\"T_acfce_row2_col5\" class=\"data row2 col5\" >53.15</td>\n      <td id=\"T_acfce_row2_col6\" class=\"data row2 col6\" >75991.75</td>\n      <td id=\"T_acfce_row2_col7\" class=\"data row2 col7\" >33447.51</td>\n      <td id=\"T_acfce_row2_col8\" class=\"data row2 col8\" >42544.24</td>\n      <td id=\"T_acfce_row2_col9\" class=\"data row2 col9\" >0.00</td>\n      <td id=\"T_acfce_row2_col10\" class=\"data row2 col10\" >conventional</td>\n      <td id=\"T_acfce_row2_col11\" class=\"data row2 col11\" >2015</td>\n      <td id=\"T_acfce_row2_col12\" class=\"data row2 col12\" >Tampa</td>\n      <td id=\"T_acfce_row2_col13\" class=\"data row2 col13\" >True</td>\n    </tr>\n    <tr>\n      <th id=\"T_acfce_level0_row3\" class=\"row_heading level0 row3\" >155, 19747</th>\n      <th id=\"T_acfce_level1_row3\" class=\"row_heading level1 row3\" >2</th>\n      <td id=\"T_acfce_row3_col0\" class=\"data row3 col0\" >2015-01-04 00:00:00</td>\n      <td id=\"T_acfce_row3_col1\" class=\"data row3 col1\" >1.08</td>\n      <td id=\"T_acfce_row3_col2\" class=\"data row3 col2\" >788025.06</td>\n      <td id=\"T_acfce_row3_col3\" class=\"data row3 col3\" >53987.31</td>\n      <td id=\"T_acfce_row3_col4\" class=\"data row3 col4\" >552906.04</td>\n      <td id=\"T_acfce_row3_col5\" class=\"data row3 col5\" >39995.03</td>\n      <td id=\"T_acfce_row3_col6\" class=\"data row3 col6\" >141136.68</td>\n      <td id=\"T_acfce_row3_col7\" class=\"data row3 col7\" >137146.07</td>\n      <td id=\"T_acfce_row3_col8\" class=\"data row3 col8\" >3990.61</td>\n      <td id=\"T_acfce_row3_col9\" class=\"data row3 col9\" >0.00</td>\n      <td id=\"T_acfce_row3_col10\" class=\"data row3 col10\" >conventional</td>\n      <td id=\"T_acfce_row3_col11\" class=\"data row3 col11\" >2015</td>\n      <td id=\"T_acfce_row3_col12\" class=\"data row3 col12\" >BaltimoreWashington</td>\n      <td id=\"T_acfce_row3_col13\" class=\"data row3 col13\" >True</td>\n    </tr>\n    <tr>\n      <th id=\"T_acfce_level0_row4\" class=\"row_heading level0 row4\" >1507, 19497</th>\n      <th id=\"T_acfce_level1_row4\" class=\"row_heading level1 row4\" >2</th>\n      <td id=\"T_acfce_row4_col0\" class=\"data row4 col0\" >2015-01-04 00:00:00</td>\n      <td id=\"T_acfce_row4_col1\" class=\"data row4 col1\" >1.09</td>\n      <td id=\"T_acfce_row4_col2\" class=\"data row4 col2\" >1402890.20</td>\n      <td id=\"T_acfce_row4_col3\" class=\"data row4 col3\" >23641.00</td>\n      <td id=\"T_acfce_row4_col4\" class=\"data row4 col4\" >1127882.44</td>\n      <td id=\"T_acfce_row4_col5\" class=\"data row4 col5\" >1871.07</td>\n      <td id=\"T_acfce_row4_col6\" class=\"data row4 col6\" >249495.69</td>\n      <td id=\"T_acfce_row4_col7\" class=\"data row4 col7\" >178683.01</td>\n      <td id=\"T_acfce_row4_col8\" class=\"data row4 col8\" >70812.68</td>\n      <td id=\"T_acfce_row4_col9\" class=\"data row4 col9\" >0.00</td>\n      <td id=\"T_acfce_row4_col10\" class=\"data row4 col10\" >conventional</td>\n      <td id=\"T_acfce_row4_col11\" class=\"data row4 col11\" >2015</td>\n      <td id=\"T_acfce_row4_col12\" class=\"data row4 col12\" >NewYork</td>\n      <td id=\"T_acfce_row4_col13\" class=\"data row4 col13\" >True</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "406c32bcdae340d0aef104dfc2a2f855": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "d5a47e7d1d14424794a2533319d0f780": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "bf50cab74c4e4142abf8e1c27c282448": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_42ee92363bc84f69a20af27bae80c868",
            "style": "IPY_MODEL_5817d2ad73374741a0ee1fd66c1d481d",
            "value": "<br><a href=\"#summary_EBBK7W1DAKRM8J5ECRUYF38DI\" style=\"font-size: 14px\">Go to top</a>"
          }
        },
        "42ee92363bc84f69a20af27bae80c868": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "5817d2ad73374741a0ee1fd66c1d481d": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "74c6f2dd167a4e5aa034ed247c64c41d": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "ddb893cd7f4c42848ca146ea8f621674": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "c6041db91c0848cfb994080cf226993a": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "rendered_html",
              "jp-RenderedHTMLCommon",
              "jp-RenderedHTML",
              "jp-OutputArea-output"
            ],
            "children": [
              "IPY_MODEL_2bdb959292074ed5b262d94610fded11",
              "IPY_MODEL_79a83f9aeb4c477ea55e507737eb41dd",
              "IPY_MODEL_cc019e4e5a1342a1a0650c8e2779b293",
              "IPY_MODEL_b24014fcacd545f28bb6ae3628f6bde6"
            ],
            "layout": "IPY_MODEL_0cee38e6e8914e5e9b14a15fda23d5c8"
          }
        },
        "2bdb959292074ed5b262d94610fded11": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_fbcc13eb46e24951b6d62fa8632b6266",
            "style": "IPY_MODEL_674eaeb144374321a5d3fbfb86b3d69e",
            "value": "<h4 id=\"FeatureLabelCorrelation_EBBK7W1DAKRM8J5ECRUYF38DI\"><b>Feature Label Correlation</b></h4>"
          }
        },
        "fbcc13eb46e24951b6d62fa8632b6266": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "674eaeb144374321a5d3fbfb86b3d69e": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "79a83f9aeb4c477ea55e507737eb41dd": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_9c554d74377e4e4692e13283692c0db7",
            "style": "IPY_MODEL_e129f263c38342e1817e4356271ae987",
            "value": "<p>Return the PPS (Predictive Power Score) of all features in relation to the label.</p>"
          }
        },
        "9c554d74377e4e4692e13283692c0db7": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "e129f263c38342e1817e4356271ae987": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "cc019e4e5a1342a1a0650c8e2779b293": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_d5e7b871eabf45fd84d338f61a837d71",
            "style": "IPY_MODEL_7f917d0d2bdb4dabbf8b6c88614c1028",
            "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_b970e_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_b970e_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_b970e_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_b970e_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_b970e_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_b970e_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_b970e_row0_col0\" class=\"data row0 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_b970e_row0_col1\" class=\"data row0 col1\" >Features' Predictive Power Score is not greater than 0.8</td>\n      <td id=\"T_b970e_row0_col2\" class=\"data row0 col2\" >Passed for 12 relevant columns</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "d5e7b871eabf45fd84d338f61a837d71": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "7f917d0d2bdb4dabbf8b6c88614c1028": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "b24014fcacd545f28bb6ae3628f6bde6": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "children": [
              "IPY_MODEL_5d33b1852cbb4a4295e017b72a0db82f",
              "IPY_MODEL_429a8dfa8b464fbc97fed891172e36ed",
              "IPY_MODEL_dbfbe06e8f804a1cbafecd67bd746c7f",
              "IPY_MODEL_5e3bc28550d44c28b0ac70ff35a80a00"
            ],
            "layout": "IPY_MODEL_153a64b2d5f94519bb5064986134b920"
          }
        },
        "5d33b1852cbb4a4295e017b72a0db82f": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_46190d6bd95b4a44a0516df8eae83afb",
            "style": "IPY_MODEL_f154ba8bdfb74bfbb869c2da8ddf8df1",
            "value": "<h5><b>Additional Outputs</b></h5>"
          }
        },
        "46190d6bd95b4a44a0516df8eae83afb": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "f154ba8bdfb74bfbb869c2da8ddf8df1": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "429a8dfa8b464fbc97fed891172e36ed": {
          "model_name": "FigureModel",
          "model_module": "jupyterlab-plotly",
          "model_module_version": "^5.5.0",
          "state": {
            "_config": {
              "plotlyServerURL": "https://plot.ly"
            },
            "_data": [
              {
                "marker": {
                  "color": "#00008b"
                },
                "name": "Train",
                "text": [
                  "<b>0.24</b>",
                  "<b>0.07</b>",
                  "<b>0.04</b>",
                  "<b>0.03</b>",
                  "<b>0.01</b>"
                ],
                "textposition": "outside",
                "x": [
                  "type",
                  "region",
                  "XLarge Bags",
                  "4770",
                  "year"
                ],
                "y": {
                  "dtype": "float64",
                  "shape": [
                    5
                  ]
                },
                "type": "bar",
                "uid": "e0a51a07-7567-4993-b9e8-552d01cde5d9"
              }
            ],
            "_dom_classes": [],
            "_js2py_layoutDelta": {},
            "_js2py_pointsCallback": {},
            "_js2py_relayout": {},
            "_js2py_restyle": {},
            "_js2py_traceDeltas": {},
            "_js2py_update": {},
            "_layout": {
              "barmode": "group",
              "height": 500,
              "legend": {
                "x": 1.0,
                "y": 1.0
              },
              "template": {
                "data": {
                  "barpolar": [
                    {
                      "marker": {
                        "line": {
                          "color": "#E5ECF6",
                          "width": 0.5
                        },
                        "pattern": {
                          "fillmode": "overlay",
                          "size": 10,
                          "solidity": 0.2
                        }
                      },
                      "type": "barpolar"
                    }
                  ],
                  "bar": [
                    {
                      "error_x": {
                        "color": "#2a3f5f"
                      },
                      "error_y": {
                        "color": "#2a3f5f"
                      },
                      "marker": {
                        "line": {
                          "color": "#E5ECF6",
                          "width": 0.5
                        },
                        "pattern": {
                          "fillmode": "overlay",
                          "size": 10,
                          "solidity": 0.2
                        }
                      },
                      "type": "bar"
                    }
                  ],
                  "carpet": [
                    {
                      "aaxis": {
                        "endlinecolor": "#2a3f5f",
                        "gridcolor": "white",
                        "linecolor": "white",
                        "minorgridcolor": "white",
                        "startlinecolor": "#2a3f5f"
                      },
                      "baxis": {
                        "endlinecolor": "#2a3f5f",
                        "gridcolor": "white",
                        "linecolor": "white",
                        "minorgridcolor": "white",
                        "startlinecolor": "#2a3f5f"
                      },
                      "type": "carpet"
                    }
                  ],
                  "choropleth": [
                    {
                      "colorbar": {
                        "outlinewidth": 0,
                        "ticks": ""
                      },
                      "type": "choropleth"
                    }
                  ],
                  "contourcarpet": [
                    {
                      "colorbar": {
                        "outlinewidth": 0,
                        "ticks": ""
                      },
                      "type": "contourcarpet"
                    }
                  ],
                  "contour": [
                    {
                      "colorbar": {
                        "outlinewidth": 0,
                        "ticks": ""
                      },
                      "colorscale": [
                        [
                          0.0,
                          "#0d0887"
                        ],
                        [
                          0.1111111111111111,
                          "#46039f"
                        ],
                        [
                          0.2222222222222222,
                          "#7201a8"
                        ],
                        [
                          0.3333333333333333,
                          "#9c179e"
                        ],
                        [
                          0.4444444444444444,
                          "#bd3786"
                        ],
                        [
                          0.5555555555555556,
                          "#d8576b"
                        ],
                        [
                          0.6666666666666666,
                          "#ed7953"
                        ],
                        [
                          0.7777777777777778,
                          "#fb9f3a"
                        ],
                        [
                          0.8888888888888888,
                          "#fdca26"
                        ],
                        [
                          1.0,
                          "#f0f921"
                        ]
                      ],
                      "type": "contour"
                    }
                  ],
                  "heatmapgl": [
                    {
                      "colorbar": {
                        "outlinewidth": 0,
                        "ticks": ""
                      },
                      "colorscale": [
                        [
                          0.0,
                          "#0d0887"
                        ],
                        [
                          0.1111111111111111,
                          "#46039f"
                        ],
                        [
                          0.2222222222222222,
                          "#7201a8"
                        ],
                        [
                          0.3333333333333333,
                          "#9c179e"
                        ],
                        [
                          0.4444444444444444,
                          "#bd3786"
                        ],
                        [
                          0.5555555555555556,
                          "#d8576b"
                        ],
                        [
                          0.6666666666666666,
                          "#ed7953"
                        ],
                        [
                          0.7777777777777778,
                          "#fb9f3a"
                        ],
                        [
                          0.8888888888888888,
                          "#fdca26"
                        ],
                        [
                          1.0,
                          "#f0f921"
                        ]
                      ],
                      "type": "heatmapgl"
                    }
                  ],
                  "heatmap": [
                    {
                      "colorbar": {
                        "outlinewidth": 0,
                        "ticks": ""
                      },
                      "colorscale": [
                        [
                          0.0,
                          "#0d0887"
                        ],
                        [
                          0.1111111111111111,
                          "#46039f"
                        ],
                        [
                          0.2222222222222222,
                          "#7201a8"
                        ],
                        [
                          0.3333333333333333,
                          "#9c179e"
                        ],
                        [
                          0.4444444444444444,
                          "#bd3786"
                        ],
                        [
                          0.5555555555555556,
                          "#d8576b"
                        ],
                        [
                          0.6666666666666666,
                          "#ed7953"
                        ],
                        [
                          0.7777777777777778,
                          "#fb9f3a"
                        ],
                        [
                          0.8888888888888888,
                          "#fdca26"
                        ],
                        [
                          1.0,
                          "#f0f921"
                        ]
                      ],
                      "type": "heatmap"
                    }
                  ],
                  "histogram2dcontour": [
                    {
                      "colorbar": {
                        "outlinewidth": 0,
                        "ticks": ""
                      },
                      "colorscale": [
                        [
                          0.0,
                          "#0d0887"
                        ],
                        [
                          0.1111111111111111,
                          "#46039f"
                        ],
                        [
                          0.2222222222222222,
                          "#7201a8"
                        ],
                        [
                          0.3333333333333333,
                          "#9c179e"
                        ],
                        [
                          0.4444444444444444,
                          "#bd3786"
                        ],
                        [
                          0.5555555555555556,
                          "#d8576b"
                        ],
                        [
                          0.6666666666666666,
                          "#ed7953"
                        ],
                        [
                          0.7777777777777778,
                          "#fb9f3a"
                        ],
                        [
                          0.8888888888888888,
                          "#fdca26"
                        ],
                        [
                          1.0,
                          "#f0f921"
                        ]
                      ],
                      "type": "histogram2dcontour"
                    }
                  ],
                  "histogram2d": [
                    {
                      "colorbar": {
                        "outlinewidth": 0,
                        "ticks": ""
                      },
                      "colorscale": [
                        [
                          0.0,
                          "#0d0887"
                        ],
                        [
                          0.1111111111111111,
                          "#46039f"
                        ],
                        [
                          0.2222222222222222,
                          "#7201a8"
                        ],
                        [
                          0.3333333333333333,
                          "#9c179e"
                        ],
                        [
                          0.4444444444444444,
                          "#bd3786"
                        ],
                        [
                          0.5555555555555556,
                          "#d8576b"
                        ],
                        [
                          0.6666666666666666,
                          "#ed7953"
                        ],
                        [
                          0.7777777777777778,
                          "#fb9f3a"
                        ],
                        [
                          0.8888888888888888,
                          "#fdca26"
                        ],
                        [
                          1.0,
                          "#f0f921"
                        ]
                      ],
                      "type": "histogram2d"
                    }
                  ],
                  "histogram": [
                    {
                      "marker": {
                        "pattern": {
                          "fillmode": "overlay",
                          "size": 10,
                          "solidity": 0.2
                        }
                      },
                      "type": "histogram"
                    }
                  ],
                  "mesh3d": [
                    {
                      "colorbar": {
                        "outlinewidth": 0,
                        "ticks": ""
                      },
                      "type": "mesh3d"
                    }
                  ],
                  "parcoords": [
                    {
                      "line": {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        }
                      },
                      "type": "parcoords"
                    }
                  ],
                  "pie": [
                    {
                      "automargin": true,
                      "type": "pie"
                    }
                  ],
                  "scatter3d": [
                    {
                      "line": {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        }
                      },
                      "marker": {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        }
                      },
                      "type": "scatter3d"
                    }
                  ],
                  "scattercarpet": [
                    {
                      "marker": {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        }
                      },
                      "type": "scattercarpet"
                    }
                  ],
                  "scattergeo": [
                    {
                      "marker": {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        }
                      },
                      "type": "scattergeo"
                    }
                  ],
                  "scattergl": [
                    {
                      "marker": {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        }
                      },
                      "type": "scattergl"
                    }
                  ],
                  "scattermapbox": [
                    {
                      "marker": {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        }
                      },
                      "type": "scattermapbox"
                    }
                  ],
                  "scatterpolargl": [
                    {
                      "marker": {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        }
                      },
                      "type": "scatterpolargl"
                    }
                  ],
                  "scatterpolar": [
                    {
                      "marker": {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        }
                      },
                      "type": "scatterpolar"
                    }
                  ],
                  "scatter": [
                    {
                      "marker": {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        }
                      },
                      "type": "scatter"
                    }
                  ],
                  "scatterternary": [
                    {
                      "marker": {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        }
                      },
                      "type": "scatterternary"
                    }
                  ],
                  "surface": [
                    {
                      "colorbar": {
                        "outlinewidth": 0,
                        "ticks": ""
                      },
                      "colorscale": [
                        [
                          0.0,
                          "#0d0887"
                        ],
                        [
                          0.1111111111111111,
                          "#46039f"
                        ],
                        [
                          0.2222222222222222,
                          "#7201a8"
                        ],
                        [
                          0.3333333333333333,
                          "#9c179e"
                        ],
                        [
                          0.4444444444444444,
                          "#bd3786"
                        ],
                        [
                          0.5555555555555556,
                          "#d8576b"
                        ],
                        [
                          0.6666666666666666,
                          "#ed7953"
                        ],
                        [
                          0.7777777777777778,
                          "#fb9f3a"
                        ],
                        [
                          0.8888888888888888,
                          "#fdca26"
                        ],
                        [
                          1.0,
                          "#f0f921"
                        ]
                      ],
                      "type": "surface"
                    }
                  ],
                  "table": [
                    {
                      "cells": {
                        "fill": {
                          "color": "#EBF0F8"
                        },
                        "line": {
                          "color": "white"
                        }
                      },
                      "header": {
                        "fill": {
                          "color": "#C8D4E3"
                        },
                        "line": {
                          "color": "white"
                        }
                      },
                      "type": "table"
                    }
                  ]
                },
                "layout": {
                  "annotationdefaults": {
                    "arrowcolor": "#2a3f5f",
                    "arrowhead": 0,
                    "arrowwidth": 1
                  },
                  "autotypenumbers": "strict",
                  "coloraxis": {
                    "colorbar": {
                      "outlinewidth": 0,
                      "ticks": ""
                    }
                  },
                  "colorscale": {
                    "diverging": [
                      [
                        0,
                        "#8e0152"
                      ],
                      [
                        0.1,
                        "#c51b7d"
                      ],
                      [
                        0.2,
                        "#de77ae"
                      ],
                      [
                        0.3,
                        "#f1b6da"
                      ],
                      [
                        0.4,
                        "#fde0ef"
                      ],
                      [
                        0.5,
                        "#f7f7f7"
                      ],
                      [
                        0.6,
                        "#e6f5d0"
                      ],
                      [
                        0.7,
                        "#b8e186"
                      ],
                      [
                        0.8,
                        "#7fbc41"
                      ],
                      [
                        0.9,
                        "#4d9221"
                      ],
                      [
                        1,
                        "#276419"
                      ]
                    ],
                    "sequential": [
                      [
                        0.0,
                        "#0d0887"
                      ],
                      [
                        0.1111111111111111,
                        "#46039f"
                      ],
                      [
                        0.2222222222222222,
                        "#7201a8"
                      ],
                      [
                        0.3333333333333333,
                        "#9c179e"
                      ],
                      [
                        0.4444444444444444,
                        "#bd3786"
                      ],
                      [
                        0.5555555555555556,
                        "#d8576b"
                      ],
                      [
                        0.6666666666666666,
                        "#ed7953"
                      ],
                      [
                        0.7777777777777778,
                        "#fb9f3a"
                      ],
                      [
                        0.8888888888888888,
                        "#fdca26"
                      ],
                      [
                        1.0,
                        "#f0f921"
                      ]
                    ],
                    "sequentialminus": [
                      [
                        0.0,
                        "#0d0887"
                      ],
                      [
                        0.1111111111111111,
                        "#46039f"
                      ],
                      [
                        0.2222222222222222,
                        "#7201a8"
                      ],
                      [
                        0.3333333333333333,
                        "#9c179e"
                      ],
                      [
                        0.4444444444444444,
                        "#bd3786"
                      ],
                      [
                        0.5555555555555556,
                        "#d8576b"
                      ],
                      [
                        0.6666666666666666,
                        "#ed7953"
                      ],
                      [
                        0.7777777777777778,
                        "#fb9f3a"
                      ],
                      [
                        0.8888888888888888,
                        "#fdca26"
                      ],
                      [
                        1.0,
                        "#f0f921"
                      ]
                    ]
                  },
                  "colorway": [
                    "#636efa",
                    "#EF553B",
                    "#00cc96",
                    "#ab63fa",
                    "#FFA15A",
                    "#19d3f3",
                    "#FF6692",
                    "#B6E880",
                    "#FF97FF",
                    "#FECB52"
                  ],
                  "font": {
                    "color": "#2a3f5f"
                  },
                  "geo": {
                    "bgcolor": "white",
                    "lakecolor": "white",
                    "landcolor": "#E5ECF6",
                    "showlakes": true,
                    "showland": true,
                    "subunitcolor": "white"
                  },
                  "hoverlabel": {
                    "align": "left"
                  },
                  "hovermode": "closest",
                  "mapbox": {
                    "style": "light"
                  },
                  "paper_bgcolor": "white",
                  "plot_bgcolor": "#E5ECF6",
                  "polar": {
                    "angularaxis": {
                      "gridcolor": "white",
                      "linecolor": "white",
                      "ticks": ""
                    },
                    "bgcolor": "#E5ECF6",
                    "radialaxis": {
                      "gridcolor": "white",
                      "linecolor": "white",
                      "ticks": ""
                    }
                  },
                  "scene": {
                    "xaxis": {
                      "backgroundcolor": "#E5ECF6",
                      "gridcolor": "white",
                      "gridwidth": 2,
                      "linecolor": "white",
                      "showbackground": true,
                      "ticks": "",
                      "zerolinecolor": "white"
                    },
                    "yaxis": {
                      "backgroundcolor": "#E5ECF6",
                      "gridcolor": "white",
                      "gridwidth": 2,
                      "linecolor": "white",
                      "showbackground": true,
                      "ticks": "",
                      "zerolinecolor": "white"
                    },
                    "zaxis": {
                      "backgroundcolor": "#E5ECF6",
                      "gridcolor": "white",
                      "gridwidth": 2,
                      "linecolor": "white",
                      "showbackground": true,
                      "ticks": "",
                      "zerolinecolor": "white"
                    }
                  },
                  "shapedefaults": {
                    "line": {
                      "color": "#2a3f5f"
                    }
                  },
                  "ternary": {
                    "aaxis": {
                      "gridcolor": "white",
                      "linecolor": "white",
                      "ticks": ""
                    },
                    "baxis": {
                      "gridcolor": "white",
                      "linecolor": "white",
                      "ticks": ""
                    },
                    "bgcolor": "#E5ECF6",
                    "caxis": {
                      "gridcolor": "white",
                      "linecolor": "white",
                      "ticks": ""
                    }
                  },
                  "title": {
                    "x": 0.05
                  },
                  "xaxis": {
                    "automargin": true,
                    "gridcolor": "white",
                    "linecolor": "white",
                    "ticks": "",
                    "title": {
                      "standoff": 15
                    },
                    "zerolinecolor": "white",
                    "zerolinewidth": 2
                  },
                  "yaxis": {
                    "automargin": true,
                    "gridcolor": "white",
                    "linecolor": "white",
                    "ticks": "",
                    "title": {
                      "standoff": 15
                    },
                    "zerolinecolor": "white",
                    "zerolinewidth": 2
                  }
                }
              },
              "title": {
                "text": "Predictive Power Score (PPS) - Can a feature predict the label by itself?"
              },
              "xaxis": {
                "range": [
                  -3,
                  7
                ],
                "title": {
                  "text": "Column"
                }
              },
              "yaxis": {
                "range": [
                  0,
                  1.05
                ],
                "title": {
                  "text": "Predictive Power Score (PPS)"
                }
              }
            },
            "_py2js_addTraces": {},
            "_py2js_animate": {},
            "_py2js_deleteTraces": {},
            "_py2js_moveTraces": {},
            "_py2js_relayout": {},
            "_py2js_removeLayoutProps": {},
            "_py2js_removeTraceProps": {},
            "_py2js_restyle": {},
            "_py2js_update": {},
            "_view_count": 0
          },
          "buffers": [
            {
              "encoding": "base64",
              "path": [
                "_data",
                0,
                "y",
                "buffer"
              ],
              "data": "CK99Tujszj9oVWbFLOeyP9BFc0G4+aM/kKkl/Kc6oT8AQq9y8iONPw=="
            }
          ]
        },
        "dbfbe06e8f804a1cbafecd67bd746c7f": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_f12cb17efd6640d985692ec6a9ebf0d2",
            "style": "IPY_MODEL_17a13cdb32ad4e419a74fe93db6141f4",
            "value": "<div>The Predictive Power Score (PPS) is used to estimate the ability of a feature to predict the label by itself (Read more about <a href=https://docs.deepchecks.com/en/stable/examples/tabular/checks/train_test_validation/feature_label_correlation_change.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link target=\"_blank\">Predictive Power Score</a>). A high PPS (close to 1) can mean that this feature's success in predicting the label is actually due to data leakage - meaning that the feature holds information that is based on the label to begin with.</div>"
          }
        },
        "f12cb17efd6640d985692ec6a9ebf0d2": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "17a13cdb32ad4e419a74fe93db6141f4": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "5e3bc28550d44c28b0ac70ff35a80a00": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_513108bbef9443448f0dd393e001abe5",
            "style": "IPY_MODEL_010b06818e7741029e284696fd592d43",
            "value": "<br><a href=\"#summary_EBBK7W1DAKRM8J5ECRUYF38DI\" style=\"font-size: 14px\">Go to top</a>"
          }
        },
        "513108bbef9443448f0dd393e001abe5": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "010b06818e7741029e284696fd592d43": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "153a64b2d5f94519bb5064986134b920": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "0cee38e6e8914e5e9b14a15fda23d5c8": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "133795b85cd642349bbc02de3243a688": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "22c0a9f3c7f248fdbf62483793183108": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "rendered_html",
              "jp-RenderedHTMLCommon",
              "jp-RenderedHTML",
              "jp-OutputArea-output"
            ],
            "children": [
              "IPY_MODEL_aa60904600ad4b9bac5061a8fd7f5eb6"
            ],
            "layout": "IPY_MODEL_bd488d260cac4bd9a7cd22e9818a2cb6"
          }
        },
        "aa60904600ad4b9bac5061a8fd7f5eb6": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_cb5204897e9a4762b3514626f552e8c4",
            "style": "IPY_MODEL_efc1598720b14019b427942ecc39cc8d",
            "value": "<p>No outputs to show.</p>"
          }
        },
        "cb5204897e9a4762b3514626f552e8c4": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "efc1598720b14019b427942ecc39cc8d": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "bd488d260cac4bd9a7cd22e9818a2cb6": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "bb85ad563842421aa36e6173fb9cf47d": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "rendered_html",
              "jp-RenderedHTMLCommon",
              "jp-RenderedHTML",
              "jp-OutputArea-output"
            ],
            "layout": "IPY_MODEL_2785933039324010b41f9a82a50433d9",
            "style": "IPY_MODEL_9ae89bbb72b7499198bced44f6f1b7f1",
            "value": "<h2>Other Checks That Weren't Displayed</h2>\n<style type=\"text/css\">\n#T_59441_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_59441_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_59441_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_59441_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_59441_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_59441_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Check</th>\n      <th class=\"col_heading level0 col1\" >Reason</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_59441_row0_col0\" class=\"data row0 col0\" >Conflicting Labels - Train Dataset</td>\n      <td id=\"T_59441_row0_col1\" class=\"data row0 col1\" >ModelValidationError: Check is irrelevant for regressions tasks</td>\n    </tr>\n    <tr>\n      <td id=\"T_59441_row1_col0\" class=\"data row1 col0\" >Outlier Sample Detection - Train Dataset</td>\n      <td id=\"T_59441_row1_col1\" class=\"data row1 col1\" >Cannot cast ufunc 'true_divide' output from dtype('O') to dtype('float64') with casting rule 'same_kind'</td>\n    </tr>\n    <tr>\n      <td id=\"T_59441_row2_col0\" class=\"data row2 col0\" >Special Characters</td>\n      <td id=\"T_59441_row2_col1\" class=\"data row2 col1\" >Nothing found</td>\n    </tr>\n    <tr>\n      <td id=\"T_59441_row3_col0\" class=\"data row3 col0\" >Mixed Nulls</td>\n      <td id=\"T_59441_row3_col1\" class=\"data row3 col1\" >Nothing found</td>\n    </tr>\n    <tr>\n      <td id=\"T_59441_row4_col0\" class=\"data row4 col0\" >Mixed Data Types</td>\n      <td id=\"T_59441_row4_col1\" class=\"data row4 col1\" >Nothing found</td>\n    </tr>\n    <tr>\n      <td id=\"T_59441_row5_col0\" class=\"data row5 col0\" >String Length Out Of Bounds</td>\n      <td id=\"T_59441_row5_col1\" class=\"data row5 col1\" >Nothing found</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "2785933039324010b41f9a82a50433d9": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "9ae89bbb72b7499198bced44f6f1b7f1": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "6c6586a164bd45628130074081e72242": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "cba8f404ff414cab89bf933ea9271992": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        }
      }
    }
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "2e3b74c5c14c4034848fd50d04120fe6"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

We can inspect the suite outputs and see that there are a few problems we'd like to fix.
We'll now fix them and check that they're resolved by re-running those specific checks.

.. GENERATED FROM PYTHON SOURCE LINES 85-88

Run a Single Check
-------------------
We can run a single check on a dataset, and see the results.

.. GENERATED FROM PYTHON SOURCE LINES 88-94

.. code-block:: default


    from deepchecks.tabular.checks import IsSingleValue, DataDuplicates

    # first let's see how the check runs:
    IsSingleValue().run(ds)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Value in Column</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
        <script>
            (!window.navigator.onLine ? alert('needs internet connection') : '');
        </script>
    </head>
    <body>
    
    <script src="" crossorigin="anonymous"></script>
    <script type="application/vnd.jupyter.widget-state+json">
    {
      "version_major": 2,
      "version_minor": 0,
      "state": {
        "ddb8be2d855441958d2c83ace0b25198": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "rendered_html",
              "jp-RenderedHTMLCommon",
              "jp-RenderedHTML",
              "jp-OutputArea-output"
            ],
            "children": [
              "IPY_MODEL_156a84e39e23445db7e19faeeafae389",
              "IPY_MODEL_59428c7057044bb8a6966176f3ff3bab",
              "IPY_MODEL_90b3e731e2b4481987af243c8b5c7349",
              "IPY_MODEL_c1d1e5bf7dce4081a421ae300097184b"
            ],
            "layout": "IPY_MODEL_c276ed9f88fe48c98db06cbdd03e37f9"
          }
        },
        "156a84e39e23445db7e19faeeafae389": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_125c66dd41eb416ba1514288cd654b46",
            "style": "IPY_MODEL_a3f9c75e15374b1e9b26aa976f361d81",
            "value": "<h4><b>Single Value in Column</b></h4>"
          }
        },
        "125c66dd41eb416ba1514288cd654b46": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "a3f9c75e15374b1e9b26aa976f361d81": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "59428c7057044bb8a6966176f3ff3bab": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_cb64c6f85a0a44449a5230d207d4efeb",
            "style": "IPY_MODEL_3ca86eb209ab4465a82e3f5a18e9ea7d",
            "value": "<p>Check if there are columns which have only a single unique value in all rows.</p>"
          }
        },
        "cb64c6f85a0a44449a5230d207d4efeb": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "3ca86eb209ab4465a82e3f5a18e9ea7d": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "90b3e731e2b4481987af243c8b5c7349": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_cb25b410bf2f417a93e941d6e2834044",
            "style": "IPY_MODEL_f0eb432c4edd420da90df70cdc4b677e"
          }
        },
        "cb25b410bf2f417a93e941d6e2834044": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "f0eb432c4edd420da90df70cdc4b677e": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "c1d1e5bf7dce4081a421ae300097184b": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "children": [
              "IPY_MODEL_ad74e561018b4a33ada41ad0a4536552",
              "IPY_MODEL_f443ecdeb07c4f2aa2a4cae149346658",
              "IPY_MODEL_dee117c442124354845a3246acf2338d"
            ],
            "layout": "IPY_MODEL_5aa7a028a20046dba874e76e574b7cc3"
          }
        },
        "ad74e561018b4a33ada41ad0a4536552": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_758d9a9bab5e467d96d4c92eb7b8833b",
            "style": "IPY_MODEL_cb065a4fd59546b4ac86aa8dd62d6443",
            "value": "<h5><b>Additional Outputs</b></h5>"
          }
        },
        "758d9a9bab5e467d96d4c92eb7b8833b": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "cb065a4fd59546b4ac86aa8dd62d6443": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "f443ecdeb07c4f2aa2a4cae149346658": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_4cb2be4efc6f451a9ccd5b8e49a1d8bb",
            "style": "IPY_MODEL_5a36d413415448af8212b0b2b2db788e",
            "value": "<div>The following columns have only one unique value</div>"
          }
        },
        "4cb2be4efc6f451a9ccd5b8e49a1d8bb": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "5a36d413415448af8212b0b2b2db788e": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "dee117c442124354845a3246acf2338d": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_5b0397b95bde4432801b95e423b9bf92",
            "style": "IPY_MODEL_593b74e0b9624e42b84eb7d6b3f3363c",
            "value": "<style type=\"text/css\">\n#T_e7572_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_e7572_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_e7572_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_e7572_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_e7572_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_e7572_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >Is Ripe</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_e7572_level0_row0\" class=\"row_heading level0 row0\" >Single unique value</th>\n      <td id=\"T_e7572_row0_col0\" class=\"data row0 col0\" >True</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "5b0397b95bde4432801b95e423b9bf92": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "593b74e0b9624e42b84eb7d6b3f3363c": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "5aa7a028a20046dba874e76e574b7cc3": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "c276ed9f88fe48c98db06cbdd03e37f9": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        }
      }
    }
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "ddb8be2d855441958d2c83ace0b25198"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 95-101

.. code-block:: default


    # we can also add a condition:
    single_value_with_condition = IsSingleValue().add_condition_not_single_value()
    result = single_value_with_condition.run(ds)
    result






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Value in Column</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
        <script>
            (!window.navigator.onLine ? alert('needs internet connection') : '');
        </script>
    </head>
    <body>
    
    <script src="" crossorigin="anonymous"></script>
    <script type="application/vnd.jupyter.widget-state+json">
    {
      "version_major": 2,
      "version_minor": 0,
      "state": {
        "c317b87b93344726bd165ea862d7629e": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "rendered_html",
              "jp-RenderedHTMLCommon",
              "jp-RenderedHTML",
              "jp-OutputArea-output"
            ],
            "children": [
              "IPY_MODEL_05d223102f0746b39b280cc13f3e84fc",
              "IPY_MODEL_67521df22948432b8eb3bb2a34fa8bd0",
              "IPY_MODEL_1a6cb75a60e241689cd399ee86c42b9c",
              "IPY_MODEL_257f42482ead431d8e7b44a618aa2371"
            ],
            "layout": "IPY_MODEL_d570ded2b5a04f078854108da7305d0d"
          }
        },
        "05d223102f0746b39b280cc13f3e84fc": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_806c3017687749629fd41f923b621b93",
            "style": "IPY_MODEL_a5df0a2f59324f10a7c7ee0f0c8fde37",
            "value": "<h4><b>Single Value in Column</b></h4>"
          }
        },
        "806c3017687749629fd41f923b621b93": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "a5df0a2f59324f10a7c7ee0f0c8fde37": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "67521df22948432b8eb3bb2a34fa8bd0": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_a30800bd8a454b25a2d00bf569ff0992",
            "style": "IPY_MODEL_8979203d6c05424a9fc278d3f7b0192c",
            "value": "<p>Check if there are columns which have only a single unique value in all rows.</p>"
          }
        },
        "a30800bd8a454b25a2d00bf569ff0992": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "8979203d6c05424a9fc278d3f7b0192c": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "1a6cb75a60e241689cd399ee86c42b9c": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_f0071bea692f42ae93686b63162d8faa",
            "style": "IPY_MODEL_27eee573fd6345b2b4f97f2d6fae7054",
            "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_78d91_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_78d91_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_78d91_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_78d91_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_78d91_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_78d91_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_78d91_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_78d91_row0_col1\" class=\"data row0 col1\" >Does not contain only a single value</td>\n      <td id=\"T_78d91_row0_col2\" class=\"data row0 col2\" >Found 1 out of 14 columns with a single value: ['Is Ripe']</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "f0071bea692f42ae93686b63162d8faa": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "27eee573fd6345b2b4f97f2d6fae7054": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "257f42482ead431d8e7b44a618aa2371": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "children": [
              "IPY_MODEL_8fc14124cc3a45ff98ca1f67ce66f7a6",
              "IPY_MODEL_9a3f95eef3e24475bd38b800e06ec23b",
              "IPY_MODEL_b19a6014c4ba4f068e40275221df0787"
            ],
            "layout": "IPY_MODEL_2ed0c11fbbfc4a8a8afdfdac5ed8d453"
          }
        },
        "8fc14124cc3a45ff98ca1f67ce66f7a6": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_9f5bf3838f634a129f9452d8366a2589",
            "style": "IPY_MODEL_64492a6b60374cae89ada49095174397",
            "value": "<h5><b>Additional Outputs</b></h5>"
          }
        },
        "9f5bf3838f634a129f9452d8366a2589": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "64492a6b60374cae89ada49095174397": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "9a3f95eef3e24475bd38b800e06ec23b": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_e3d845b7a7314441a24cf13f0900543e",
            "style": "IPY_MODEL_6f88139e12724839976212e585f031f3",
            "value": "<div>The following columns have only one unique value</div>"
          }
        },
        "e3d845b7a7314441a24cf13f0900543e": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "6f88139e12724839976212e585f031f3": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "b19a6014c4ba4f068e40275221df0787": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_c46e927bad594ed49a54afe79c85666c",
            "style": "IPY_MODEL_b9c8c4cf41e94d6099300db5a613b400",
            "value": "<style type=\"text/css\">\n#T_4f4ee_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_4f4ee_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_4f4ee_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_4f4ee_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_4f4ee_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_4f4ee_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >Is Ripe</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_4f4ee_level0_row0\" class=\"row_heading level0 row0\" >Single unique value</th>\n      <td id=\"T_4f4ee_row0_col0\" class=\"data row0 col0\" >True</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "c46e927bad594ed49a54afe79c85666c": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "b9c8c4cf41e94d6099300db5a613b400": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "2ed0c11fbbfc4a8a8afdfdac5ed8d453": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "d570ded2b5a04f078854108da7305d0d": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        }
      }
    }
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "c317b87b93344726bd165ea862d7629e"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 102-106

.. code-block:: default


    # We can also inspect and use the result's value:
    result.value





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    {'Date': 169, 'AveragePrice': 259, 'Total Volume': 18237, '4046': 17702, '4225': 18103, '4770': 12071, 'Total Bags': 18097, 'Small Bags': 17321, 'Large Bags': 15082, 'XLarge Bags': 5588, 'type': 4, 'year': 4, 'region': 54, 'Is Ripe': 1}



.. GENERATED FROM PYTHON SOURCE LINES 107-109

Now let's remove the single value column and rerun (notice that we're using directly 
the ``data`` attribute that stores the dataframe inside the Dataset)

.. GENERATED FROM PYTHON SOURCE LINES 109-114

.. code-block:: default


    ds.data.drop('Is Ripe', axis=1, inplace=True)
    result = single_value_with_condition.run(ds)
    result






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Value in Column</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
        <script>
            (!window.navigator.onLine ? alert('needs internet connection') : '');
        </script>
    </head>
    <body>
    
    <script src="" crossorigin="anonymous"></script>
    <script type="application/vnd.jupyter.widget-state+json">
    {
      "version_major": 2,
      "version_minor": 0,
      "state": {
        "b580b2ae187e4651b20c2081b5ae977a": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "rendered_html",
              "jp-RenderedHTMLCommon",
              "jp-RenderedHTML",
              "jp-OutputArea-output"
            ],
            "children": [
              "IPY_MODEL_7a3b898b5f5b46e584c8f2e1e3656705",
              "IPY_MODEL_5fc6650d86dc43ba947251c43c16748b",
              "IPY_MODEL_4aaff59e76e74013b7bd4c9996926808",
              "IPY_MODEL_8cd5de1d95d74ca4a444ee665b784631"
            ],
            "layout": "IPY_MODEL_5f2e9c9cbdaa49948a21759527ae43f7"
          }
        },
        "7a3b898b5f5b46e584c8f2e1e3656705": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_8f579b558611476b9992e3baf6ae55cf",
            "style": "IPY_MODEL_43c44d1860ce46609304826b1efb1e51",
            "value": "<h4><b>Single Value in Column</b></h4>"
          }
        },
        "8f579b558611476b9992e3baf6ae55cf": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "43c44d1860ce46609304826b1efb1e51": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "5fc6650d86dc43ba947251c43c16748b": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_db8832e2974d4b5cb296015bdbf30e8b",
            "style": "IPY_MODEL_6b5d52592e65417a926cb50ea1cd0756",
            "value": "<p>Check if there are columns which have only a single unique value in all rows.</p>"
          }
        },
        "db8832e2974d4b5cb296015bdbf30e8b": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "6b5d52592e65417a926cb50ea1cd0756": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "4aaff59e76e74013b7bd4c9996926808": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_261a6e04f0c14d209a7302bc5ef86a1b",
            "style": "IPY_MODEL_0d3218ba319a4bf083d04af0c6605f15",
            "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_eed47_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_eed47_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_eed47_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_eed47_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_eed47_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_eed47_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_eed47_row0_col0\" class=\"data row0 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_eed47_row0_col1\" class=\"data row0 col1\" >Does not contain only a single value</td>\n      <td id=\"T_eed47_row0_col2\" class=\"data row0 col2\" >Passed for 13 relevant columns</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "261a6e04f0c14d209a7302bc5ef86a1b": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "0d3218ba319a4bf083d04af0c6605f15": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "8cd5de1d95d74ca4a444ee665b784631": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "children": [
              "IPY_MODEL_e0faf696f76d49388c8a2013f1a8cde2",
              "IPY_MODEL_5400d643a2454ba28a86b37a3ddec11a"
            ],
            "layout": "IPY_MODEL_c0778669d9b944c380dbda1dbf7b89e0"
          }
        },
        "e0faf696f76d49388c8a2013f1a8cde2": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_06a3eee55f054f048e2cbf189172e882",
            "style": "IPY_MODEL_faee6c438ac647efbda36997a91bb237",
            "value": "<h5><b>Additional Outputs</b></h5>"
          }
        },
        "06a3eee55f054f048e2cbf189172e882": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "faee6c438ac647efbda36997a91bb237": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "5400d643a2454ba28a86b37a3ddec11a": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_717ec63fe5764181bb83962657077ea1",
            "style": "IPY_MODEL_59f05a4c88b04f97bf94e8a7eda6985e",
            "value": "<p><b>&#x2713;</b>Nothing to display</p>"
          }
        },
        "717ec63fe5764181bb83962657077ea1": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "59f05a4c88b04f97bf94e8a7eda6985e": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "c0778669d9b944c380dbda1dbf7b89e0": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "5f2e9c9cbdaa49948a21759527ae43f7": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        }
      }
    }
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "b580b2ae187e4651b20c2081b5ae977a"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 115-124

.. code-block:: default


    # Alternatively we can fix the dataframe directly, and create a new dataset.
    # Let's fix also the duplicate values:
    dirty_df.drop_duplicates(inplace=True)
    dirty_df.drop('Is Ripe', axis=1, inplace=True)
    ds = Dataset(dirty_df, cat_features=['type'], datetime_name='Date', label='AveragePrice')
    result = DataDuplicates().add_condition_ratio_not_greater_than(0).run(ds)
    result






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Data Duplicates</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
        <script>
            (!window.navigator.onLine ? alert('needs internet connection') : '');
        </script>
    </head>
    <body>
    
    <script src="" crossorigin="anonymous"></script>
    <script type="application/vnd.jupyter.widget-state+json">
    {
      "version_major": 2,
      "version_minor": 0,
      "state": {
        "5f2393f50bfe43dca99aff2b2ab60fa7": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "rendered_html",
              "jp-RenderedHTMLCommon",
              "jp-RenderedHTML",
              "jp-OutputArea-output"
            ],
            "children": [
              "IPY_MODEL_fa1aec4668ab4ad89761b9edce7ed8af",
              "IPY_MODEL_60685ba78fa0429a9dde1d9691f4d112",
              "IPY_MODEL_71b9b0b1727749e28676e323e6af129f",
              "IPY_MODEL_a597564ba488423e8ce8c7310765e4b7"
            ],
            "layout": "IPY_MODEL_898f8f7262264ff3902c30d97aa2a2f7"
          }
        },
        "fa1aec4668ab4ad89761b9edce7ed8af": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_df5ebc9003b445a7acc888efc432b09e",
            "style": "IPY_MODEL_7b4bf76cf0614b11ad7ce73fc75aa5ab",
            "value": "<h4><b>Data Duplicates</b></h4>"
          }
        },
        "df5ebc9003b445a7acc888efc432b09e": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "7b4bf76cf0614b11ad7ce73fc75aa5ab": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "60685ba78fa0429a9dde1d9691f4d112": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_62d8d413930b4beebf9d725b6aaf266a",
            "style": "IPY_MODEL_79192a0d13414d8baaac529b895ff875",
            "value": "<p>Checks for duplicate samples in the dataset.</p>"
          }
        },
        "62d8d413930b4beebf9d725b6aaf266a": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "79192a0d13414d8baaac529b895ff875": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "71b9b0b1727749e28676e323e6af129f": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_dd39a28fea5e48f5a0c99a0d3dd29978",
            "style": "IPY_MODEL_cad4f36c5c6447c5b78d0bb2834694fb",
            "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_74162_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_74162_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_74162_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_74162_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_74162_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_74162_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_74162_row0_col0\" class=\"data row0 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_74162_row0_col1\" class=\"data row0 col1\" >Duplicate data ratio is not greater than 0%</td>\n      <td id=\"T_74162_row0_col2\" class=\"data row0 col2\" >Found 0% duplicate data</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "dd39a28fea5e48f5a0c99a0d3dd29978": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "cad4f36c5c6447c5b78d0bb2834694fb": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "a597564ba488423e8ce8c7310765e4b7": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "children": [
              "IPY_MODEL_f622bff7806940aea032ee1fc84fc900",
              "IPY_MODEL_0c8f2b28fcd145bba0ebb169ea60c639"
            ],
            "layout": "IPY_MODEL_224af5fb13d04cadbd08f6b09b20a973"
          }
        },
        "f622bff7806940aea032ee1fc84fc900": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_3d03a8847bf04ac79f4919b9dc56c7f8",
            "style": "IPY_MODEL_ad9ce3edf2e54d52a0cf44806fc73abb",
            "value": "<h5><b>Additional Outputs</b></h5>"
          }
        },
        "3d03a8847bf04ac79f4919b9dc56c7f8": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "ad9ce3edf2e54d52a0cf44806fc73abb": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "0c8f2b28fcd145bba0ebb169ea60c639": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_fbd4cb2e3f584655bf2995af37e60210",
            "style": "IPY_MODEL_1eff181e05c3413dade565385bd7038f",
            "value": "<p><b>&#x2713;</b>Nothing to display</p>"
          }
        },
        "fbd4cb2e3f584655bf2995af37e60210": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "1eff181e05c3413dade565385bd7038f": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "224af5fb13d04cadbd08f6b09b20a973": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "898f8f7262264ff3902c30d97aa2a2f7": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        }
      }
    }
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "5f2393f50bfe43dca99aff2b2ab60fa7"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 125-131

Rerun Suite on the Fixed Dataset
---------------------------------
Finally, we'll choose to keep the "organic" multiple spellings as they represent different sources.
So we'll customaize the suite by removing the condition from it (or delete check completely).
Alternatively - we can customize it by creating a new Suite with the desired checks and conditions.
See :doc:`/user-guide/general/customizations/examples/customizing-suites` for more info.

.. GENERATED FROM PYTHON SOURCE LINES 131-135

.. code-block:: default


    # let's inspect the suite's structure
    integ_suite





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Data Integrity Suite: [
    	0: IsSingleValue
    		Conditions:
    			0: Does not contain only a single value
    	1: SpecialCharacters
    		Conditions:
    			0: Ratio of entirely special character samples not greater than 0.1%
    	2: MixedNulls
    		Conditions:
    			0: Not more than 1 different null types
    	3: MixedDataTypes
    		Conditions:
    			0: Rare data types in column are either more than 10% or less than 1% of the data
    	4: StringMismatch
    		Conditions:
    			0: No string variants
    	5: DataDuplicates
    		Conditions:
    			0: Duplicate data ratio is not greater than 0%
    	6: StringLengthOutOfBounds
    		Conditions:
    			0: Ratio of outliers not greater than 0% string length outliers
    	7: ConflictingLabels
    		Conditions:
    			0: Ambiguous sample ratio is not greater than 0%
    	8: OutlierSampleDetection
    	9: FeatureLabelCorrelation(ppscore_params={})
    		Conditions:
    			0: Features' Predictive Power Score is not greater than 0.8
    ]



.. GENERATED FROM PYTHON SOURCE LINES 136-140

.. code-block:: default


    # and remove the condition:
    integ_suite[3].clean_conditions()








.. GENERATED FROM PYTHON SOURCE LINES 141-142

Now we can re-run the suite using:

.. GENERATED FROM PYTHON SOURCE LINES 142-144

.. code-block:: default

    res = integ_suite.run(ds)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Data Integrity Suite:
    |          | 0/10 [00:00<?, ? Check/s]    Data Integrity Suite:
    |###       | 3/10 [00:00<00:00, 20.55 Check/s, Check=Mixed Nulls]    Data Integrity Suite:
    |######    | 6/10 [00:00<00:00, 23.90 Check/s, Check=Data Duplicates]    Data Integrity Suite:
    |######### | 9/10 [00:02<00:00,  2.66 Check/s, Check=Outlier Sample Detection]                                                                                                    



.. GENERATED FROM PYTHON SOURCE LINES 145-154

and all of the conditions will pass.

*Note: the check we manipulated will still run as part of the Suite, however
it won't appear in the Conditions Summary since it no longer has any
conditions defined on it. You can still see its display results in the 
Additional Outputs section*

For more info about working with conditions, see the detailed
:doc:`/user-guide/general/customizations/examples/plot_configure_checks_conditions' guide.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  6.196 seconds)


.. _sphx_glr_download_user-guide_tabular_auto_tutorials_plot_quick_data_integrity.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_quick_data_integrity.py <plot_quick_data_integrity.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_quick_data_integrity.ipynb <plot_quick_data_integrity.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
