
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "general/usage/customizations/auto_examples/plot_configure_check_conditions.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_general_usage_customizations_auto_examples_plot_configure_check_conditions.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_general_usage_customizations_auto_examples_plot_configure_check_conditions.py:


.. _configure_check_conditions:

Configure Check Conditions
**************************

The following guide includes different options for configuring a check's condition(s):

* `Add Condition <#add-condition>`__
* `Remove / Edit a Condition <#remove-edit-a-condition>`__
* `Add a Custom Condition <#add-a-custom-condition>`__
* `Set Custom Condition Category <#set-custom-condition-category>`__

Add Condition
=============
In order to add a condition to an existing check, we can use any of the pre-defined
conditions for that check. The naming convention for the methods that add the
condition is ``add_condition_...``.

If you want to create and add your custom condition logic for parsing the check's
result value, see `Add a Custom Condition <#add-a-custom-condition>`__.

.. GENERATED FROM PYTHON SOURCE LINES 27-29

Add a condition to a new check
------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 29-35

.. code-block:: default


    from deepchecks.tabular.checks import DatasetsSizeComparison

    check = DatasetsSizeComparison().add_condition_test_size_greater_or_equal(1000)
    check





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    DatasetsSizeComparison
    	Conditions:
    		0: Test dataset size is greater or equal to 1000



.. GENERATED FROM PYTHON SOURCE LINES 36-40

Conditions are used mainly in the context of a Suite, and displayed in the
Conditions Summary table. For example how to run in a suite you can look at
`Add a Custom Condition <#add-a-custom-condition>`__ or if you would like to
run the conditions outside of suite you can execute:

.. GENERATED FROM PYTHON SOURCE LINES 40-52

.. code-block:: default


    import pandas as pd

    from deepchecks.tabular import Dataset

    # Dummy data
    train_dataset = Dataset(pd.DataFrame(data={'x': [1,2,3,4,5,6,7,8,9]}))
    test_dataset = Dataset(pd.DataFrame(data={'x': [1,2,3]}))

    condition_results = check.conditions_decision(check.run(train_dataset, test_dataset))
    condition_results





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    [{'details': 'Test dataset contains 3 samples', 'category': <ConditionCategory.FAIL: 'FAIL'>, 'name': 'Test dataset size is greater or equal to 1000'}]



.. GENERATED FROM PYTHON SOURCE LINES 53-63

Add a condition to a check in a suite
-------------------------------------
If we want to add a conditon to a check within an existing suite, we should first
find the Check's ID within the suite, and then add the condition to it, by running
the relevant ``add_condition_`` method on that check's instance. See the next section
to understand how to do so.

The condition will then be appended to the list of conditions on that check (or be
the first one if no conditions are defined), and each condition will be evaluated
separately when running the suite.

.. GENERATED FROM PYTHON SOURCE LINES 65-73

Remove / Edit a Condition
=========================
Deepchecks provides different kinds of default suites, which come with pre-defined
conditions. You may want to remove a condition in case it isn't needed for you, or
you may want to change the condition's parameters (since conditions functions are immutable).

To remove a condition, start by printing the Suite and identifing the Check's ID,
and the Condition's ID:

.. GENERATED FROM PYTHON SOURCE LINES 73-79

.. code-block:: default


    from deepchecks.tabular.suites import train_test_validation

    suite = train_test_validation()
    suite





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Train Test Validation Suite: [
    	0: DatasetsSizeComparison
    		Conditions:
    			0: Test-Train size ratio is greater than 0.01
    	1: NewLabelTrainTest
    		Conditions:
    			0: Number of new label values is less or equal to 0
    	2: NewCategoryTrainTest
    		Conditions:
    			0: Ratio of samples with a new category is less or equal to 0%
    	3: StringMismatchComparison
    		Conditions:
    			0: No new variants allowed in test data
    	4: DateTrainTestLeakageDuplicates
    		Conditions:
    			0: Date leakage ratio is less or equal to 0%
    	5: DateTrainTestLeakageOverlap
    		Conditions:
    			0: Date leakage ratio is less or equal to 0%
    	6: IndexTrainTestLeakage
    		Conditions:
    			0: Ratio of leaking indices is less or equal to 0%
    	7: TrainTestSamplesMix(n_to_show=5)
    		Conditions:
    			0: Percentage of test data samples that appear in train data is less or equal to 10%
    	8: FeatureLabelCorrelationChange(ppscore_params={}, random_state=42)
    		Conditions:
    			0: Train-Test features' Predictive Power Score difference is less than 0.2
    			1: Train features' Predictive Power Score is less than 0.7
    	9: FeatureDrift
    		Conditions:
    			0: categorical drift score < 0.2 and numerical drift score < 0.2
    	10: LabelDrift
    		Conditions:
    			0: Label drift score < 0.15
    	11: MultivariateDrift
    		Conditions:
    			0: Drift value is less than 0.25
    ]



.. GENERATED FROM PYTHON SOURCE LINES 80-81

After we found the IDs we can remove the Condition:

.. GENERATED FROM PYTHON SOURCE LINES 81-89

.. code-block:: default


    # Access check by id
    check = suite[8]
    # Remove condition by id
    check.remove_condition(0)

    suite





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Train Test Validation Suite: [
    	0: DatasetsSizeComparison
    		Conditions:
    			0: Test-Train size ratio is greater than 0.01
    	1: NewLabelTrainTest
    		Conditions:
    			0: Number of new label values is less or equal to 0
    	2: NewCategoryTrainTest
    		Conditions:
    			0: Ratio of samples with a new category is less or equal to 0%
    	3: StringMismatchComparison
    		Conditions:
    			0: No new variants allowed in test data
    	4: DateTrainTestLeakageDuplicates
    		Conditions:
    			0: Date leakage ratio is less or equal to 0%
    	5: DateTrainTestLeakageOverlap
    		Conditions:
    			0: Date leakage ratio is less or equal to 0%
    	6: IndexTrainTestLeakage
    		Conditions:
    			0: Ratio of leaking indices is less or equal to 0%
    	7: TrainTestSamplesMix(n_to_show=5)
    		Conditions:
    			0: Percentage of test data samples that appear in train data is less or equal to 10%
    	8: FeatureLabelCorrelationChange(ppscore_params={}, random_state=42)
    		Conditions:
    			1: Train features' Predictive Power Score is less than 0.7
    	9: FeatureDrift
    		Conditions:
    			0: categorical drift score < 0.2 and numerical drift score < 0.2
    	10: LabelDrift
    		Conditions:
    			0: Label drift score < 0.15
    	11: MultivariateDrift
    		Conditions:
    			0: Drift value is less than 0.25
    ]



.. GENERATED FROM PYTHON SOURCE LINES 90-92

Now if we want we can also re-add the Condition using the built-in methods on the check,
with a different parameter.

.. GENERATED FROM PYTHON SOURCE LINES 92-98

.. code-block:: default


    # Re-add the condition with new parameter
    check.add_condition_feature_pps_difference_less_than(0.01)

    suite





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Train Test Validation Suite: [
    	0: DatasetsSizeComparison
    		Conditions:
    			0: Test-Train size ratio is greater than 0.01
    	1: NewLabelTrainTest
    		Conditions:
    			0: Number of new label values is less or equal to 0
    	2: NewCategoryTrainTest
    		Conditions:
    			0: Ratio of samples with a new category is less or equal to 0%
    	3: StringMismatchComparison
    		Conditions:
    			0: No new variants allowed in test data
    	4: DateTrainTestLeakageDuplicates
    		Conditions:
    			0: Date leakage ratio is less or equal to 0%
    	5: DateTrainTestLeakageOverlap
    		Conditions:
    			0: Date leakage ratio is less or equal to 0%
    	6: IndexTrainTestLeakage
    		Conditions:
    			0: Ratio of leaking indices is less or equal to 0%
    	7: TrainTestSamplesMix(n_to_show=5)
    		Conditions:
    			0: Percentage of test data samples that appear in train data is less or equal to 10%
    	8: FeatureLabelCorrelationChange(ppscore_params={}, random_state=42)
    		Conditions:
    			1: Train features' Predictive Power Score is less than 0.7
    			2: Train-Test features' Predictive Power Score difference is less than 0.01
    	9: FeatureDrift
    		Conditions:
    			0: categorical drift score < 0.2 and numerical drift score < 0.2
    	10: LabelDrift
    		Conditions:
    			0: Label drift score < 0.15
    	11: MultivariateDrift
    		Conditions:
    			0: Drift value is less than 0.25
    ]



.. GENERATED FROM PYTHON SOURCE LINES 99-105

Add a Custom Condition
======================
In order to write conditions we first have to know what value a given check produces.

Let's look at the check ``DatasetsSizeComparison`` and see it's return value in
order to write a condition for it.

.. GENERATED FROM PYTHON SOURCE LINES 105-118

.. code-block:: default


    import pandas as pd

    from deepchecks.tabular import Dataset
    from deepchecks.tabular.checks import DatasetsSizeComparison

    # We'll use dummy data for the purpose of this demonstration
    train_dataset = Dataset(pd.DataFrame(data={'x': [1,2,3,4,5,6,7,8,9]}))
    test_dataset = Dataset(pd.DataFrame(data={'x': [1,2,3]}))

    result = DatasetsSizeComparison().run(train_dataset, test_dataset)
    result.value





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    {'Train': 9, 'Test': 3}



.. GENERATED FROM PYTHON SOURCE LINES 119-129

Now we know what the return value looks like. Let's add a new condition that validates
that the ratio between the train and test datasets size is inside a given range. To
create condition we need to use the ``add_condition`` method of the check which accepts
a condition name and a function. This function receives the value of the ``CheckResult``
that we saw above and should return either a boolean or a ``ConditionResult`` containing
a boolean and optional extra info that will be displayed in the Conditions Summary table.

*Note: When implementing a condition in a custom check, you may want to add a method
``add_condition_x()`` to allow any consumer of your check to apply the condition
(possibly with given parameters). For examples look at implemented Checks' source code*

.. GENERATED FROM PYTHON SOURCE LINES 129-151

.. code-block:: default


    from deepchecks.core import ConditionResult

    # Our parameters for the condition
    low_threshold = 0.4
    high_threshold = 0.6

    # Create the condition function
    def custom_condition(value: dict, low=low_threshold, high=high_threshold): 
        ratio = value['Test'] / value['Train']
        if low <= ratio <= high:
            return ConditionResult(ConditionCategory.PASS)
        else:
            # Note: if you doesn't care about the extra info, you can return directly a boolean
            return ConditionResult(ConditionCategory.FAIL, f'Test-Train ratio is {ratio:.2}')

    # Create the condition name
    condition_name = f'Test-Train ratio is between {low_threshold} to {high_threshold}'

    # Create check instance with the condition 
    check = DatasetsSizeComparison().add_condition(condition_name, custom_condition)








.. GENERATED FROM PYTHON SOURCE LINES 152-155

Now we will use a Suite to demonstrate the action of the condition, since the suite
runs the condition for us automatically and prints out a Conditions Summary table
(for all the conditions defined on the checks within the suite):

.. GENERATED FROM PYTHON SOURCE LINES 155-165

.. code-block:: default


    from deepchecks.tabular import Suite

    # Using suite to run check & condition
    suite = Suite('Suite for Condition',
        check
    )

    suite.run(train_dataset, test_dataset)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Suite for Condition:
    |     | 0/1 [Time: 00:00]                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2023 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Suite for Condition</title>
        <link rel="icon" type="image/x-icon" href="https://deepchecks.com/wp-content/themes/deepchecks/assets/favicons/favicon.ico">
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"78b8426dc0a84560b6fe0bf6181cca2b": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "_titles": {"0": "Suite for Condition"}, "children": ["IPY_MODEL_6ee9bf73e3264793bcfaaf7a251c374d"], "layout": "IPY_MODEL_cb8398b4fc4f4c7ab72dcb0fb0855147"}}, "6ee9bf73e3264793bcfaaf7a251c374d": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_adf4fc454cd84eb3bd87d43787c3de50", "IPY_MODEL_fd51f9cb0c6c484787c60390325d7fa7", "IPY_MODEL_5e27fc70c62c4f3e98f5408b6c5a78da", "IPY_MODEL_b9a91eaf0e1c47818ee2a908a5d32bd0", "IPY_MODEL_ef1668962e1049ff863324ab8c12e019"], "layout": "IPY_MODEL_9b5030f252954a23a43052645fd9a827"}}, "adf4fc454cd84eb3bd87d43787c3de50": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_752b73f322c54ab68d6d9ab9c37d9706", "style": "IPY_MODEL_0c1deade32ea4d8a9ea06d138cca25ea", "value": "\n<h1 id=\"summary_8FUKVUMAOTNSTA267ZT3SW15R\">Suite for Condition</h1>\n<p>\n    The suite is composed of the following checks: Datasets Size Comparison.<br>\n    Each check may contain conditions (which will result in pass <span style=\"color: green;display:inline-block\">\u2713</span> /\n    fail <span style=\"color: red;display:inline-block\">\u2716</span> / warning <span style=\"color: orange;font-weight:bold;display:inline-block\">!</span> / error <span style=\"color: firebrick;font-weight:bold;display:inline-block\">\u2048</span>) as well as\n    other outputs such as plots or tables.<br>\n    Suites, checks and conditions can all be modified. Read more about\n    <a href=https://docs.deepchecks.com/stable/general/usage/customizations/auto_examples/plot_create_a_custom_suite.html?utm_source=display_output&utm_medium=referral&utm_campaign=suite_link target=\"_blank\">custom suites</a>.\n</p>\n\n"}}, "752b73f322c54ab68d6d9ab9c37d9706": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "0c1deade32ea4d8a9ea06d138cca25ea": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "fd51f9cb0c6c484787c60390325d7fa7": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_254e3763e57148afb6c251f56f63c9a4", "IPY_MODEL_de2cf0c05342453692d14157222dda46"], "layout": "IPY_MODEL_a49aca39ad1245fea6b3414e58993431"}}, "254e3763e57148afb6c251f56f63c9a4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c9dab9d83a64415d8e3a34eecc222514", "style": "IPY_MODEL_e89846461b4a43c9bc16e504defc3910", "value": "<span id=\"summary_8FUKVUMAOTNSTA267ZT3SW15R-section-OEJ2P\"></span>"}}, "c9dab9d83a64415d8e3a34eecc222514": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e89846461b4a43c9bc16e504defc3910": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "de2cf0c05342453692d14157222dda46": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "_titles": {"0": "Didn't Pass"}, "children": ["IPY_MODEL_64b062646c1e450ca48324c13865f9f2"], "layout": "IPY_MODEL_9454c1d328964472b40f375613b7b503", "selected_index": null}}, "64b062646c1e450ca48324c13865f9f2": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_586ebc6769954dc98c66ee3ad6c4245d", "IPY_MODEL_344a8e1e277244fb9c032f27256d1f18", "IPY_MODEL_802fd2c7c5ad409b857ffd9a4b2195fe"], "layout": "IPY_MODEL_77398849045149dcaedacb81b676eac7"}}, "586ebc6769954dc98c66ee3ad6c4245d": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_f8ea052b6dd9475a83ea0f8804a73c94", "style": "IPY_MODEL_af5cf40c07254e019f8cbf4af014aaf1", "value": "<style type=\"text/css\">\n#T_51cbc_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_51cbc_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_51cbc_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_51cbc_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_51cbc_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_51cbc_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Check</th>\n      <th class=\"col_heading level0 col2\" >Condition</th>\n      <th class=\"col_heading level0 col3\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_51cbc_row0_col0\" class=\"data row0 col0\" ><div style=\"color: firebrick;text-align: center;font-weight:bold\">\u2048</div></td>\n      <td id=\"T_51cbc_row0_col1\" class=\"data row0 col1\" ><a href=\"#DatasetsSizeComparison_8FUKVUMAOTNSTA267ZT3SW15R-section-OEJ2P\">Datasets Size Comparison</a></td>\n      <td id=\"T_51cbc_row0_col2\" class=\"data row0 col2\" >Test-Train ratio is between 0.4 to 0.6</td>\n      <td id=\"T_51cbc_row0_col3\" class=\"data row0 col3\" >Exception in condition: NameError: name 'ConditionCategory' is not defined</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "f8ea052b6dd9475a83ea0f8804a73c94": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "af5cf40c07254e019f8cbf4af014aaf1": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "344a8e1e277244fb9c032f27256d1f18": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_a3cf40b9daf747d5aa6b3782b7ebf8f8", "style": "IPY_MODEL_5d75e16a35884eac989ef9bde0f3ea5b", "value": "<hr style=\"background-color: #eee;border: 0 none;color: #eee;height: 4px;\">"}}, "a3cf40b9daf747d5aa6b3782b7ebf8f8": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "5d75e16a35884eac989ef9bde0f3ea5b": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "802fd2c7c5ad409b857ffd9a4b2195fe": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_b89b2fb9b2984cfe9edc0af7d8799088", "IPY_MODEL_33502ed61a494610b1c820fd771c02d9", "IPY_MODEL_7114a89bcd8d4458ba4d4a997dc6a6d7", "IPY_MODEL_acfc6856fc314bb0a4428b6634f6150a"], "layout": "IPY_MODEL_c7f0ab1bea1640f385273130f484b982"}}, "b89b2fb9b2984cfe9edc0af7d8799088": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_2029097356284f80ba679bcf2d36e8d2", "style": "IPY_MODEL_8f0bb63a5671483fb7dd70929fd7e9cd", "value": "<h4 id=\"DatasetsSizeComparison_8FUKVUMAOTNSTA267ZT3SW15R-section-OEJ2P\"><b>Datasets Size Comparison</b></h4>"}}, "2029097356284f80ba679bcf2d36e8d2": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "8f0bb63a5671483fb7dd70929fd7e9cd": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "33502ed61a494610b1c820fd771c02d9": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_b5c111201ca74450a677ab0872876c6e", "style": "IPY_MODEL_5db834040be04b89b4729de2cfa9a2c3", "value": "<p>Verify test dataset size comparing it to the train dataset size. <a href=\"https://docs.deepchecks.com/0.14/tabular/auto_checks/train_test_validation/plot_datasets_size_comparison.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "b5c111201ca74450a677ab0872876c6e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "5db834040be04b89b4729de2cfa9a2c3": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "7114a89bcd8d4458ba4d4a997dc6a6d7": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6cf61a3c9dcb43ca9b4fac7fc774c0e7", "style": "IPY_MODEL_33472fa9f7924005a1e3853c7448b573", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_b338e_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_b338e_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_b338e_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_b338e_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_b338e_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_b338e_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_b338e_row0_col0\" class=\"data row0 col0\" ><div style=\"color: firebrick;text-align: center;font-weight:bold\">\u2048</div></td>\n      <td id=\"T_b338e_row0_col1\" class=\"data row0 col1\" >Test-Train ratio is between 0.4 to 0.6</td>\n      <td id=\"T_b338e_row0_col2\" class=\"data row0 col2\" >Exception in condition: NameError: name 'ConditionCategory' is not defined</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "6cf61a3c9dcb43ca9b4fac7fc774c0e7": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "33472fa9f7924005a1e3853c7448b573": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "acfc6856fc314bb0a4428b6634f6150a": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_9b0703c006794dff93ccef0397caa0df", "IPY_MODEL_8a3e9b7eb4914d6292b0437c272de656", "IPY_MODEL_57f6e98486c541d1bd3131d43a623772"], "layout": "IPY_MODEL_9597269e932c44128d43d2601044c4bf"}}, "9b0703c006794dff93ccef0397caa0df": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_7a281fd6c96d4e5f91f72699f34455e4", "style": "IPY_MODEL_c0f948d660564b4aad2e8cb30ec63b25", "value": "<h5><b>Additional Outputs</b></h5>"}}, "7a281fd6c96d4e5f91f72699f34455e4": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "c0f948d660564b4aad2e8cb30ec63b25": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "8a3e9b7eb4914d6292b0437c272de656": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_cad725d8d9b34de0bb06132288bfb1b2", "style": "IPY_MODEL_d3a36310e39f4570a588fddb9e60da95", "value": "<style type=\"text/css\">\n#T_bcae2_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_bcae2_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_bcae2_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_bcae2_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_bcae2_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_bcae2_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >Train</th>\n      <th class=\"col_heading level0 col1\" >Test</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_bcae2_level0_row0\" class=\"row_heading level0 row0\" >Size</th>\n      <td id=\"T_bcae2_row0_col0\" class=\"data row0 col0\" >9</td>\n      <td id=\"T_bcae2_row0_col1\" class=\"data row0 col1\" >3</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "cad725d8d9b34de0bb06132288bfb1b2": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d3a36310e39f4570a588fddb9e60da95": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "57f6e98486c541d1bd3131d43a623772": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_97132f55536b4725b8162b2ec7b67125", "style": "IPY_MODEL_29d2eab1a4804350ae5a00baec347c9c", "value": "<br><a href=\"#summary_8FUKVUMAOTNSTA267ZT3SW15R-section-OEJ2P\" style=\"font-size: 14px;\">Go to top</a>"}}, "97132f55536b4725b8162b2ec7b67125": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "29d2eab1a4804350ae5a00baec347c9c": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "9597269e932c44128d43d2601044c4bf": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "c7f0ab1bea1640f385273130f484b982": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "77398849045149dcaedacb81b676eac7": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9454c1d328964472b40f375613b7b503": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a49aca39ad1245fea6b3414e58993431": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "5e27fc70c62c4f3e98f5408b6c5a78da": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_bb136930e0584933832d337192c42f6d", "IPY_MODEL_d16e9af2b90e469bbdd1b452167a0903"], "layout": "IPY_MODEL_567e8e2a88f74c59b04e574d7885a8e4"}}, "bb136930e0584933832d337192c42f6d": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_706977f3b19547cf872457e05111cb01", "style": "IPY_MODEL_624e90fc8ff64caa8b81dd3f8cee1fda"}}, "706977f3b19547cf872457e05111cb01": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "624e90fc8ff64caa8b81dd3f8cee1fda": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "d16e9af2b90e469bbdd1b452167a0903": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "_titles": {"0": "Passed"}, "children": ["IPY_MODEL_63d98a4216a54b309aa253029ef6cc0a"], "layout": "IPY_MODEL_3f223f811c9f4b0ebe5a4e391eac0ab4", "selected_index": null}}, "63d98a4216a54b309aa253029ef6cc0a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_f6de65e366f542168f218ebdb89fc711", "style": "IPY_MODEL_868f033d581342b2a5c63d938790fba0", "value": "<p>No outputs to show.</p>"}}, "f6de65e366f542168f218ebdb89fc711": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "868f033d581342b2a5c63d938790fba0": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "3f223f811c9f4b0ebe5a4e391eac0ab4": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "567e8e2a88f74c59b04e574d7885a8e4": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b9a91eaf0e1c47818ee2a908a5d32bd0": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_1400f5eaa4cd4e0aa9790d4e1a3bc770", "IPY_MODEL_02d27920a6284a189bbf98fc1f3cff6c"], "layout": "IPY_MODEL_5c98902f0ff14ea09a1aae3ccc525115"}}, "1400f5eaa4cd4e0aa9790d4e1a3bc770": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_e31e2fc8141c4557944b09f3c2d035fb", "style": "IPY_MODEL_44c434dc89194fd9bc8beb36e9eda4d3"}}, "e31e2fc8141c4557944b09f3c2d035fb": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "44c434dc89194fd9bc8beb36e9eda4d3": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "02d27920a6284a189bbf98fc1f3cff6c": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "_titles": {"0": "Other"}, "children": ["IPY_MODEL_cff9631d8c7e40459fdd0e24775dd19b"], "layout": "IPY_MODEL_f766691b1f86406b89002bfbf1f8dcf1", "selected_index": null}}, "cff9631d8c7e40459fdd0e24775dd19b": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_609b74d5f85c4c9882a989522a6bccb7", "style": "IPY_MODEL_2aad047c359a48ac8b5b50430b99d732", "value": "<p>No outputs to show.</p>"}}, "609b74d5f85c4c9882a989522a6bccb7": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "2aad047c359a48ac8b5b50430b99d732": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "f766691b1f86406b89002bfbf1f8dcf1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "5c98902f0ff14ea09a1aae3ccc525115": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ef1668962e1049ff863324ab8c12e019": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_9cf99e8e583f43cbbc55a1c62a496a87", "IPY_MODEL_bddef48eb9dc4c88960c8aa00773a4af"], "layout": "IPY_MODEL_d0fc133a85054e3cbe7b598952a20d49"}}, "9cf99e8e583f43cbbc55a1c62a496a87": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_fb7080ef7d1348edadc9756b603dca65", "style": "IPY_MODEL_92a7bf8facdf46db81f23a5d79110063"}}, "fb7080ef7d1348edadc9756b603dca65": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "92a7bf8facdf46db81f23a5d79110063": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "bddef48eb9dc4c88960c8aa00773a4af": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "_titles": {"0": "Didn't Run"}, "children": ["IPY_MODEL_c900ac4dacce4e9687f9096e4cf3ee88"], "layout": "IPY_MODEL_54d0973ee371488aa85081360125e5f7", "selected_index": null}}, "c900ac4dacce4e9687f9096e4cf3ee88": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_2ea2d2f39e96469caef06de3bb8475fe", "style": "IPY_MODEL_b9b7e733f96644f1a6d86eb2dd278869", "value": "<p>No outputs to show.</p>"}}, "2ea2d2f39e96469caef06de3bb8475fe": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b9b7e733f96644f1a6d86eb2dd278869": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "54d0973ee371488aa85081360125e5f7": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d0fc133a85054e3cbe7b598952a20d49": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9b5030f252954a23a43052645fd9a827": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "cb8398b4fc4f4c7ab72dcb0fb0855147": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "78b8426dc0a84560b6fe0bf6181cca2b"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 166-171

Set Custom Condition Category
=============================
When writing your own condition logic, you can decide to mark a condition result
as either fail or warn, by passing the category to the ConditionResult object.
For example we can even write condition which sets the category based on severity of the result:

.. GENERATED FROM PYTHON SOURCE LINES 171-187

.. code-block:: default


    from deepchecks.core import ConditionCategory, ConditionResult

    # Our parameters for the condition
    low_threshold = 0.3
    high_threshold = 0.7

    # Create the condition function for check `DatasetsSizeComparison`
    def custom_condition(value: dict): 
        ratio = value['Test'] / value['Train']
        if low_threshold <= ratio <= high_threshold:
            return ConditionResult(ConditionCategory.PASS)
        elif ratio < low_threshold:
            return ConditionResult(ConditionCategory.FAIL, f'Test-Train ratio is {ratio:.2}', ConditionCategory.FAIL)
        else:
            return ConditionResult(ConditionCategory.FAIL, f'Test-Train ratio is {ratio:.2}', ConditionCategory.WARN)








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.524 seconds)


.. _sphx_glr_download_general_usage_customizations_auto_examples_plot_configure_check_conditions.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_configure_check_conditions.py <plot_configure_check_conditions.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_configure_check_conditions.ipynb <plot_configure_check_conditions.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
