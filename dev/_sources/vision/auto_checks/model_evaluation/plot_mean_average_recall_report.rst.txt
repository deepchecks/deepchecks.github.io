
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "vision/auto_checks/model_evaluation/plot_mean_average_recall_report.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_vision_auto_checks_model_evaluation_plot_mean_average_recall_report.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_vision_auto_checks_model_evaluation_plot_mean_average_recall_report.py:


.. _vision__mean_average_recall_report:

Mean Average Recall Report
**************************

This notebooks provides an overview for using and understanding the mean average recall report check.

**Structure:**

* `What is the purpose of the check? <#what-is-the-purpose-of-the-check>`__
* `Generate Dataset <#generate-dataset>`__
* `Run the check <#run-the-check>`__
* `Define a condition <#define-a-condition>`__

What is the purpose of the check?
=================================
The Mean Average Recall Report evaluates the
`mAR metric <https://manalelaidouni.github.io/Evaluating-Object-Detection-Models-Guide-to-Performance-Metrics.html>`__
on the given model and data, and returns the mAR values per bounding box size category (small, medium, large).
This check only works on the Object Detection task.

.. GENERATED FROM PYTHON SOURCE LINES 26-34

Imports
-------

.. note::
  In this example, we use the pytorch version of the coco dataset and model. In order to run this example using
  tensorflow, please change the import statements to::

      from deepchecks.vision.datasets.detection import coco_tensorflow as coco

.. GENERATED FROM PYTHON SOURCE LINES 34-38

.. code-block:: default


    from deepchecks.vision.checks import MeanAverageRecallReport
    from deepchecks.vision.datasets.detection import coco_torch as coco








.. GENERATED FROM PYTHON SOURCE LINES 39-46

Generate Dataset
----------------
We generate a sample dataset of 128 images from the `COCO dataset <https://cocodataset.org/#home>`__,
and using the `YOLOv5 model <https://github.com/ultralytics/yolov5>`__.

For the label formatter - our dataset returns exactly the accepted format, so our
formatting function is the simple `lambda x: x` function.

.. GENERATED FROM PYTHON SOURCE LINES 46-49

.. code-block:: default


    test_ds = coco.load_dataset(train=False, object_type='VisionData')








.. GENERATED FROM PYTHON SOURCE LINES 50-52

Run the check
-------------

.. GENERATED FROM PYTHON SOURCE LINES 52-57

.. code-block:: default


    check = MeanAverageRecallReport()
    result = check.run(test_ds)
    result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Processing Batches:
    |     | 0/1 [Time: 00:00]    Processing Batches:
    |█████| 1/1 [Time: 00:00]    Processing Batches:
    |█████| 1/1 [Time: 00:00]
    Computing Check:
    |     | 0/1 [Time: 00:00]
    Computing Check:
    |█████| 1/1 [Time: 00:00]
    Computing Check:
    |█████| 1/1 [Time: 00:00]                                             
                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2023 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Mean Average Recall Report</title>
        <link rel="icon" type="image/x-icon" href="https://deepchecks.com/wp-content/themes/deepchecks/assets/favicons/favicon.ico">
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"5e8d61e465e548cf819122b20e37f0e9": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_f9a73fd3108745fb8986f616b9b18594", "IPY_MODEL_d521648de0314c51a74bf78ecce02545", "IPY_MODEL_7b4a90f37135434e86b2baa530744ac2", "IPY_MODEL_7265078dca9444c3974cd84c2c6bdb52"], "layout": "IPY_MODEL_be7f60712caa4f8a952f04e8de761a02"}}, "f9a73fd3108745fb8986f616b9b18594": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_4a022a59795b466fbf7df2da400be292", "style": "IPY_MODEL_066e6263635d42e8b352fc5ccb3c6244", "value": "<h4><b>Mean Average Recall Report</b></h4>"}}, "4a022a59795b466fbf7df2da400be292": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "066e6263635d42e8b352fc5ccb3c6244": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "d521648de0314c51a74bf78ecce02545": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_357c0a074f9e4739a02c31ab71da3c7b", "style": "IPY_MODEL_b11c3591271f4b85b50b00d1ec847f01", "value": "<p>Summarize mean average recall metrics on a dataset and model per detections and area range. <a href=\"https://docs.deepchecks.com/0.17/vision/auto_checks/model_evaluation/plot_mean_average_recall_report.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "357c0a074f9e4739a02c31ab71da3c7b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b11c3591271f4b85b50b00d1ec847f01": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "7b4a90f37135434e86b2baa530744ac2": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_4e3578bd8263477c84a3fa861efbf677", "style": "IPY_MODEL_99c67c1fa32d49a4be4a6e0f7611227f"}}, "4e3578bd8263477c84a3fa861efbf677": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "99c67c1fa32d49a4be4a6e0f7611227f": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "7265078dca9444c3974cd84c2c6bdb52": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_6634735b02be479d834bcf18400e252b", "IPY_MODEL_426e2702d7a045eca65c309aea79b5d3"], "layout": "IPY_MODEL_cb7f0b2d95bd44429cbc69c86c9b19ad"}}, "6634735b02be479d834bcf18400e252b": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_2938b11471d94c5cae3809bd3222dec9", "style": "IPY_MODEL_5f5a1e9e585e41b3a70896122a2ef974", "value": "<h5><b>Additional Outputs</b></h5>"}}, "2938b11471d94c5cae3809bd3222dec9": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "5f5a1e9e585e41b3a70896122a2ef974": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "426e2702d7a045eca65c309aea79b5d3": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_a66926d3a83e41fd88b6fc92fe4cb42a", "style": "IPY_MODEL_bc83996c5939440488075e6669a31355", "value": "<style type=\"text/css\">\n#T_6f9eb_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_6f9eb_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_6f9eb_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_6f9eb_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_6f9eb_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_6f9eb_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >AR@1 (%)</th>\n      <th class=\"col_heading level0 col1\" >AR@10 (%)</th>\n      <th class=\"col_heading level0 col2\" >AR@100 (%)</th>\n    </tr>\n    <tr>\n      <th class=\"index_name level0\" >Area size</th>\n      <th class=\"blank col0\" >&nbsp;</th>\n      <th class=\"blank col1\" >&nbsp;</th>\n      <th class=\"blank col2\" >&nbsp;</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_6f9eb_level0_row0\" class=\"row_heading level0 row0\" >All</th>\n      <td id=\"T_6f9eb_row0_col0\" class=\"data row0 col0\" >0.33</td>\n      <td id=\"T_6f9eb_row0_col1\" class=\"data row0 col1\" >0.42</td>\n      <td id=\"T_6f9eb_row0_col2\" class=\"data row0 col2\" >0.43</td>\n    </tr>\n    <tr>\n      <th id=\"T_6f9eb_level0_row1\" class=\"row_heading level0 row1\" >Small (area < 32^2)</th>\n      <td id=\"T_6f9eb_row1_col0\" class=\"data row1 col0\" >0.10</td>\n      <td id=\"T_6f9eb_row1_col1\" class=\"data row1 col1\" >0.22</td>\n      <td id=\"T_6f9eb_row1_col2\" class=\"data row1 col2\" >0.22</td>\n    </tr>\n    <tr>\n      <th id=\"T_6f9eb_level0_row2\" class=\"row_heading level0 row2\" >Medium (32^2 < area < 96^2)</th>\n      <td id=\"T_6f9eb_row2_col0\" class=\"data row2 col0\" >0.33</td>\n      <td id=\"T_6f9eb_row2_col1\" class=\"data row2 col1\" >0.42</td>\n      <td id=\"T_6f9eb_row2_col2\" class=\"data row2 col2\" >0.42</td>\n    </tr>\n    <tr>\n      <th id=\"T_6f9eb_level0_row3\" class=\"row_heading level0 row3\" >Large (area < 96^2)</th>\n      <td id=\"T_6f9eb_row3_col0\" class=\"data row3 col0\" >0.48</td>\n      <td id=\"T_6f9eb_row3_col1\" class=\"data row3 col1\" >0.54</td>\n      <td id=\"T_6f9eb_row3_col2\" class=\"data row3 col2\" >0.55</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "a66926d3a83e41fd88b6fc92fe4cb42a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "bc83996c5939440488075e6669a31355": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "cb7f0b2d95bd44429cbc69c86c9b19ad": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "be7f60712caa4f8a952f04e8de761a02": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "5e8d61e465e548cf819122b20e37f0e9"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 58-59

To display the results in an IDE like PyCharm, you can use the following code:

.. GENERATED FROM PYTHON SOURCE LINES 59-61

.. code-block:: default


    #  result.show_in_window()







.. GENERATED FROM PYTHON SOURCE LINES 62-63

The result will be displayed in a new window.

.. GENERATED FROM PYTHON SOURCE LINES 65-68

Observe the check’s output
--------------------------
The result value is a dataframe that has the average recall score per each area range and IoU.

.. GENERATED FROM PYTHON SOURCE LINES 68-71

.. code-block:: default


    result.value






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>AR@1 (%)</th>
          <th>AR@10 (%)</th>
          <th>AR@100 (%)</th>
        </tr>
        <tr>
          <th>Area size</th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>All</th>
          <td>0.330552</td>
          <td>0.423444</td>
          <td>0.429179</td>
        </tr>
        <tr>
          <th>Small (area &lt; 32^2)</th>
          <td>0.104955</td>
          <td>0.220594</td>
          <td>0.220594</td>
        </tr>
        <tr>
          <th>Medium (32^2 &lt; area &lt; 96^2)</th>
          <td>0.325099</td>
          <td>0.417392</td>
          <td>0.423844</td>
        </tr>
        <tr>
          <th>Large (area &lt; 96^2)</th>
          <td>0.481611</td>
          <td>0.544408</td>
          <td>0.549963</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 72-76

Define a condition 
==================
We can define a condition that checks whether our model's average recall score is not less than
a given threshold

.. GENERATED FROM PYTHON SOURCE LINES 76-80

.. code-block:: default


    check = MeanAverageRecallReport().add_condition_test_average_recall_greater_than(0.4)
    result = check.run(test_ds)
    result.show(show_additional_outputs=False)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Processing Batches:
    |     | 0/1 [Time: 00:00]    Processing Batches:
    |█████| 1/1 [Time: 00:00]    Processing Batches:
    |█████| 1/1 [Time: 00:00]
    Computing Check:
    |     | 0/1 [Time: 00:00]
    Computing Check:
    |█████| 1/1 [Time: 00:00]
    Computing Check:
    |█████| 1/1 [Time: 00:00]                                             
                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2023 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Mean Average Recall Report</title>
        <link rel="icon" type="image/x-icon" href="https://deepchecks.com/wp-content/themes/deepchecks/assets/favicons/favicon.ico">
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"caff77e87f324934820b6c5276d44556": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_52cb4254107444faab268752f9e42eeb", "IPY_MODEL_61a15664abfb4beebc9c74519b5cf220", "IPY_MODEL_fc6ac03c4c1b4fcf9fb4a50756da31db"], "layout": "IPY_MODEL_047b6fa0feb74145b8f14729f441a7c5"}}, "52cb4254107444faab268752f9e42eeb": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_120d2c20af7344d5a324af10425fe17b", "style": "IPY_MODEL_4ac6c4d05c084cc0b2e0244e70a2a90e", "value": "<h4><b>Mean Average Recall Report</b></h4>"}}, "120d2c20af7344d5a324af10425fe17b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "4ac6c4d05c084cc0b2e0244e70a2a90e": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "61a15664abfb4beebc9c74519b5cf220": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3f98f34982a444eb879dd8bd80e4218f", "style": "IPY_MODEL_fe3d933988284b3cad5e814a153e745e", "value": "<p>Summarize mean average recall metrics on a dataset and model per detections and area range. <a href=\"https://docs.deepchecks.com/0.17/vision/auto_checks/model_evaluation/plot_mean_average_recall_report.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "3f98f34982a444eb879dd8bd80e4218f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "fe3d933988284b3cad5e814a153e745e": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "fc6ac03c4c1b4fcf9fb4a50756da31db": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6c0fa992c6b34cd69f4762862d02caa9", "style": "IPY_MODEL_1e5789e05e384cd0926145b68a24249f", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_b8a18_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_b8a18_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_b8a18_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_b8a18_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_b8a18_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_b8a18_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_b8a18_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_b8a18_row0_col1\" class=\"data row0 col1\" >Scores are greater than 0.4</td>\n      <td id=\"T_b8a18_row0_col2\" class=\"data row0 col2\" >Found lowest score of 0.1 for area Small (area < 32^2) and IoU AR@1 (%)</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "6c0fa992c6b34cd69f4762862d02caa9": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "1e5789e05e384cd0926145b68a24249f": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "047b6fa0feb74145b8f14729f441a7c5": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "caff77e87f324934820b6c5276d44556"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.978 seconds)


.. _sphx_glr_download_vision_auto_checks_model_evaluation_plot_mean_average_recall_report.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_mean_average_recall_report.py <plot_mean_average_recall_report.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_mean_average_recall_report.ipynb <plot_mean_average_recall_report.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
