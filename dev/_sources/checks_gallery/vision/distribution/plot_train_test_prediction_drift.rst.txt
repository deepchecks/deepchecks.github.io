
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "checks_gallery/vision/distribution/plot_train_test_prediction_drift.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_checks_gallery_vision_distribution_plot_train_test_prediction_drift.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_checks_gallery_vision_distribution_plot_train_test_prediction_drift.py:


Train Test Prediction Drift
***************************

This notebooks provides an overview for using and understanding the vision prediction drift check.

**Structure:**

* `What is a prediction drift? <#what-is-a-prediction-drift>`__
* `Which Prediction Properties Are Used? <#which-prediction-properties-are-used>`__
* `Run check on a Classification task <#run-the-check-on-a-classification-task-mnist>`__
* `Run check on an Object Detection task <#run-the-check-on-an-object-detection-task-coco>`__

What Is a Prediction Drift?
===========================
The term drift (and all it's derivatives) is used to describe any change in the data compared
to the data the model was trained on. Prediction drift refers to the case in which a change
in the data (data/feature drift) has happened and as a result, the distribution of the
models' prediction has changed.

Calculating prediction drift is especially useful in cases
in which labels are not available for the test dataset, and so a drift in the predictions
is out only indication that a changed has happened in the data that actually affects model
predictions. If labels are available, it's also recommended to run the :doc:`Label Drift Check
</examples/vision/checks/distribution/examples/plot_train_test_label_drift>.

There are two main causes for prediction drift:

* A change in the sample population. In this case, the underline phenomenon we're trying
  to predict behaves the same, but we're not getting the same types of samples. For example,
  cronuts becoming more popular in a food classification dataset.
* Concept drift, which means that the underline relation between the data and
  the label has changed.
  For example, the arctic hare changes its fur color during the winter. A dataset that was trained on summertime hares,
  would have difficulty identifying them in winter.
  Important to note that concept drift won't necessarily result in prediction drift, unless it affects features that
  are of high importance to the model.

How Does the TrainTestPredictionDrift Check Work?
=================================================
There are many methods to detect drift, that usually include statistical methods
that aim to measure difference between 2 distributions.
We experimented with various approaches and found that for detecting drift between 2
one-dimensional distributions, the following 2 methods give the best results:

* For numerical features, the `Population Stability Index (PSI) <https://www.lexjansen.com/wuss/2017/47_Final_Paper_PDF.pdf>`__
* For categorical features, the `Wasserstein Distance (Earth Mover's Distance) <https://en.wikipedia.org/wiki/Wasserstein_metric>`__

However, one does not simply measure drift on a prediction, as they may be complex structures. These methods are
implemented on label properties, as described in the next section.

Different measurement on predictions
====================================
In computer vision specifically, our predictions may be complex, and measuring their drift
is not a straightforward task. Therefore, we calculate drift on different properties of the
labels, on which we can directly measure drift.


Which Prediction Properties Are Used?
=================================
================  ===================================  ==========
Task Type         Property name                        What is it
================  ===================================  ==========
Classification    Samples Per Class                    Number of images per class
Object Detection  Samples Per Class                    Number of bounding boxes per class
Object Detection  Bounding Box Area                    Area of bounding box (height * width)
Object Detection  Number of Bounding Boxes Per Image   Number of bounding box objects in each image
================  ===================================  ==========


Run the check on a Classification task (MNIST)
==============================================

.. GENERATED FROM PYTHON SOURCE LINES 77-79

Imports
-------

.. GENERATED FROM PYTHON SOURCE LINES 79-84

.. code-block:: default


    from deepchecks.vision.checks import TrainTestPredictionDrift
    from deepchecks.vision.datasets.classification.mnist import (load_dataset,
                                                                 load_model)








.. GENERATED FROM PYTHON SOURCE LINES 85-87

Loading data and model:
-----------------------

.. GENERATED FROM PYTHON SOURCE LINES 87-92

.. code-block:: default



    train_ds = load_dataset(train=True, batch_size=64, object_type='VisionData')
    test_ds = load_dataset(train=False, batch_size=64, object_type='VisionData')








.. GENERATED FROM PYTHON SOURCE LINES 93-96

.. code-block:: default


    model = load_model()








.. GENERATED FROM PYTHON SOURCE LINES 97-99

Running TrainTestLabelDrift on classification
---------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 99-103

.. code-block:: default


    check = TrainTestPredictionDrift()
    check.run(train_ds, test_ds, model)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Validating Input:   0%| | 0/1 [00:00<?, ? /s]                                                 Ingesting Batches - Train Dataset:   0%|                                                                                                                                                             | 0/157 [00:00<?, ? Batch/s]    Ingesting Batches - Train Dataset:   6%|##########                                                                                                                                                   | 10/157 [00:00<00:01, 89.17 Batch/s]    Ingesting Batches - Train Dataset:  13%|####################                                                                                                                                         | 20/157 [00:00<00:01, 94.77 Batch/s]    Ingesting Batches - Train Dataset:  19%|##############################                                                                                                                               | 30/157 [00:00<00:01, 96.76 Batch/s]    Ingesting Batches - Train Dataset:  25%|########################################                                                                                                                     | 40/157 [00:00<00:01, 97.74 Batch/s]    Ingesting Batches - Train Dataset:  32%|##################################################                                                                                                           | 50/157 [00:00<00:01, 97.54 Batch/s]    Ingesting Batches - Train Dataset:  38%|############################################################                                                                                                 | 60/157 [00:00<00:00, 97.30 Batch/s]    Ingesting Batches - Train Dataset:  45%|######################################################################                                                                                       | 70/157 [00:00<00:00, 98.05 Batch/s]    Ingesting Batches - Train Dataset:  51%|################################################################################                                                                             | 80/157 [00:00<00:00, 98.12 Batch/s]    Ingesting Batches - Train Dataset:  57%|##########################################################################################                                                                   | 90/157 [00:00<00:00, 98.44 Batch/s]    Ingesting Batches - Train Dataset:  64%|####################################################################################################                                                         | 100/157 [00:01<00:00, 98.69 Batch/s]    Ingesting Batches - Train Dataset:  71%|##############################################################################################################9                                              | 111/157 [00:01<00:00, 99.56 Batch/s]    Ingesting Batches - Train Dataset:  77%|#########################################################################################################################                                    | 121/157 [00:01<00:00, 99.47 Batch/s]    Ingesting Batches - Train Dataset:  83%|###################################################################################################################################                          | 131/157 [00:01<00:00, 99.44 Batch/s]    Ingesting Batches - Train Dataset:  90%|#############################################################################################################################################                | 141/157 [00:01<00:00, 98.40 Batch/s]    Ingesting Batches - Train Dataset:  97%|########################################################################################################################################################     | 152/157 [00:01<00:00, 99.61 Batch/s]                                                                                                                                                                                                                                               Ingesting Batches - Test Dataset:   0%|                                                                                                                                                             | 0/157 [00:00<?, ? Batch/s]    Ingesting Batches - Test Dataset:   7%|###########                                                                                                                                                  | 11/157 [00:00<00:01, 99.67 Batch/s]    Ingesting Batches - Test Dataset:  13%|#####################                                                                                                                                        | 21/157 [00:00<00:01, 98.47 Batch/s]    Ingesting Batches - Test Dataset:  20%|###############################                                                                                                                              | 31/157 [00:00<00:01, 97.97 Batch/s]    Ingesting Batches - Test Dataset:  26%|#########################################                                                                                                                    | 41/157 [00:00<00:01, 97.56 Batch/s]    Ingesting Batches - Test Dataset:  33%|####################################################                                                                                                         | 52/157 [00:00<00:01, 98.72 Batch/s]    Ingesting Batches - Test Dataset:  39%|##############################################################                                                                                               | 62/157 [00:00<00:00, 98.32 Batch/s]    Ingesting Batches - Test Dataset:  46%|########################################################################                                                                                     | 72/157 [00:00<00:00, 96.97 Batch/s]    Ingesting Batches - Test Dataset:  52%|##################################################################################                                                                           | 82/157 [00:00<00:00, 97.40 Batch/s]    Ingesting Batches - Test Dataset:  59%|############################################################################################                                                                 | 92/157 [00:00<00:00, 97.71 Batch/s]    Ingesting Batches - Test Dataset:  66%|#######################################################################################################                                                      | 103/157 [00:01<00:00, 98.87 Batch/s]    Ingesting Batches - Test Dataset:  73%|#################################################################################################################9                                           | 114/157 [00:01<00:00, 99.33 Batch/s]    Ingesting Batches - Test Dataset:  79%|############################################################################################################################                                 | 124/157 [00:01<00:00, 98.58 Batch/s]    Ingesting Batches - Test Dataset:  85%|######################################################################################################################################                       | 134/157 [00:01<00:00, 98.37 Batch/s]    Ingesting Batches - Test Dataset:  92%|################################################################################################################################################             | 144/157 [00:01<00:00, 98.16 Batch/s]    Ingesting Batches - Test Dataset:  98%|##########################################################################################################################################################   | 154/157 [00:01<00:00, 97.89 Batch/s]                                                                                                                                                                                                                                              Computing Check:   0%| | 0/1 [00:00<?, ? Check/s]                                                 

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js"
        integrity="sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg=="
        crossorigin="anonymous"
        referrerpolicy="no-referrer">
    </script>

    <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
    <script type="text/javascript">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>
    <script type="text/javascript">
        if (typeof require !== 'undefined') {
            require.undef("plotly");
            requirejs.config({
                paths: {'plotly': ['https://cdn.plot.ly/plotly-2.8.3.min']}
            });
            require(
                ['plotly'],
                function(Plotly) {
                    window._Plotly = Plotly;
                    window.Plotly = Plotly;
                    console.log('Loaded plotly successfully');
                },
                function() {console.log('Failed to load plotly')}
            );
        } else {
            console.log('requirejs is not present');
        }
    </script>
    <h4><b>Train Test Prediction Drift</b></h4><p>    Calculate prediction drift between train dataset and test dataset, using statistical measures.</p><h5><b>Additional Outputs</b></h5><div><span>The Drift score is a measure for the difference between two distributions. In this check, drift is measured for the distribution of the following prediction properties: ['Samples Per Class'].</span></div><div>                            <div id="dc506e81-027b-4553-8648-6c5a1a455792" class="plotly-graph-div" style="height:400px; width:700px;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("dc506e81-027b-4553-8648-6c5a1a455792")) {                    Plotly.newPlot(                        "dc506e81-027b-4553-8648-6c5a1a455792",                        [{"base":0,"marker":{"color":"#01B8AA"},"offsetgroup":"0","orientation":"h","showlegend":false,"x":[0.0013761652424115005],"y":["Drift Score"],"type":"bar","xaxis":"x","yaxis":"y"},{"marker":{"color":"#00008b"},"name":"Train Dataset","x":["0","1","2","3","4","5","6","7","8","9"],"y":[0.0999,0.117,0.1001,0.0963,0.0945,0.0917,0.1037,0.1066,0.093,0.0972],"type":"bar","xaxis":"x2","yaxis":"y2"},{"marker":{"color":"#69b3a2"},"name":"Test Dataset","x":["0","1","2","3","4","5","6","7","8","9"],"y":[0.0998,0.1133,0.1038,0.1012,0.0974,0.0885,0.0966,0.1043,0.0954,0.0997],"type":"bar","xaxis":"x2","yaxis":"y2"}],                        {"template":{"data":{"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"choropleth":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"choropleth"}],"contour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"contour"}],"contourcarpet":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"contourcarpet"}],"heatmap":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmap"}],"heatmapgl":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmapgl"}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"histogram2d":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2d"}],"histogram2dcontour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2dcontour"}],"mesh3d":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"mesh3d"}],"parcoords":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"parcoords"}],"pie":[{"automargin":true,"type":"pie"}],"scatter":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter"}],"scatter3d":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter3d"}],"scattercarpet":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattercarpet"}],"scattergeo":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergeo"}],"scattergl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergl"}],"scattermapbox":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattermapbox"}],"scatterpolar":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolar"}],"scatterpolargl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolargl"}],"scatterternary":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterternary"}],"surface":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"surface"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}]},"layout":{"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"autotypenumbers":"strict","coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]],"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]},"colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"geo":{"bgcolor":"white","lakecolor":"white","landcolor":"#E5ECF6","showlakes":true,"showland":true,"subunitcolor":"white"},"hoverlabel":{"align":"left"},"hovermode":"closest","mapbox":{"style":"light"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"ternary":{"aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"title":{"x":0.05},"xaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2},"yaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2}}},"xaxis":{"anchor":"y","domain":[0.0,1.0],"showgrid":false,"gridcolor":"black","linecolor":"black","range":[0,0.4],"dtick":0.05,"fixedrange":true},"yaxis":{"anchor":"x","domain":[0.9200000000000002,1.0],"showgrid":false,"showline":false,"showticklabels":false,"zeroline":false,"color":"black","fixedrange":true},"xaxis2":{"anchor":"y2","domain":[0.0,1.0],"type":"category"},"yaxis2":{"anchor":"x2","domain":[0.0,0.7200000000000001],"fixedrange":true,"range":[0,0.1287],"title":{"text":"Frequency"}},"annotations":[{"font":{"size":16},"showarrow":false,"text":"Drift Score (PSI)","x":0.5,"xanchor":"center","xref":"paper","y":1.0000000000000002,"yanchor":"bottom","yref":"paper"},{"font":{"size":16},"showarrow":false,"text":"Distribution Plot","x":0.5,"xanchor":"center","xref":"paper","y":0.7200000000000001,"yanchor":"bottom","yref":"paper"}],"legend":{"title":{"text":"Legend"},"yanchor":"top","y":0.6},"title":{"text":"Samples Per Class","x":0.5,"xanchor":"center"},"width":700,"height":400,"bargroupgap":0},                        {"responsive": true}                    ).then(function(){
                            
    var gd = document.getElementById('dc506e81-027b-4553-8648-6c5a1a455792');
    var x = new MutationObserver(function (mutations, observer) {{
            var display = window.getComputedStyle(gd).display;
            if (!display || display === 'none') {{
                console.log([gd, 'removed!']);
                Plotly.purge(gd);
                observer.disconnect();
            }}
    }});

    // Listen for the removal of the full notebook cells
    var notebookContainer = gd.closest('#notebook-container');
    if (notebookContainer) {{
        x.observe(notebookContainer, {childList: true});
    }}

    // Listen for the clearing of the current output cell
    var outputEl = gd.closest('.output');
    if (outputEl) {{
        x.observe(outputEl, {childList: true});
    }}

                            })                };                });            </script>        </div><div><p style="font-size:0.9em;line-height:1;"><i>Note - data sampling: Running on 10000 <b>train</b> data samples out of 60000. Sample size can be controlled with the "n_samples" parameter.</i></p></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 104-109

Understanding the results
-------------------------
We can see there is almost no drift between the train & test labels. This means the
split to train and test was good (as it is balanced and random). Let's check the
performance of a simple model trained on MNIST.

.. GENERATED FROM PYTHON SOURCE LINES 109-114

.. code-block:: default


    from deepchecks.vision.checks import ClassPerformance

    ClassPerformance().run(train_ds, test_ds, model)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Validating Input:   0%| | 0/1 [00:00<?, ? /s]                                                 Ingesting Batches - Train Dataset:   0%|                                                                                                                                                             | 0/157 [00:00<?, ? Batch/s]    Ingesting Batches - Train Dataset:   6%|##########                                                                                                                                                   | 10/157 [00:00<00:01, 95.20 Batch/s]    Ingesting Batches - Train Dataset:  13%|####################                                                                                                                                         | 20/157 [00:00<00:01, 96.10 Batch/s]    Ingesting Batches - Train Dataset:  19%|##############################                                                                                                                               | 30/157 [00:00<00:01, 96.48 Batch/s]    Ingesting Batches - Train Dataset:  25%|########################################                                                                                                                     | 40/157 [00:00<00:01, 97.06 Batch/s]    Ingesting Batches - Train Dataset:  32%|##################################################                                                                                                           | 50/157 [00:00<00:01, 96.12 Batch/s]    Ingesting Batches - Train Dataset:  38%|############################################################                                                                                                 | 60/157 [00:00<00:01, 96.21 Batch/s]    Ingesting Batches - Train Dataset:  45%|######################################################################                                                                                       | 70/157 [00:00<00:00, 95.91 Batch/s]    Ingesting Batches - Train Dataset:  51%|################################################################################                                                                             | 80/157 [00:00<00:00, 96.14 Batch/s]    Ingesting Batches - Train Dataset:  57%|##########################################################################################                                                                   | 90/157 [00:00<00:00, 96.04 Batch/s]    Ingesting Batches - Train Dataset:  64%|####################################################################################################                                                         | 100/157 [00:01<00:00, 95.79 Batch/s]    Ingesting Batches - Train Dataset:  70%|##############################################################################################################                                               | 110/157 [00:01<00:00, 95.45 Batch/s]    Ingesting Batches - Train Dataset:  76%|########################################################################################################################                                     | 120/157 [00:01<00:00, 94.27 Batch/s]    Ingesting Batches - Train Dataset:  83%|##################################################################################################################################                           | 130/157 [00:01<00:00, 94.12 Batch/s]    Ingesting Batches - Train Dataset:  89%|############################################################################################################################################                 | 140/157 [00:01<00:00, 93.36 Batch/s]    Ingesting Batches - Train Dataset:  96%|######################################################################################################################################################       | 150/157 [00:01<00:00, 93.13 Batch/s]                                                                                                                                                                                                                                               Ingesting Batches - Test Dataset:   0%|                                                                                                                                                             | 0/157 [00:00<?, ? Batch/s]    Ingesting Batches - Test Dataset:   6%|##########                                                                                                                                                   | 10/157 [00:00<00:01, 94.84 Batch/s]    Ingesting Batches - Test Dataset:  13%|####################                                                                                                                                         | 20/157 [00:00<00:01, 95.13 Batch/s]    Ingesting Batches - Test Dataset:  19%|##############################                                                                                                                               | 30/157 [00:00<00:01, 94.73 Batch/s]    Ingesting Batches - Test Dataset:  25%|########################################                                                                                                                     | 40/157 [00:00<00:01, 92.42 Batch/s]    Ingesting Batches - Test Dataset:  32%|##################################################                                                                                                           | 50/157 [00:00<00:01, 92.78 Batch/s]    Ingesting Batches - Test Dataset:  38%|############################################################                                                                                                 | 60/157 [00:00<00:01, 94.15 Batch/s]    Ingesting Batches - Test Dataset:  45%|######################################################################                                                                                       | 70/157 [00:00<00:00, 95.13 Batch/s]    Ingesting Batches - Test Dataset:  51%|################################################################################                                                                             | 80/157 [00:00<00:00, 95.78 Batch/s]    Ingesting Batches - Test Dataset:  57%|##########################################################################################                                                                   | 90/157 [00:00<00:00, 95.71 Batch/s]    Ingesting Batches - Test Dataset:  64%|####################################################################################################                                                         | 100/157 [00:01<00:00, 95.45 Batch/s]    Ingesting Batches - Test Dataset:  70%|##############################################################################################################                                               | 110/157 [00:01<00:00, 95.77 Batch/s]    Ingesting Batches - Test Dataset:  76%|########################################################################################################################                                     | 120/157 [00:01<00:00, 96.07 Batch/s]    Ingesting Batches - Test Dataset:  83%|##################################################################################################################################                           | 130/157 [00:01<00:00, 95.98 Batch/s]    Ingesting Batches - Test Dataset:  89%|############################################################################################################################################                 | 140/157 [00:01<00:00, 94.59 Batch/s]    Ingesting Batches - Test Dataset:  96%|######################################################################################################################################################       | 150/157 [00:01<00:00, 95.43 Batch/s]                                                                                                                                                                                                                                              Computing Check:   0%| | 0/1 [00:00<?, ? Check/s]                                                 

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js"
        integrity="sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg=="
        crossorigin="anonymous"
        referrerpolicy="no-referrer">
    </script>

    <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
    <script type="text/javascript">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>
    <script type="text/javascript">
        if (typeof require !== 'undefined') {
            require.undef("plotly");
            requirejs.config({
                paths: {'plotly': ['https://cdn.plot.ly/plotly-2.8.3.min']}
            });
            require(
                ['plotly'],
                function(Plotly) {
                    window._Plotly = Plotly;
                    window.Plotly = Plotly;
                    console.log('Loaded plotly successfully');
                },
                function() {console.log('Failed to load plotly')}
            );
        } else {
            console.log('requirejs is not present');
        }
    </script>
    <h4><b>Class Performance</b></h4><p>Summarize given metrics on a dataset and model.</p><h5><b>Additional Outputs</b></h5><div>                            <div id="5c97eec5-46d0-4d7d-ad3e-168d91acce0d" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("5c97eec5-46d0-4d7d-ad3e-168d91acce0d")) {                    Plotly.newPlot(                        "5c97eec5-46d0-4d7d-ad3e-168d91acce0d",                        [{"alignmentgroup":"True","bingroup":"x","histfunc":"sum","hovertemplate":"Dataset=Train<br>Metric=Recall<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>","legendgroup":"Train","marker":{"color":"#00008b","pattern":{"shape":""}},"name":"Train","offsetgroup":"Train","orientation":"v","showlegend":true,"x":["6","0","2","7","3","1","4","5","9","8"],"xaxis":"x","y":[0.9970472440944882,0.9929292929292929,0.9888324873096447,0.9876543209876543,0.987460815047022,0.9864061172472387,0.9801047120418848,0.9690831556503199,0.9674465920651069,0.9661733615221987],"yaxis":"y","type":"histogram"},{"alignmentgroup":"True","bingroup":"x","histfunc":"sum","hovertemplate":"Dataset=Train<br>Metric=Precision<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>","legendgroup":"Train","marker":{"color":"#00008b","pattern":{"shape":""}},"name":"Train","offsetgroup":"Train","orientation":"v","showlegend":false,"x":["1","5","4","0","8","3","9","6","7","2"],"xaxis":"x2","y":[0.9923076923076923,0.9912758996728462,0.9904761904761905,0.983983983983984,0.9827956989247312,0.9813084112149533,0.9783950617283951,0.9768563162970106,0.975609756097561,0.973026973026973],"yaxis":"y2","type":"histogram"},{"alignmentgroup":"True","bingroup":"x","histfunc":"sum","hovertemplate":"Dataset=Test<br>Metric=Recall<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>","legendgroup":"Test","marker":{"color":"#69b3a2","pattern":{"shape":""}},"name":"Test","offsetgroup":"Test","orientation":"v","showlegend":true,"x":["0","1","6","2","7","3","4","5","8","9"],"xaxis":"x","y":[0.9938775510204082,0.9903083700440528,0.988517745302714,0.9874031007751938,0.9854085603112841,0.9841584158415841,0.9816700610997964,0.9798206278026906,0.9722792607802875,0.9702675916749257],"yaxis":"y","type":"histogram"},{"alignmentgroup":"True","bingroup":"x","histfunc":"sum","hovertemplate":"Dataset=Test<br>Metric=Precision<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>","legendgroup":"Test","marker":{"color":"#69b3a2","pattern":{"shape":""}},"name":"Test","offsetgroup":"Test","orientation":"v","showlegend":false,"x":["8","1","4","5","3","9","2","6","0","7"],"xaxis":"x2","y":[0.9926624737945493,0.9920564872021183,0.9897330595482546,0.9875706214689266,0.9822134387351779,0.9819458375125376,0.9816955684007708,0.9803312629399586,0.9759519038076152,0.9712368168744008],"yaxis":"y2","type":"histogram"}],                        {"template":{"data":{"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"choropleth":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"choropleth"}],"contour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"contour"}],"contourcarpet":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"contourcarpet"}],"heatmap":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmap"}],"heatmapgl":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmapgl"}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"histogram2d":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2d"}],"histogram2dcontour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2dcontour"}],"mesh3d":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"mesh3d"}],"parcoords":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"parcoords"}],"pie":[{"automargin":true,"type":"pie"}],"scatter":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter"}],"scatter3d":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter3d"}],"scattercarpet":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattercarpet"}],"scattergeo":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergeo"}],"scattergl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergl"}],"scattermapbox":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattermapbox"}],"scatterpolar":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolar"}],"scatterpolargl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolargl"}],"scatterternary":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterternary"}],"surface":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"surface"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}]},"layout":{"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"autotypenumbers":"strict","coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]],"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]},"colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"geo":{"bgcolor":"white","lakecolor":"white","landcolor":"#E5ECF6","showlakes":true,"showland":true,"subunitcolor":"white"},"hoverlabel":{"align":"left"},"hovermode":"closest","mapbox":{"style":"light"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"ternary":{"aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"title":{"x":0.05},"xaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2},"yaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2}}},"xaxis":{"anchor":"y","domain":[0.0,0.475],"title":{"text":"Class"},"type":"category"},"yaxis":{"anchor":"x","domain":[0.0,1.0],"title":{"text":"Value"},"showticklabels":true},"xaxis2":{"anchor":"y2","domain":[0.525,1.0],"matches":"x","title":{"text":"Class"},"type":"category"},"yaxis2":{"anchor":"x2","domain":[0.0,1.0],"showticklabels":true,"title":{"text":"Value"}},"annotations":[{"font":{},"showarrow":false,"text":"Recall","x":0.2375,"xanchor":"center","xref":"paper","y":1.0,"yanchor":"bottom","yref":"paper"},{"font":{},"showarrow":false,"text":"Precision","x":0.7625,"xanchor":"center","xref":"paper","y":1.0,"yanchor":"bottom","yref":"paper"}],"legend":{"title":{"text":"Dataset"},"tracegroupgap":0},"margin":{"t":60},"barmode":"group"},                        {"responsive": true}                    ).then(function(){
                            
    var gd = document.getElementById('5c97eec5-46d0-4d7d-ad3e-168d91acce0d');
    var x = new MutationObserver(function (mutations, observer) {{
            var display = window.getComputedStyle(gd).display;
            if (!display || display === 'none') {{
                console.log([gd, 'removed!']);
                Plotly.purge(gd);
                observer.disconnect();
            }}
    }});

    // Listen for the removal of the full notebook cells
    var notebookContainer = gd.closest('#notebook-container');
    if (notebookContainer) {{
        x.observe(notebookContainer, {childList: true});
    }}

    // Listen for the clearing of the current output cell
    var outputEl = gd.closest('.output');
    if (outputEl) {{
        x.observe(outputEl, {childList: true});
    }}

                            })                };                });            </script>        </div><div><p style="font-size:0.9em;line-height:1;"><i>Note - data sampling: Running on 10000 <b>train</b> data samples out of 60000. Sample size can be controlled with the "n_samples" parameter.</i></p></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 115-121

MNIST with label drift
======================
Now, let's try to separate the MNIST dataset in a different manner that will result
in a prediction drift, and see how it affects the performance. We are going to create
a custom collate_fn in the test dataset, that will select samples with class 0
in a 1/10 chances.

.. GENERATED FROM PYTHON SOURCE LINES 121-128

.. code-block:: default


    import torch

    mnist_dataloader_train = load_dataset(train=True, batch_size=64, object_type='DataLoader')
    mnist_dataloader_test = load_dataset(train=False, batch_size=64, object_type='DataLoader')
    full_mnist = torch.utils.data.ConcatDataset([mnist_dataloader_train.dataset, mnist_dataloader_test.dataset])








.. GENERATED FROM PYTHON SOURCE LINES 129-132

.. code-block:: default


    train_dataset, test_dataset = torch.utils.data.random_split(full_mnist, [60000,10000], generator=torch.Generator().manual_seed(42))








.. GENERATED FROM PYTHON SOURCE LINES 133-135

Inserting drift to the test set
-------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 135-159

.. code-block:: default


    import numpy as np
    from torch.utils.data._utils.collate import default_collate

    np.random.seed(42)


    def collate_test(batch):
        modified_batch = []
        for item in batch:
            image, label = item
            if label == 0:
                if np.random.randint(5) == 0:
                    modified_batch.append(item)
                else:
                    modified_batch.append((image, 1))
            else:
                modified_batch.append(item)
            
        return default_collate(modified_batch)

    mod_train_loader = torch.utils.data.DataLoader(train_dataset, batch_size=64)
    mod_test_loader = torch.utils.data.DataLoader(test_dataset, batch_size=64, collate_fn=collate_test)








.. GENERATED FROM PYTHON SOURCE LINES 160-179

.. code-block:: default

    from deepchecks.vision.datasets.classification.mnist import MNISTData

    mod_train_ds = MNISTData(mod_train_loader)
    mod_test_ds = MNISTData(mod_test_loader)

    # Run the check
    # -------------

    check = TrainTestPredictionDrift()
    check.run(mod_train_ds, mod_test_ds, model)

    # Add a condition
    # ---------------
    # We could also add a condition to the check to alert us to changes in the prediction
    # distribution, such as the one that occurred here.

    check = TrainTestPredictionDrift().add_condition_drift_score_not_greater_than()
    check.run(mod_train_ds, mod_test_ds, model)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Validating Input:   0%| | 0/1 [00:00<?, ? /s]                                                 Ingesting Batches - Train Dataset:   0%|                                                                                                                                                             | 0/157 [00:00<?, ? Batch/s]    Ingesting Batches - Train Dataset:   6%|#########                                                                                                                                                    | 9/157 [00:00<00:01, 85.46 Batch/s]    Ingesting Batches - Train Dataset:  12%|###################                                                                                                                                          | 19/157 [00:00<00:01, 91.51 Batch/s]    Ingesting Batches - Train Dataset:  18%|############################9                                                                                                                                | 29/157 [00:00<00:01, 93.89 Batch/s]    Ingesting Batches - Train Dataset:  25%|#######################################                                                                                                                      | 39/157 [00:00<00:01, 94.54 Batch/s]    Ingesting Batches - Train Dataset:  31%|#################################################                                                                                                            | 49/157 [00:00<00:01, 94.80 Batch/s]    Ingesting Batches - Train Dataset:  38%|###########################################################                                                                                                  | 59/157 [00:00<00:01, 94.47 Batch/s]    Ingesting Batches - Train Dataset:  44%|#####################################################################                                                                                        | 69/157 [00:00<00:00, 94.31 Batch/s]    Ingesting Batches - Train Dataset:  50%|###############################################################################                                                                              | 79/157 [00:00<00:00, 94.76 Batch/s]    Ingesting Batches - Train Dataset:  57%|#########################################################################################                                                                    | 89/157 [00:00<00:00, 94.74 Batch/s]    Ingesting Batches - Train Dataset:  63%|###################################################################################################                                                          | 99/157 [00:01<00:00, 94.81 Batch/s]    Ingesting Batches - Train Dataset:  69%|#############################################################################################################                                                | 109/157 [00:01<00:00, 93.76 Batch/s]    Ingesting Batches - Train Dataset:  76%|#######################################################################################################################                                      | 119/157 [00:01<00:00, 92.46 Batch/s]    Ingesting Batches - Train Dataset:  82%|#################################################################################################################################                            | 129/157 [00:01<00:00, 92.87 Batch/s]    Ingesting Batches - Train Dataset:  89%|###########################################################################################################################################                  | 139/157 [00:01<00:00, 92.56 Batch/s]    Ingesting Batches - Train Dataset:  95%|#####################################################################################################################################################        | 149/157 [00:01<00:00, 92.54 Batch/s]                                                                                                                                                                                                                                               Ingesting Batches - Test Dataset:   0%|                                                                                                                                                             | 0/157 [00:00<?, ? Batch/s]    Ingesting Batches - Test Dataset:   6%|##########                                                                                                                                                   | 10/157 [00:00<00:01, 94.43 Batch/s]    Ingesting Batches - Test Dataset:  13%|####################                                                                                                                                         | 20/157 [00:00<00:01, 93.53 Batch/s]    Ingesting Batches - Test Dataset:  19%|##############################                                                                                                                               | 30/157 [00:00<00:01, 94.09 Batch/s]    Ingesting Batches - Test Dataset:  25%|########################################                                                                                                                     | 40/157 [00:00<00:01, 94.07 Batch/s]    Ingesting Batches - Test Dataset:  32%|##################################################                                                                                                           | 50/157 [00:00<00:01, 94.02 Batch/s]    Ingesting Batches - Test Dataset:  38%|############################################################                                                                                                 | 60/157 [00:00<00:01, 92.22 Batch/s]    Ingesting Batches - Test Dataset:  45%|######################################################################                                                                                       | 70/157 [00:00<00:00, 92.81 Batch/s]    Ingesting Batches - Test Dataset:  51%|################################################################################                                                                             | 80/157 [00:00<00:00, 91.36 Batch/s]    Ingesting Batches - Test Dataset:  57%|##########################################################################################                                                                   | 90/157 [00:00<00:00, 91.36 Batch/s]    Ingesting Batches - Test Dataset:  64%|####################################################################################################                                                         | 100/157 [00:01<00:00, 92.08 Batch/s]    Ingesting Batches - Test Dataset:  70%|##############################################################################################################                                               | 110/157 [00:01<00:00, 92.26 Batch/s]    Ingesting Batches - Test Dataset:  76%|########################################################################################################################                                     | 120/157 [00:01<00:00, 92.75 Batch/s]    Ingesting Batches - Test Dataset:  83%|##################################################################################################################################                           | 130/157 [00:01<00:00, 91.62 Batch/s]    Ingesting Batches - Test Dataset:  89%|############################################################################################################################################                 | 140/157 [00:01<00:00, 91.00 Batch/s]    Ingesting Batches - Test Dataset:  96%|######################################################################################################################################################       | 150/157 [00:01<00:00, 90.70 Batch/s]                                                                                                                                                                                                                                              Computing Check:   0%| | 0/1 [00:00<?, ? Check/s]                                                     Validating Input:   0%| | 0/1 [00:00<?, ? /s]                                                 Ingesting Batches - Train Dataset:   0%|                                                                                                                                                             | 0/157 [00:00<?, ? Batch/s]    Ingesting Batches - Train Dataset:   6%|##########                                                                                                                                                   | 10/157 [00:00<00:01, 88.23 Batch/s]    Ingesting Batches - Train Dataset:  12%|###################                                                                                                                                          | 19/157 [00:00<00:01, 88.81 Batch/s]    Ingesting Batches - Train Dataset:  18%|############################9                                                                                                                                | 29/157 [00:00<00:01, 90.54 Batch/s]    Ingesting Batches - Train Dataset:  25%|#######################################                                                                                                                      | 39/157 [00:00<00:01, 90.42 Batch/s]    Ingesting Batches - Train Dataset:  31%|#################################################                                                                                                            | 49/157 [00:00<00:01, 91.11 Batch/s]    Ingesting Batches - Train Dataset:  38%|###########################################################                                                                                                  | 59/157 [00:00<00:01, 91.83 Batch/s]    Ingesting Batches - Train Dataset:  44%|#####################################################################                                                                                        | 69/157 [00:00<00:00, 93.04 Batch/s]    Ingesting Batches - Train Dataset:  50%|###############################################################################                                                                              | 79/157 [00:00<00:00, 93.50 Batch/s]    Ingesting Batches - Train Dataset:  57%|#########################################################################################                                                                    | 89/157 [00:00<00:00, 94.11 Batch/s]    Ingesting Batches - Train Dataset:  63%|###################################################################################################                                                          | 99/157 [00:01<00:00, 93.76 Batch/s]    Ingesting Batches - Train Dataset:  69%|#############################################################################################################                                                | 109/157 [00:01<00:00, 93.86 Batch/s]    Ingesting Batches - Train Dataset:  76%|#######################################################################################################################                                      | 119/157 [00:01<00:00, 94.00 Batch/s]    Ingesting Batches - Train Dataset:  82%|#################################################################################################################################                            | 129/157 [00:01<00:00, 94.58 Batch/s]    Ingesting Batches - Train Dataset:  89%|###########################################################################################################################################                  | 139/157 [00:01<00:00, 94.81 Batch/s]    Ingesting Batches - Train Dataset:  95%|#####################################################################################################################################################        | 149/157 [00:01<00:00, 92.85 Batch/s]                                                                                                                                                                                                                                               Ingesting Batches - Test Dataset:   0%|                                                                                                                                                             | 0/157 [00:00<?, ? Batch/s]    Ingesting Batches - Test Dataset:   6%|##########                                                                                                                                                   | 10/157 [00:00<00:01, 93.65 Batch/s]    Ingesting Batches - Test Dataset:  13%|####################                                                                                                                                         | 20/157 [00:00<00:01, 93.33 Batch/s]    Ingesting Batches - Test Dataset:  19%|##############################                                                                                                                               | 30/157 [00:00<00:01, 94.23 Batch/s]    Ingesting Batches - Test Dataset:  25%|########################################                                                                                                                     | 40/157 [00:00<00:01, 93.48 Batch/s]    Ingesting Batches - Test Dataset:  32%|##################################################                                                                                                           | 50/157 [00:00<00:01, 94.20 Batch/s]    Ingesting Batches - Test Dataset:  38%|############################################################                                                                                                 | 60/157 [00:00<00:01, 94.53 Batch/s]    Ingesting Batches - Test Dataset:  45%|######################################################################                                                                                       | 70/157 [00:00<00:00, 95.28 Batch/s]    Ingesting Batches - Test Dataset:  52%|#################################################################################                                                                            | 81/157 [00:00<00:00, 96.55 Batch/s]    Ingesting Batches - Test Dataset:  58%|###########################################################################################                                                                  | 91/157 [00:00<00:00, 93.87 Batch/s]    Ingesting Batches - Test Dataset:  64%|#####################################################################################################                                                        | 101/157 [00:01<00:00, 93.90 Batch/s]    Ingesting Batches - Test Dataset:  71%|##############################################################################################################9                                              | 111/157 [00:01<00:00, 94.40 Batch/s]    Ingesting Batches - Test Dataset:  77%|#########################################################################################################################                                    | 121/157 [00:01<00:00, 94.53 Batch/s]    Ingesting Batches - Test Dataset:  83%|###################################################################################################################################                          | 131/157 [00:01<00:00, 94.70 Batch/s]    Ingesting Batches - Test Dataset:  90%|#############################################################################################################################################                | 141/157 [00:01<00:00, 95.15 Batch/s]    Ingesting Batches - Test Dataset:  96%|#######################################################################################################################################################      | 151/157 [00:01<00:00, 95.41 Batch/s]                                                                                                                                                                                                                                              Computing Check:   0%| | 0/1 [00:00<?, ? Check/s]                                                 

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js"
        integrity="sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg=="
        crossorigin="anonymous"
        referrerpolicy="no-referrer">
    </script>

    <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
    <script type="text/javascript">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>
    <script type="text/javascript">
        if (typeof require !== 'undefined') {
            require.undef("plotly");
            requirejs.config({
                paths: {'plotly': ['https://cdn.plot.ly/plotly-2.8.3.min']}
            });
            require(
                ['plotly'],
                function(Plotly) {
                    window._Plotly = Plotly;
                    window.Plotly = Plotly;
                    console.log('Loaded plotly successfully');
                },
                function() {console.log('Failed to load plotly')}
            );
        } else {
            console.log('requirejs is not present');
        }
    </script>
    <h4><b>Train Test Prediction Drift</b></h4><p>    Calculate prediction drift between train dataset and test dataset, using statistical measures.</p><h5><b>Conditions Summary</b></h5><style type="text/css">
    #T_ec237 table {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_ec237 thead {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_ec237 tbody {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_ec237 th {
      text-align: left;
      white-space: pre-wrap;
    }
    #T_ec237 td {
      text-align: left;
      white-space: pre-wrap;
    }
    </style>
    <table id="T_ec237">
      <thead>
        <tr>
          <th id="T_ec237_level0_col0" class="col_heading level0 col0" >Status</th>
          <th id="T_ec237_level0_col1" class="col_heading level0 col1" >Condition</th>
          <th id="T_ec237_level0_col2" class="col_heading level0 col2" >More Info</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td id="T_ec237_row0_col0" class="data row0 col0" ><div style="color: green;text-align: center">✓</div></td>
          <td id="T_ec237_row0_col1" class="data row0 col1" >PSI <= 0.15 and Earth Mover's Distance <= 0.075 for prediction drift</td>
          <td id="T_ec237_row0_col2" class="data row0 col2" ></td>
        </tr>
      </tbody>
    </table>
    <h5><b>Additional Outputs</b></h5><div><span>The Drift score is a measure for the difference between two distributions. In this check, drift is measured for the distribution of the following prediction properties: ['Samples Per Class'].</span></div><div>                            <div id="7947eac1-05fa-4f5a-8bfc-cfb84d24b970" class="plotly-graph-div" style="height:400px; width:700px;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("7947eac1-05fa-4f5a-8bfc-cfb84d24b970")) {                    Plotly.newPlot(                        "7947eac1-05fa-4f5a-8bfc-cfb84d24b970",                        [{"base":0,"marker":{"color":"#01B8AA"},"offsetgroup":"0","orientation":"h","showlegend":false,"x":[0.0017458917745293609],"y":["Drift Score"],"type":"bar","xaxis":"x","yaxis":"y"},{"marker":{"color":"#00008b"},"name":"Train Dataset","x":["0","1","2","3","4","5","6","7","8","9"],"y":[0.0992,0.1131,0.1035,0.1018,0.0956,0.0867,0.0961,0.1032,0.0978,0.103],"type":"bar","xaxis":"x2","yaxis":"y2"},{"marker":{"color":"#69b3a2"},"name":"Test Dataset","x":["0","1","2","3","4","5","6","7","8","9"],"y":[0.1009,0.1035,0.1044,0.1009,0.0969,0.0869,0.0969,0.1104,0.093,0.1062],"type":"bar","xaxis":"x2","yaxis":"y2"}],                        {"template":{"data":{"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"choropleth":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"choropleth"}],"contour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"contour"}],"contourcarpet":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"contourcarpet"}],"heatmap":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmap"}],"heatmapgl":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmapgl"}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"histogram2d":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2d"}],"histogram2dcontour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2dcontour"}],"mesh3d":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"mesh3d"}],"parcoords":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"parcoords"}],"pie":[{"automargin":true,"type":"pie"}],"scatter":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter"}],"scatter3d":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter3d"}],"scattercarpet":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattercarpet"}],"scattergeo":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergeo"}],"scattergl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergl"}],"scattermapbox":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattermapbox"}],"scatterpolar":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolar"}],"scatterpolargl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolargl"}],"scatterternary":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterternary"}],"surface":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"surface"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}]},"layout":{"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"autotypenumbers":"strict","coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]],"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]},"colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"geo":{"bgcolor":"white","lakecolor":"white","landcolor":"#E5ECF6","showlakes":true,"showland":true,"subunitcolor":"white"},"hoverlabel":{"align":"left"},"hovermode":"closest","mapbox":{"style":"light"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"ternary":{"aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"title":{"x":0.05},"xaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2},"yaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2}}},"xaxis":{"anchor":"y","domain":[0.0,1.0],"showgrid":false,"gridcolor":"black","linecolor":"black","range":[0,0.4],"dtick":0.05,"fixedrange":true},"yaxis":{"anchor":"x","domain":[0.9200000000000002,1.0],"showgrid":false,"showline":false,"showticklabels":false,"zeroline":false,"color":"black","fixedrange":true},"xaxis2":{"anchor":"y2","domain":[0.0,1.0],"type":"category"},"yaxis2":{"anchor":"x2","domain":[0.0,0.7200000000000001],"fixedrange":true,"range":[0,0.12441000000000002],"title":{"text":"Frequency"}},"annotations":[{"font":{"size":16},"showarrow":false,"text":"Drift Score (PSI)","x":0.5,"xanchor":"center","xref":"paper","y":1.0000000000000002,"yanchor":"bottom","yref":"paper"},{"font":{"size":16},"showarrow":false,"text":"Distribution Plot","x":0.5,"xanchor":"center","xref":"paper","y":0.7200000000000001,"yanchor":"bottom","yref":"paper"}],"legend":{"title":{"text":"Legend"},"yanchor":"top","y":0.6},"title":{"text":"Samples Per Class","x":0.5,"xanchor":"center"},"width":700,"height":400,"bargroupgap":0},                        {"responsive": true}                    ).then(function(){
                            
    var gd = document.getElementById('7947eac1-05fa-4f5a-8bfc-cfb84d24b970');
    var x = new MutationObserver(function (mutations, observer) {{
            var display = window.getComputedStyle(gd).display;
            if (!display || display === 'none') {{
                console.log([gd, 'removed!']);
                Plotly.purge(gd);
                observer.disconnect();
            }}
    }});

    // Listen for the removal of the full notebook cells
    var notebookContainer = gd.closest('#notebook-container');
    if (notebookContainer) {{
        x.observe(notebookContainer, {childList: true});
    }}

    // Listen for the clearing of the current output cell
    var outputEl = gd.closest('.output');
    if (outputEl) {{
        x.observe(outputEl, {childList: true});
    }}

                            })                };                });            </script>        </div><div><p style="font-size:0.9em;line-height:1;"><i>Note - data sampling: Running on 10000 <b>train</b> data samples out of 60000. Sample size can be controlled with the "n_samples" parameter.</i></p></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 180-181

As we can see, the condition alerts us to the present of drift in the prediction.

.. GENERATED FROM PYTHON SOURCE LINES 183-190

Results
-------
We can see the check successfully detects the (expected) drift in class 0 distribution
between the train and test sets. It means the the model correctly predicted 0 for
those samples and so we're seeing drift in the predictions as well as the labels.
We note that this check enabled us to detect the presence of label drift (in this case)
without needing actual labels for the test data.

.. GENERATED FROM PYTHON SOURCE LINES 192-194

But how does this affect the performance of the model?
------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 194-197

.. code-block:: default


    ClassPerformance().run(mod_train_ds, mod_test_ds, model)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Validating Input:   0%| | 0/1 [00:00<?, ? /s]                                                 Ingesting Batches - Train Dataset:   0%|                                                                                                                                                             | 0/157 [00:00<?, ? Batch/s]    Ingesting Batches - Train Dataset:   6%|##########                                                                                                                                                   | 10/157 [00:00<00:01, 92.13 Batch/s]    Ingesting Batches - Train Dataset:  13%|####################                                                                                                                                         | 20/157 [00:00<00:01, 91.68 Batch/s]    Ingesting Batches - Train Dataset:  19%|##############################                                                                                                                               | 30/157 [00:00<00:01, 91.92 Batch/s]    Ingesting Batches - Train Dataset:  25%|########################################                                                                                                                     | 40/157 [00:00<00:01, 92.42 Batch/s]    Ingesting Batches - Train Dataset:  32%|##################################################                                                                                                           | 50/157 [00:00<00:01, 93.38 Batch/s]    Ingesting Batches - Train Dataset:  38%|############################################################                                                                                                 | 60/157 [00:00<00:01, 92.08 Batch/s]    Ingesting Batches - Train Dataset:  45%|######################################################################                                                                                       | 70/157 [00:00<00:00, 92.77 Batch/s]    Ingesting Batches - Train Dataset:  51%|################################################################################                                                                             | 80/157 [00:00<00:00, 93.40 Batch/s]    Ingesting Batches - Train Dataset:  57%|##########################################################################################                                                                   | 90/157 [00:00<00:00, 93.37 Batch/s]    Ingesting Batches - Train Dataset:  64%|####################################################################################################                                                         | 100/157 [00:01<00:00, 93.30 Batch/s]    Ingesting Batches - Train Dataset:  70%|##############################################################################################################                                               | 110/157 [00:01<00:00, 93.08 Batch/s]    Ingesting Batches - Train Dataset:  76%|########################################################################################################################                                     | 120/157 [00:01<00:00, 93.22 Batch/s]    Ingesting Batches - Train Dataset:  83%|##################################################################################################################################                           | 130/157 [00:01<00:00, 92.71 Batch/s]    Ingesting Batches - Train Dataset:  89%|############################################################################################################################################                 | 140/157 [00:01<00:00, 92.58 Batch/s]    Ingesting Batches - Train Dataset:  96%|######################################################################################################################################################       | 150/157 [00:01<00:00, 92.18 Batch/s]                                                                                                                                                                                                                                               Ingesting Batches - Test Dataset:   0%|                                                                                                                                                             | 0/157 [00:00<?, ? Batch/s]    Ingesting Batches - Test Dataset:   6%|##########                                                                                                                                                   | 10/157 [00:00<00:01, 91.57 Batch/s]    Ingesting Batches - Test Dataset:  13%|####################                                                                                                                                         | 20/157 [00:00<00:01, 92.06 Batch/s]    Ingesting Batches - Test Dataset:  19%|##############################                                                                                                                               | 30/157 [00:00<00:01, 91.42 Batch/s]    Ingesting Batches - Test Dataset:  25%|########################################                                                                                                                     | 40/157 [00:00<00:01, 92.21 Batch/s]    Ingesting Batches - Test Dataset:  32%|##################################################                                                                                                           | 50/157 [00:00<00:01, 92.64 Batch/s]    Ingesting Batches - Test Dataset:  38%|############################################################                                                                                                 | 60/157 [00:00<00:01, 93.09 Batch/s]    Ingesting Batches - Test Dataset:  45%|######################################################################                                                                                       | 70/157 [00:00<00:00, 92.88 Batch/s]    Ingesting Batches - Test Dataset:  51%|################################################################################                                                                             | 80/157 [00:00<00:00, 92.46 Batch/s]    Ingesting Batches - Test Dataset:  57%|##########################################################################################                                                                   | 90/157 [00:00<00:00, 92.24 Batch/s]    Ingesting Batches - Test Dataset:  64%|####################################################################################################                                                         | 100/157 [00:01<00:00, 90.00 Batch/s]    Ingesting Batches - Test Dataset:  70%|##############################################################################################################                                               | 110/157 [00:01<00:00, 91.34 Batch/s]    Ingesting Batches - Test Dataset:  76%|########################################################################################################################                                     | 120/157 [00:01<00:00, 92.04 Batch/s]    Ingesting Batches - Test Dataset:  83%|##################################################################################################################################                           | 130/157 [00:01<00:00, 89.77 Batch/s]    Ingesting Batches - Test Dataset:  89%|############################################################################################################################################                 | 140/157 [00:01<00:00, 89.77 Batch/s]    Ingesting Batches - Test Dataset:  96%|######################################################################################################################################################       | 150/157 [00:01<00:00, 90.53 Batch/s]                                                                                                                                                                                                                                              Computing Check:   0%| | 0/1 [00:00<?, ? Check/s]                                                 

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js"
        integrity="sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg=="
        crossorigin="anonymous"
        referrerpolicy="no-referrer">
    </script>

    <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
    <script type="text/javascript">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>
    <script type="text/javascript">
        if (typeof require !== 'undefined') {
            require.undef("plotly");
            requirejs.config({
                paths: {'plotly': ['https://cdn.plot.ly/plotly-2.8.3.min']}
            });
            require(
                ['plotly'],
                function(Plotly) {
                    window._Plotly = Plotly;
                    window.Plotly = Plotly;
                    console.log('Loaded plotly successfully');
                },
                function() {console.log('Failed to load plotly')}
            );
        } else {
            console.log('requirejs is not present');
        }
    </script>
    <h4><b>Class Performance</b></h4><p>Summarize given metrics on a dataset and model.</p><h5><b>Additional Outputs</b></h5><div>                            <div id="5686d70a-bc69-4a96-9b31-16b218774bfe" class="plotly-graph-div" style="height:525px; width:100%;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("5686d70a-bc69-4a96-9b31-16b218774bfe")) {                    Plotly.newPlot(                        "5686d70a-bc69-4a96-9b31-16b218774bfe",                        [{"alignmentgroup":"True","bingroup":"x","histfunc":"sum","hovertemplate":"Dataset=Train<br>Metric=Recall<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>","legendgroup":"Train","marker":{"color":"#00008b","pattern":{"shape":""}},"name":"Train","offsetgroup":"Train","orientation":"v","showlegend":true,"x":["0","6","1","2","7","5","3","4","8","9"],"xaxis":"x","y":[0.9949238578680203,0.9936708860759493,0.9885361552028219,0.9882237487733072,0.9853515625,0.9806157354618016,0.9804496578690127,0.9803108808290155,0.9767911200807265,0.971953578336557],"yaxis":"y","type":"histogram"},{"alignmentgroup":"True","bingroup":"x","histfunc":"sum","hovertemplate":"Dataset=Train<br>Metric=Precision<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>","legendgroup":"Train","marker":{"color":"#00008b","pattern":{"shape":""}},"name":"Train","offsetgroup":"Train","orientation":"v","showlegend":false,"x":["5","1","8","4","0","3","6","7","9","2"],"xaxis":"x2","y":[0.9919261822376009,0.9911582670203359,0.9897750511247444,0.9895397489539749,0.9879032258064516,0.9852652259332023,0.9802289281997919,0.9777131782945736,0.9757281553398058,0.9729468599033816],"yaxis":"y2","type":"histogram"},{"alignmentgroup":"True","bingroup":"x","histfunc":"sum","hovertemplate":"Dataset=Test<br>Metric=Recall<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>","legendgroup":"Test","marker":{"color":"#69b3a2","pattern":{"shape":""}},"name":"Test","offsetgroup":"Test","orientation":"v","showlegend":true,"x":["0","6","2","7","3","9","4","5","8","1"],"xaxis":"x","y":[1.0,0.9947145877378436,0.9874152952565344,0.9844890510948905,0.9794117647058823,0.978240302743614,0.9765066394279878,0.9683972911963883,0.9653361344537815,0.5626025150355386],"yaxis":"y","type":"histogram"},{"alignmentgroup":"True","bingroup":"x","histfunc":"sum","hovertemplate":"Dataset=Test<br>Metric=Precision<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>","legendgroup":"Test","marker":{"color":"#69b3a2","pattern":{"shape":""}},"name":"Test","offsetgroup":"Test","orientation":"v","showlegend":false,"x":["1","3","8","5","4","7","2","9","6","0"],"xaxis":"x2","y":[0.9942028985507246,0.9900891972249752,0.9881720430107527,0.9873417721518988,0.9865841073271414,0.9773550724637681,0.9770114942528736,0.9736346516007532,0.9711042311661506,0.2001982160555005],"yaxis":"y2","type":"histogram"}],                        {"template":{"data":{"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"choropleth":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"choropleth"}],"contour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"contour"}],"contourcarpet":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"contourcarpet"}],"heatmap":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmap"}],"heatmapgl":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmapgl"}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"histogram2d":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2d"}],"histogram2dcontour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2dcontour"}],"mesh3d":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"mesh3d"}],"parcoords":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"parcoords"}],"pie":[{"automargin":true,"type":"pie"}],"scatter":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter"}],"scatter3d":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter3d"}],"scattercarpet":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattercarpet"}],"scattergeo":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergeo"}],"scattergl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergl"}],"scattermapbox":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattermapbox"}],"scatterpolar":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolar"}],"scatterpolargl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolargl"}],"scatterternary":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterternary"}],"surface":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"surface"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}]},"layout":{"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"autotypenumbers":"strict","coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]],"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]},"colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"geo":{"bgcolor":"white","lakecolor":"white","landcolor":"#E5ECF6","showlakes":true,"showland":true,"subunitcolor":"white"},"hoverlabel":{"align":"left"},"hovermode":"closest","mapbox":{"style":"light"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"ternary":{"aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"title":{"x":0.05},"xaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2},"yaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2}}},"xaxis":{"anchor":"y","domain":[0.0,0.475],"title":{"text":"Class"},"type":"category"},"yaxis":{"anchor":"x","domain":[0.0,1.0],"title":{"text":"Value"},"showticklabels":true},"xaxis2":{"anchor":"y2","domain":[0.525,1.0],"matches":"x","title":{"text":"Class"},"type":"category"},"yaxis2":{"anchor":"x2","domain":[0.0,1.0],"showticklabels":true,"title":{"text":"Value"}},"annotations":[{"font":{},"showarrow":false,"text":"Recall","x":0.2375,"xanchor":"center","xref":"paper","y":1.0,"yanchor":"bottom","yref":"paper"},{"font":{},"showarrow":false,"text":"Precision","x":0.7625,"xanchor":"center","xref":"paper","y":1.0,"yanchor":"bottom","yref":"paper"}],"legend":{"title":{"text":"Dataset"},"tracegroupgap":0},"margin":{"t":60},"barmode":"group"},                        {"responsive": true}                    ).then(function(){
                            
    var gd = document.getElementById('5686d70a-bc69-4a96-9b31-16b218774bfe');
    var x = new MutationObserver(function (mutations, observer) {{
            var display = window.getComputedStyle(gd).display;
            if (!display || display === 'none') {{
                console.log([gd, 'removed!']);
                Plotly.purge(gd);
                observer.disconnect();
            }}
    }});

    // Listen for the removal of the full notebook cells
    var notebookContainer = gd.closest('#notebook-container');
    if (notebookContainer) {{
        x.observe(notebookContainer, {childList: true});
    }}

    // Listen for the clearing of the current output cell
    var outputEl = gd.closest('.output');
    if (outputEl) {{
        x.observe(outputEl, {childList: true});
    }}

                            })                };                });            </script>        </div><div><p style="font-size:0.9em;line-height:1;"><i>Note - data sampling: Running on 10000 <b>train</b> data samples out of 60000. Sample size can be controlled with the "n_samples" parameter.</i></p></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 198-200

Inferring the results
---------------------

.. GENERATED FROM PYTHON SOURCE LINES 200-204

.. code-block:: default


    # We can see the drop in the precision of class 0, which was caused by the class
    # imbalance indicated earlier by the label drift check.








.. GENERATED FROM PYTHON SOURCE LINES 205-207

Run the check on an Object Detection task (COCO)
================================================

.. GENERATED FROM PYTHON SOURCE LINES 207-214

.. code-block:: default


    from deepchecks.vision.datasets.detection.coco import load_dataset, load_model

    train_ds = load_dataset(train=True, object_type='VisionData')
    test_ds = load_dataset(train=False, object_type='VisionData')
    model = load_model(pretrained=True)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Downloading: "https://github.com/ultralytics/yolov5/archive/v6.1.zip" to /home/runner/.cache/torch/hub/v6.1.zip
    Downloading https://github.com/ultralytics/yolov5/releases/download/v6.1/yolov5s.pt to yolov5s.pt...
      0%|          | 0.00/14.1M [00:00<?, ?B/s]    100%|##########| 14.1M/14.1M [00:00<00:00, 180MB/s]





.. GENERATED FROM PYTHON SOURCE LINES 215-219

.. code-block:: default


    check = TrainTestPredictionDrift()
    check.run(train_ds, test_ds, model)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Validating Input:   0%| | 0/1 [00:00<?, ? /s]    Validating Input: 100%|#| 1/1 [00:17<00:00, 17.73s/ ]                                                         Ingesting Batches - Train Dataset:   0%|  | 0/2 [00:00<?, ? Batch/s]    Ingesting Batches - Train Dataset:  50%|# | 1/2 [00:08<00:08,  8.81s/ Batch]    Ingesting Batches - Train Dataset: 100%|##| 2/2 [00:17<00:00,  8.82s/ Batch]                                                                                Ingesting Batches - Test Dataset:   0%|  | 0/2 [00:00<?, ? Batch/s]    Ingesting Batches - Test Dataset:  50%|# | 1/2 [00:08<00:08,  8.68s/ Batch]    Ingesting Batches - Test Dataset: 100%|##| 2/2 [00:17<00:00,  8.74s/ Batch]                                                                               Computing Check:   0%| | 0/1 [00:00<?, ? Check/s]    Computing Check: 100%|#| 1/1 [00:00<00:00,  6.51 Check/s]                                                         

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    <script
        src="https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js"
        integrity="sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg=="
        crossorigin="anonymous"
        referrerpolicy="no-referrer">
    </script>

    <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
    <script type="text/javascript">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: "STIX-Web"}});}</script>
    <script type="text/javascript">
        if (typeof require !== 'undefined') {
            require.undef("plotly");
            requirejs.config({
                paths: {'plotly': ['https://cdn.plot.ly/plotly-2.8.3.min']}
            });
            require(
                ['plotly'],
                function(Plotly) {
                    window._Plotly = Plotly;
                    window.Plotly = Plotly;
                    console.log('Loaded plotly successfully');
                },
                function() {console.log('Failed to load plotly')}
            );
        } else {
            console.log('requirejs is not present');
        }
    </script>
    <h4><b>Train Test Prediction Drift</b></h4><p>    Calculate prediction drift between train dataset and test dataset, using statistical measures.</p><h5><b>Additional Outputs</b></h5><div><span>The Drift score is a measure for the difference between two distributions. In this check, drift is measured for the distribution of the following prediction properties: ['Samples Per Class', 'Bounding Box Area (in pixels)', 'Number of Bounding Boxes Per Image'].</span></div><div>                            <div id="deaa9bab-9357-4344-a6f7-a5a63f077d1a" class="plotly-graph-div" style="height:400px; width:700px;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("deaa9bab-9357-4344-a6f7-a5a63f077d1a")) {                    Plotly.newPlot(                        "deaa9bab-9357-4344-a6f7-a5a63f077d1a",                        [{"base":0,"marker":{"color":"#01B8AA"},"offsetgroup":"0","orientation":"h","showlegend":false,"x":[0.1],"y":["Drift Score"],"type":"bar","xaxis":"x","yaxis":"y"},{"base":0.1,"marker":{"color":"#F2C80F"},"offsetgroup":"0","orientation":"h","showlegend":false,"x":[0.1],"y":["Drift Score"],"type":"bar","xaxis":"x","yaxis":"y"},{"base":0.2,"marker":{"color":"#FE9666"},"offsetgroup":"0","orientation":"h","showlegend":false,"x":[0.09999999999999998],"y":["Drift Score"],"type":"bar","xaxis":"x","yaxis":"y"},{"base":0.3,"marker":{"color":"#FD625E"},"offsetgroup":"0","orientation":"h","showlegend":false,"x":[0.07412445789008804],"y":["Drift Score"],"type":"bar","xaxis":"x","yaxis":"y"},{"marker":{"color":"#00008b"},"name":"Train Dataset","x":["book","bowl","chair","donut","knife","person","spoon","teddy bear","umbrella","wine glass"],"y":[0.009237875288683603,0.04157043879907621,0.03233256351039261,0.0,0.03695150115473441,0.279445727482679,0.03002309468822171,0.004618937644341801,0.03464203233256351,0.04387990762124711],"type":"bar","xaxis":"x2","yaxis":"y2"},{"marker":{"color":"#69b3a2"},"name":"Test Dataset","x":["book","bowl","chair","donut","knife","person","spoon","teddy bear","umbrella","wine glass"],"y":[0.03559870550161812,0.009708737864077669,0.08090614886731391,0.061488673139158574,0.0,0.313915857605178,0.003236245954692557,0.03559870550161812,0.0,0.006472491909385114],"type":"bar","xaxis":"x2","yaxis":"y2"}],                        {"template":{"data":{"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"choropleth":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"choropleth"}],"contour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"contour"}],"contourcarpet":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"contourcarpet"}],"heatmap":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmap"}],"heatmapgl":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmapgl"}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"histogram2d":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2d"}],"histogram2dcontour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2dcontour"}],"mesh3d":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"mesh3d"}],"parcoords":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"parcoords"}],"pie":[{"automargin":true,"type":"pie"}],"scatter":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter"}],"scatter3d":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter3d"}],"scattercarpet":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattercarpet"}],"scattergeo":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergeo"}],"scattergl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergl"}],"scattermapbox":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattermapbox"}],"scatterpolar":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolar"}],"scatterpolargl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolargl"}],"scatterternary":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterternary"}],"surface":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"surface"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}]},"layout":{"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"autotypenumbers":"strict","coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]],"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]},"colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"geo":{"bgcolor":"white","lakecolor":"white","landcolor":"#E5ECF6","showlakes":true,"showland":true,"subunitcolor":"white"},"hoverlabel":{"align":"left"},"hovermode":"closest","mapbox":{"style":"light"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"ternary":{"aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"title":{"x":0.05},"xaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2},"yaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2}}},"xaxis":{"anchor":"y","domain":[0.0,1.0],"showgrid":false,"gridcolor":"black","linecolor":"black","range":[0,0.47412445789008806],"dtick":0.05,"fixedrange":true},"yaxis":{"anchor":"x","domain":[0.9400000000000001,1.0],"showgrid":false,"showline":false,"showticklabels":false,"zeroline":false,"color":"black","fixedrange":true},"xaxis2":{"anchor":"y2","domain":[0.0,1.0],"type":"category"},"yaxis2":{"anchor":"x2","domain":[0.26,0.74],"fixedrange":true,"range":[0,0.3453074433656958],"title":{"text":"Frequency"}},"xaxis3":{"anchor":"y3","domain":[0.0,1.0]},"yaxis3":{"anchor":"x3","domain":[0.0,0.06]},"annotations":[{"font":{"size":16},"showarrow":false,"text":"Drift Score (PSI)","x":0.5,"xanchor":"center","xref":"paper","y":1.0,"yanchor":"bottom","yref":"paper"},{"font":{"size":16},"showarrow":false,"text":"Distribution Plot","x":0.5,"xanchor":"center","xref":"paper","y":0.74,"yanchor":"bottom","yref":"paper"},{"showarrow":false,"text":"* Showing the top 10 largest difference between categories out of total 66 categories.<br>Shown data is 51.27% of train data and 54.69% of test data.","x":0,"xanchor":"left","xref":"paper","y":-0.2,"yref":"paper"}],"legend":{"title":{"text":"Legend"},"yanchor":"top","y":0.6},"title":{"text":"Samples Per Class","x":0.5,"xanchor":"center"},"width":700,"height":400,"bargroupgap":0},                        {"responsive": true}                    ).then(function(){
                            
    var gd = document.getElementById('deaa9bab-9357-4344-a6f7-a5a63f077d1a');
    var x = new MutationObserver(function (mutations, observer) {{
            var display = window.getComputedStyle(gd).display;
            if (!display || display === 'none') {{
                console.log([gd, 'removed!']);
                Plotly.purge(gd);
                observer.disconnect();
            }}
    }});

    // Listen for the removal of the full notebook cells
    var notebookContainer = gd.closest('#notebook-container');
    if (notebookContainer) {{
        x.observe(notebookContainer, {childList: true});
    }}

    // Listen for the clearing of the current output cell
    var outputEl = gd.closest('.output');
    if (outputEl) {{
        x.observe(outputEl, {childList: true});
    }}

                            })                };                });            </script>        </div><div>                            <div id="105a3575-533c-482e-86df-d4d26afc9e9e" class="plotly-graph-div" style="height:400px; width:700px;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("105a3575-533c-482e-86df-d4d26afc9e9e")) {                    Plotly.newPlot(                        "105a3575-533c-482e-86df-d4d26afc9e9e",                        [{"base":0,"marker":{"color":"#01B8AA"},"offsetgroup":"0","orientation":"h","showlegend":false,"x":[0.08510928961748633],"y":["Drift Score"],"type":"bar","xaxis":"x","yaxis":"y"},{"fill":"tozeroy","line":{"color":"#00008b","shape":"spline"},"name":"Train Dataset","x":[0.0,0.26,0.7346938775510204,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.1199999999999992,1.469387755102041,1.8199999999999985,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.2040816326530615,2.6400000000000006,2.719999999999999,2.938775510204082,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.673469387755102,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.408163265306123,4.799999999999997,4.828125,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.142857142857143,5.3600000000000065,5.799999999999997,5.877551020408164,6.0,6.0,6.32,6.612244897959184,6.765625,6.880000000000003,7.0,7.0,7.140000000000001,7.346938775510204,8.0,8.0,8.0,8.0,8.081632653061225,8.660000000000004,8.816326530612246,8.880000000000003,9.280000000000001,9.551020408163266,9.920000000000002,10.0,10.0,10.285714285714286,10.700000000000003,11.0,11.0,11.0,11.020408163265307,11.755102040816327,11.96,12.0,12.489795918367347,12.960000000000008,13.18,13.224489795918368,13.959183673469388,14.693877551020408,14.879999999999995,15.428571428571429,16.16326530612245,16.700000000000003,16.89795918367347,16.960000000000008,17.63265306122449,17.96,18.367346938775512,19.102040816326532,19.836734693877553,20.440000000000012,20.571428571428573,21.306122448979593,22.040816326530614,22.480000000000004,22.775510204081634,23.510204081632654,23.740000000000002,24.244897959183675,24.979591836734695,25.714285714285715,26.448979591836736,27.183673469387756,27.918367346938776,28.653061224489797,29.387755102040817,30.122448979591837,30.857142857142858,31.591836734693878,32.3265306122449,33.06122448979592,33.79591836734694,34.53061224489796,35.26530612244898,36.0],"y":[0.05610123294035901,0.06381952447485155,0.07778826147644105,0.08511454332468843,0.08511454332468843,0.08511454332468843,0.08511454332468843,0.08511454332468843,0.08511454332468843,0.08511454332468843,0.08511454332468843,0.08511454332468843,0.08511454332468843,0.08511454332468843,0.08511454332468843,0.08511454332468843,0.08511454332468843,0.08511454332468843,0.08511454332468843,0.088229771535155,0.09635077449433276,0.10272210866018933,0.10518087708721663,0.10518087708721663,0.10518087708721663,0.10518087708721663,0.10518087708721663,0.10518087708721663,0.10518087708721663,0.10518087708721663,0.10518087708721663,0.10518087708721663,0.10518087708721663,0.10518087708721663,0.10518087708721663,0.10518087708721663,0.10518087708721663,0.10724679673299384,0.10900773339814852,0.10894219257093449,0.10817702025820225,0.10781546848483356,0.10781546848483356,0.10781546848483356,0.10781546848483356,0.10781546848483356,0.10781546848483356,0.10781546848483356,0.10781546848483356,0.10781546848483356,0.10781546848483356,0.10781546848483356,0.10781546848483356,0.10781546848483356,0.10781546848483356,0.10025927150476563,0.09485723538286599,0.09485723538286599,0.09485723538286599,0.09485723538286599,0.09485723538286599,0.09485723538286599,0.09485723538286599,0.08734092475734596,0.07997984659376547,0.07946153970183498,0.07634940558762725,0.07634940558762725,0.07634940558762725,0.07634940558762725,0.07634940558762725,0.07634940558762725,0.07634940558762725,0.07634940558762725,0.07385078234349145,0.07024002266641008,0.0637243980750046,0.06269238225424205,0.06113265539380002,0.06113265539380002,0.05743711469084275,0.05448415909781707,0.053066955495643865,0.05205939608437632,0.05104106201650721,0.05104106201650721,0.049895445063160807,0.048268152976108446,0.04342328525045804,0.04342328525045804,0.04342328525045804,0.04342328525045804,0.042833812468249965,0.03872449469148295,0.03764096379731339,0.03720434351348881,0.03454058752495398,0.032829679966748605,0.030638568012003854,0.030184393304365294,0.030184393304365294,0.028617860320449308,0.026473225828597673,0.024984208880769285,0.024984208880769285,0.024984208880769285,0.02488423614007306,0.021354084555531092,0.02039300389832054,0.020207114459372528,0.018001145622570592,0.016076597936934826,0.015270207817595579,0.015115696870330292,0.013039029891358597,0.011910267486442052,0.011763353167049344,0.011580908604896812,0.011656620395629152,0.011689522488716906,0.011660710435360865,0.011645738451928721,0.011287595836958195,0.01099715099678364,0.010574450727590563,0.009839620974065084,0.00944682503899846,0.009516387665292846,0.009577085604382472,0.01011438267911529,0.010659811601012415,0.010769838795549337,0.010687987500392229,0.009820496268024859,0.009354145416394394,0.008063887878679203,0.005821493390394606,0.0036542825453788285,0.001978611066442813,0.0009183788503166757,0.00036367923652164233,0.00012280523460511794,3.752182722308794e-05,2.050952437093256e-05,4.7673715881299806e-05,0.0001462351233216187,0.00038792227972351325,0.0008630326098501642,0.0016075622045391479,0.0025068417913412418,0.0032726719998471794,0.0035767973433273224],"type":"scatter","xaxis":"x2","yaxis":"y2"},{"line":{"color":"#00008b","dash":"dash"},"mode":"lines+markers","name":"Train Mean","x":[6.765625,6.765625],"y":[0,0.053066955495643865],"type":"scatter","xaxis":"x2","yaxis":"y2"},{"line":{"color":"#00008b"},"mode":"lines","name":"Train Median","x":[4.0,4.0],"y":[0,0.09485723538286599],"type":"scatter","xaxis":"x2","yaxis":"y2"},{"fill":"tozeroy","line":{"color":"#69b3a2","shape":"spline"},"name":"Test Dataset","x":[0.0,0.26,0.7346938775510204,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.1199999999999992,1.469387755102041,1.8199999999999985,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,2.2040816326530615,2.6400000000000006,2.719999999999999,2.938775510204082,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.673469387755102,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.408163265306123,4.799999999999997,4.828125,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.142857142857143,5.3600000000000065,5.799999999999997,5.877551020408164,6.0,6.0,6.32,6.612244897959184,6.765625,6.880000000000003,7.0,7.0,7.140000000000001,7.346938775510204,8.0,8.0,8.0,8.0,8.081632653061225,8.660000000000004,8.816326530612246,8.880000000000003,9.280000000000001,9.551020408163266,9.920000000000002,10.0,10.0,10.285714285714286,10.700000000000003,11.0,11.0,11.0,11.020408163265307,11.755102040816327,11.96,12.0,12.489795918367347,12.960000000000008,13.18,13.224489795918368,13.959183673469388,14.693877551020408,14.879999999999995,15.428571428571429,16.16326530612245,16.700000000000003,16.89795918367347,16.960000000000008,17.63265306122449,17.96,18.367346938775512,19.102040816326532,19.836734693877553,20.440000000000012,20.571428571428573,21.306122448979593,22.040816326530614,22.480000000000004,22.775510204081634,23.510204081632654,23.740000000000002,24.244897959183675,24.979591836734695,25.714285714285715,26.448979591836736,27.183673469387756,27.918367346938776,28.653061224489797,29.387755102040817,30.122448979591837,30.857142857142858,31.591836734693878,32.3265306122449,33.06122448979592,33.79591836734694,34.53061224489796,35.26530612244898,36.0],"y":[0.07708549336368418,0.09387302834913377,0.12257165159545692,0.13535320909936094,0.13535320909936094,0.13535320909936094,0.13535320909936094,0.13535320909936094,0.13535320909936094,0.13535320909936094,0.13535320909936094,0.13535320909936094,0.13535320909936094,0.13535320909936094,0.13535320909936094,0.13535320909936094,0.13535320909936094,0.13535320909936094,0.13535320909936094,0.1399961614762229,0.14880369028160081,0.1503469435073722,0.1485345894977763,0.1485345894977763,0.1485345894977763,0.1485345894977763,0.1485345894977763,0.1485345894977763,0.1485345894977763,0.1485345894977763,0.1485345894977763,0.1485345894977763,0.1485345894977763,0.1485345894977763,0.1485345894977763,0.1485345894977763,0.1485345894977763,0.14471452209510846,0.13229337329625016,0.12966378251486696,0.12234751149882252,0.12031515267317901,0.12031515267317901,0.12031515267317901,0.12031515267317901,0.12031515267317901,0.12031515267317901,0.12031515267317901,0.12031515267317901,0.12031515267317901,0.12031515267317901,0.12031515267317901,0.12031515267317901,0.12031515267317901,0.12031515267317901,0.10088826952932305,0.0940406722761015,0.0940406722761015,0.0940406722761015,0.0940406722761015,0.0940406722761015,0.0940406722761015,0.0940406722761015,0.08716996437441749,0.08099096130509814,0.08052756688778683,0.07758578126901339,0.07758578126901339,0.07758578126901339,0.07758578126901339,0.07758578126901339,0.07758578126901339,0.07758578126901339,0.07758578126901339,0.0749756285751522,0.0707049073763711,0.06119736822584567,0.05946886787537226,0.05675199718604064,0.05675199718604064,0.04993755555530803,0.0444043443678585,0.04185919987001099,0.04013987353920888,0.03850499224217903,0.03850499224217903,0.03681743429868333,0.03474835766917931,0.0312264276633861,0.0312264276633861,0.0312264276633861,0.0312264276633861,0.03106867103787688,0.03136677884627897,0.031781505324942824,0.03197760865707125,0.03339282277496849,0.034311610094197184,0.03513667661781945,0.035221180132974705,0.035221180132974705,0.03520041022288543,0.03426623098458405,0.03299094215251361,0.03299094215251361,0.03299094215251361,0.032888208056947345,0.028064780129537985,0.026385504623324646,0.02604387236530841,0.021602086880805584,0.017237775448365373,0.015310119970056253,0.014935051810844303,0.009611235026620585,0.0057809796563957115,0.005011321434872347,0.00329127494086319,0.002612577799683119,0.003281690098429536,0.003681605848012118,0.003814034347168678,0.00505923551684957,0.005274199961359798,0.00501685764753632,0.0034137659430851356,0.0015837571905902245,0.000632757462862628,0.0005006924230294028,0.00010983861780282312,3.5737097879695526e-05,6.829027513107932e-05,0.00013183619887329815,0.0005798807496959089,0.0008548084534200857,0.001757797758471061,0.0036302083901978764,0.005106811470924008,0.004893533198627256,0.003194108610730064,0.0014201402832347365,0.0004300978189795066,8.872738057192649e-05,1.2468164025144073e-05,1.1934432710896949e-06,7.781359492382282e-08,3.4559194065891404e-09,1.0455051073252636e-10,2.1544833288329028e-12,3.024228094831941e-14,2.8916143803534905e-16,1.883304892543951e-18],"type":"scatter","xaxis":"x2","yaxis":"y2"},{"line":{"color":"#69b3a2","dash":"dash"},"mode":"lines+markers","name":"Test Mean","x":[4.828125,4.828125],"y":[0,0.08052756688778683],"type":"scatter","xaxis":"x2","yaxis":"y2"},{"line":{"color":"#69b3a2"},"mode":"lines","name":"Test Median","x":[3.0,3.0],"y":[0,0.12031515267317901],"type":"scatter","xaxis":"x2","yaxis":"y2"}],                        {"template":{"data":{"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"choropleth":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"choropleth"}],"contour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"contour"}],"contourcarpet":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"contourcarpet"}],"heatmap":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmap"}],"heatmapgl":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmapgl"}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"histogram2d":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2d"}],"histogram2dcontour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2dcontour"}],"mesh3d":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"mesh3d"}],"parcoords":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"parcoords"}],"pie":[{"automargin":true,"type":"pie"}],"scatter":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter"}],"scatter3d":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter3d"}],"scattercarpet":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattercarpet"}],"scattergeo":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergeo"}],"scattergl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergl"}],"scattermapbox":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattermapbox"}],"scatterpolar":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolar"}],"scatterpolargl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolargl"}],"scatterternary":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterternary"}],"surface":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"surface"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}]},"layout":{"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"autotypenumbers":"strict","coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]],"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]},"colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"geo":{"bgcolor":"white","lakecolor":"white","landcolor":"#E5ECF6","showlakes":true,"showland":true,"subunitcolor":"white"},"hoverlabel":{"align":"left"},"hovermode":"closest","mapbox":{"style":"light"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"ternary":{"aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"title":{"x":0.05},"xaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2},"yaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2}}},"xaxis":{"anchor":"y","domain":[0.0,1.0],"showgrid":false,"gridcolor":"black","linecolor":"black","range":[0,0.4],"dtick":0.05,"fixedrange":true},"yaxis":{"anchor":"x","domain":[0.9200000000000002,1.0],"showgrid":false,"showline":false,"showticklabels":false,"zeroline":false,"color":"black","fixedrange":true},"xaxis2":{"anchor":"y2","domain":[0.0,1.0],"fixedrange":false,"range":[0.26,23.740000000000002],"title":{"text":"Number of Bounding Boxes Per Image"}},"yaxis2":{"anchor":"x2","domain":[0.0,0.7200000000000001],"title":{"text":"Probability Density"},"fixedrange":true},"annotations":[{"font":{"size":16},"showarrow":false,"text":"Drift Score (Earth Mover's Distance)","x":0.5,"xanchor":"center","xref":"paper","y":1.0000000000000002,"yanchor":"bottom","yref":"paper"},{"font":{"size":16},"showarrow":false,"text":"Distribution Plot","x":0.5,"xanchor":"center","xref":"paper","y":0.7200000000000001,"yanchor":"bottom","yref":"paper"}],"legend":{"title":{"text":"Legend"},"yanchor":"top","y":0.6},"title":{"text":"Number of Bounding Boxes Per Image","x":0.5,"xanchor":"center"},"width":700,"height":400,"bargroupgap":0},                        {"responsive": true}                    ).then(function(){
                            
    var gd = document.getElementById('105a3575-533c-482e-86df-d4d26afc9e9e');
    var x = new MutationObserver(function (mutations, observer) {{
            var display = window.getComputedStyle(gd).display;
            if (!display || display === 'none') {{
                console.log([gd, 'removed!']);
                Plotly.purge(gd);
                observer.disconnect();
            }}
    }});

    // Listen for the removal of the full notebook cells
    var notebookContainer = gd.closest('#notebook-container');
    if (notebookContainer) {{
        x.observe(notebookContainer, {childList: true});
    }}

    // Listen for the clearing of the current output cell
    var outputEl = gd.closest('.output');
    if (outputEl) {{
        x.observe(outputEl, {childList: true});
    }}

                            })                };                });            </script>        </div><div>                            <div id="8819a6d3-9db3-4ac9-a1e3-63f91424146a" class="plotly-graph-div" style="height:400px; width:700px;"></div>            <script type="text/javascript">                require(["plotly"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("8819a6d3-9db3-4ac9-a1e3-63f91424146a")) {                    Plotly.newPlot(                        "8819a6d3-9db3-4ac9-a1e3-63f91424146a",                        [{"base":0,"marker":{"color":"#01B8AA"},"offsetgroup":"0","orientation":"h","showlegend":false,"x":[0.01238221937828273],"y":["Drift Score"],"type":"bar","xaxis":"x","yaxis":"y"},{"fill":"tozeroy","line":{"color":"#00008b","shape":"spline"},"name":"Train Dataset","x":[37.10152053833008,109.18000854492188,147.666328125,181.2833728027344,213.46283630371096,244.24084411621092,288.14108398437503,309.654794921875,374.7276281738281,379.43372192382816,467.1339294433594,494.3518225097656,532.7771435546875,544.8547998046874,562.3316284179688,603.9962133789062,628.3988452148437,637.8612915039062,669.3140014648437,752.3986791992188,759.5673828125,818.9570922851561,830.2332397460938,957.7402099609377,993.8690820312503,1035.0429345703126,1121.3585156249999,1162.3160546875001,1178.106982421875,1357.6400390625004,1370.497753906251,1473.6469628906252,1748.8001025390633,1764.7797265625002,1933.3173925781252,2012.6846044921879,2183.728701171875,2219.340537109375,2429.6777343750005,2479.671220703125,2793.8108398437507,3041.2399902343755,3177.590546875001,3530.418046875,3695.600957031251,4062.981738281251,4222.739628906251,4431.60302734375,4431.60302734375,4704.6566015625,5040.592011718752,5298.789863281256,5387.08140625,5701.75390625,5701.75390625,6041.7317578125,6195.579804687502,6281.8392446089765,6728.56197265625,7020.938710937503,7028.3362304687535,7611.106250000002,7924.246093749999,8076.224804687497,8604.1176953125,9676.7543359375,9747.055195312505,10556.037851562502,10738.5143359375,11979.0859375,12017.25703125,12442.548007812502,12526.576968679623,13899.809375,13962.665234375005,15166.429726562508,15433.055898437506,16740.290625,16809.860703124992,18771.314692750268,18826.20218750001,19484.689296874996,21219.124921875,23049.182578125008,23160.246736108016,24051.058984375006,24538.885673930345,25016.052416820916,25324.56679687501,25935.50882812501,29840.01703125,31260.790140891564,35292.07609375011,37505.527864962205,39823.90312500012,43344.14999999999,43750.26558903285,49268.04234374996,49280.92593750014,49995.0033131035,55662.33406250009,56239.74103717415,62484.4787612448,66033.17187500001,68729.21648531544,74973.95420938608,76707.21093749981,79222.73499999999,81218.69193345674,87463.42965752738,93708.16738159803,99952.90510566867,102869.68500000011,104042.099375,106197.64282973931,112442.38055380997,118687.11827788061,120834.49906250028,124931.85600195127,131176.5937260219,136103.211875,137421.33145009255,139968.65437500042,143666.0691741632,149910.80689823383,156155.5446223045,162400.28234637514,168645.02007044578,174889.75779451642,181134.49551858706,187379.23324265773,193623.97096672838,199868.70869079902,205293.34750000003,206113.44641486966,212358.1841389403,218602.92186301097,224847.6595870816,231092.39731115225,237337.1350352229,243581.87275929353,249826.6104833642,250191.84187499966,256071.34820743484,262316.0859315055,268560.82365557615,274805.56137964677,281050.29910371744,287295.03682778805,293539.7745518587,299784.51227592933,306029.25],"y":[2.256402510781635e-05,2.260368548930841e-05,2.262461051395279e-05,2.2642744322287576e-05,2.2659976785398135e-05,2.267634331535645e-05,2.2699491987208566e-05,2.271075201199629e-05,2.2744472397885716e-05,2.2746891336028002e-05,2.2791480839206023e-05,2.2805130275575334e-05,2.2824247250070705e-05,2.2830218986828294e-05,2.2838828932261862e-05,2.2859205033754293e-05,2.287104092088668e-05,2.2875610890832837e-05,2.289072263125012e-05,2.293005879026038e-05,2.293341309240917e-05,2.2960958933218547e-05,2.2966139900862664e-05,2.3023631085386602e-05,2.3039554755730293e-05,2.305750411228939e-05,2.309444676353847e-05,2.3111650701324785e-05,2.311822746894534e-05,2.3190798418229026e-05,2.3195839938471085e-05,2.323552809975177e-05,2.3334783227961634e-05,2.3340250561617407e-05,2.3395920091956806e-05,2.3420870583940383e-05,2.3471876675056876e-05,2.3482020122019868e-05,2.3538573637788807e-05,2.3551169027442222e-05,2.3622849642382714e-05,2.3670216592831383e-05,2.3692887035212897e-05,2.3740215625844064e-05,2.3756752701407958e-05,2.3780693604890732e-05,2.3785588706252624e-05,2.3786960970197137e-05,2.3786960970197137e-05,2.3780193290824806e-05,2.3758633356533037e-05,2.3732214172657852e-05,2.3721229693233907e-05,2.3674059113674507e-05,2.3674059113674507e-05,2.360915306991007e-05,2.3575078418213892e-05,2.3554703224253513e-05,2.3434757283160418e-05,2.3343366392924287e-05,2.3340923856604713e-05,2.3128707757746723e-05,2.299888816564337e-05,2.2932013248586747e-05,2.2680649843015245e-05,2.208379169713796e-05,2.2040885773554387e-05,2.1516279945321256e-05,2.139048132689722e-05,2.0470510382246437e-05,2.0440565064949548e-05,2.01010247624793e-05,2.0032708206747343e-05,1.88668558731873e-05,1.8811558662393978e-05,1.772839369661124e-05,1.7483503919817124e-05,1.626802449653972e-05,1.6202944128766573e-05,1.4374818386611403e-05,1.4324215680769751e-05,1.3721314115304076e-05,1.2182787704235717e-05,1.0665324576279492e-05,1.057736790762719e-05,9.890501754189848e-06,9.528823129298086e-06,9.185257042045564e-06,8.968581613498717e-06,8.552316715544167e-06,6.2973887960757735e-06,5.64558970711035e-06,4.228724604397515e-06,3.6829602795923667e-06,3.2521384474311567e-06,2.8102236165061317e-06,2.772154754813833e-06,2.4244792969334003e-06,2.42392637098365e-06,2.3944344569769152e-06,2.204188552415019e-06,2.1861637102695706e-06,1.976153769541137e-06,1.841976806171102e-06,1.735645804472413e-06,1.4895386689157519e-06,1.4240324361650988e-06,1.3327761502590249e-06,1.2641850715769722e-06,1.0751764997305613e-06,9.270755674572861e-07,8.145712782016619e-07,7.706148305761289e-07,7.539216432624253e-07,7.24160311325229e-07,6.395553523795575e-07,5.494246408835447e-07,5.16507583349036e-07,4.5218070765539845e-07,3.5932848143379905e-07,3.037576348963204e-07,2.931200239934921e-07,2.7846080833540105e-07,2.7127918914379184e-07,2.9058888320468533e-07,3.2555607659856787e-07,3.430148723630886e-07,3.2520497865064336e-07,2.850122050259214e-07,2.554650975302507e-07,2.602544733476029e-07,2.9271310455102803e-07,3.2243920502839974e-07,3.255798457886955e-07,3.238940996110129e-07,2.9673197852715806e-07,2.5513892348501303e-07,2.067440286971391e-07,1.5375228420681735e-07,1.0662354984638769e-07,8.081618457258709e-08,8.072148110753835e-08,8.134639000522223e-08,9.740672936424483e-08,1.2487919760104933e-07,1.6981758524586092e-07,2.350039258107994e-07,2.974560339279013e-07,3.1998050539887567e-07,2.8836434671523675e-07,2.2346171551313567e-07,1.5484742843376399e-07],"type":"scatter","xaxis":"x2","yaxis":"y2"},{"line":{"color":"#00008b","dash":"dash"},"mode":"lines+markers","name":"Train Mean","x":[23160.246736108016,23160.246736108016],"y":[0,1.057736790762719e-05],"type":"scatter","xaxis":"x2","yaxis":"y2"},{"line":{"color":"#00008b"},"mode":"lines","name":"Train Median","x":[4431.60302734375,4431.60302734375],"y":[0,2.3786960970197137e-05],"type":"scatter","xaxis":"x2","yaxis":"y2"},{"fill":"tozeroy","line":{"color":"#69b3a2","shape":"spline"},"name":"Test Dataset","x":[37.10152053833008,109.18000854492188,147.666328125,181.2833728027344,213.46283630371096,244.24084411621092,288.14108398437503,309.654794921875,374.7276281738281,379.43372192382816,467.1339294433594,494.3518225097656,532.7771435546875,544.8547998046874,562.3316284179688,603.9962133789062,628.3988452148437,637.8612915039062,669.3140014648437,752.3986791992188,759.5673828125,818.9570922851561,830.2332397460938,957.7402099609377,993.8690820312503,1035.0429345703126,1121.3585156249999,1162.3160546875001,1178.106982421875,1357.6400390625004,1370.497753906251,1473.6469628906252,1748.8001025390633,1764.7797265625002,1933.3173925781252,2012.6846044921879,2183.728701171875,2219.340537109375,2429.6777343750005,2479.671220703125,2793.8108398437507,3041.2399902343755,3177.590546875001,3530.418046875,3695.600957031251,4062.981738281251,4222.739628906251,4431.60302734375,4431.60302734375,4704.6566015625,5040.592011718752,5298.789863281256,5387.08140625,5701.75390625,5701.75390625,6041.7317578125,6195.579804687502,6281.8392446089765,6728.56197265625,7020.938710937503,7028.3362304687535,7611.106250000002,7924.246093749999,8076.224804687497,8604.1176953125,9676.7543359375,9747.055195312505,10556.037851562502,10738.5143359375,11979.0859375,12017.25703125,12442.548007812502,12526.576968679623,13899.809375,13962.665234375005,15166.429726562508,15433.055898437506,16740.290625,16809.860703124992,18771.314692750268,18826.20218750001,19484.689296874996,21219.124921875,23049.182578125008,23160.246736108016,24051.058984375006,24538.885673930345,25016.052416820916,25324.56679687501,25935.50882812501,29840.01703125,31260.790140891564,35292.07609375011,37505.527864962205,39823.90312500012,43344.14999999999,43750.26558903285,49268.04234374996,49280.92593750014,49995.0033131035,55662.33406250009,56239.74103717415,62484.4787612448,66033.17187500001,68729.21648531544,74973.95420938608,76707.21093749981,79222.73499999999,81218.69193345674,87463.42965752738,93708.16738159803,99952.90510566867,102869.68500000011,104042.099375,106197.64282973931,112442.38055380997,118687.11827788061,120834.49906250028,124931.85600195127,131176.5937260219,136103.211875,137421.33145009255,139968.65437500042,143666.0691741632,149910.80689823383,156155.5446223045,162400.28234637514,168645.02007044578,174889.75779451642,181134.49551858706,187379.23324265773,193623.97096672838,199868.70869079902,205293.34750000003,206113.44641486966,212358.1841389403,218602.92186301097,224847.6595870816,231092.39731115225,237337.1350352229,243581.87275929353,249826.6104833642,250191.84187499966,256071.34820743484,262316.0859315055,268560.82365557615,274805.56137964677,281050.29910371744,287295.03682778805,293539.7745518587,299784.51227592933,306029.25],"y":[2.1476788289223657e-05,2.1516499553479497e-05,2.153749660589801e-05,2.1555718924676182e-05,2.1573058497125582e-05,2.158954797832266e-05,2.1612906755580258e-05,2.1624284668915968e-05,2.1658421463329194e-05,2.1660874006264324e-05,2.1706175997896756e-05,2.172007987792706e-05,2.173958297236255e-05,2.174568258241379e-05,2.175448308088287e-05,2.1775339784569022e-05,2.178747439106635e-05,2.1792163620680804e-05,2.1807685543780624e-05,2.184820712872704e-05,2.1851670644376273e-05,2.188016366245116e-05,2.1885533016028773e-05,2.1945344404957594e-05,2.1961989019228777e-05,2.1980794210333227e-05,2.2019649363460336e-05,2.2037816886113995e-05,2.2044774801459713e-05,2.2122056604636498e-05,2.212746213071461e-05,2.2170199250718734e-05,2.22787068256329e-05,2.2284761461722427e-05,2.2346958583272596e-05,2.2375193571505113e-05,2.2433735065641544e-05,2.2445525742628292e-05,2.2512356952697205e-05,2.2527532735316588e-05,2.2616628148250416e-05,2.267915732415521e-05,2.271072142660403e-05,2.278281389726291e-05,2.2811800034383e-05,2.2865342113058896e-05,2.2883917276204985e-05,2.2903896469656173e-05,2.2903896469656173e-05,2.2922661510683665e-05,2.2934334826162328e-05,2.293477570795899e-05,2.2933230849717664e-05,2.2920725573243815e-05,2.2920725573243815e-05,2.2894997730805145e-05,2.2879214328294837e-05,2.2869242511254087e-05,2.280479719851267e-05,2.2751118601934883e-05,2.2749643660225205e-05,2.2615581105487012e-05,2.2529195463157267e-05,2.2483724002681956e-05,2.2308151901304256e-05,2.1870543558581394e-05,2.1838245008898003e-05,2.1436425819128076e-05,2.133839970726428e-05,2.0605829236642162e-05,2.0581573150137717e-05,2.030493794004527e-05,2.024893383619971e-05,1.9277098808122588e-05,1.9230297448239583e-05,1.8301756619070795e-05,1.8088831781085984e-05,1.7016447035386977e-05,1.6958311247451646e-05,1.5295947395177725e-05,1.52491270397386e-05,1.4687913548863266e-05,1.3226918750432915e-05,1.1743079863375896e-05,1.165568558817299e-05,1.0967678979942593e-05,1.0601323304192726e-05,1.0250590220919344e-05,1.0027984184547331e-05,9.597144267995772e-06,7.17862334611999e-06,6.445848571774801e-06,4.766611223702656e-06,4.065103982223887e-06,3.466545671401338e-06,2.7663785985445706e-06,2.698623476013789e-06,1.9667811088902605e-06,1.965400740023487e-06,1.8907749066507066e-06,1.4064857854203445e-06,1.3660423455743244e-06,1.0110559033453137e-06,8.682889713111222e-07,7.850242398440641e-07,6.695078785530428e-07,6.559041866089662e-07,6.499822314718943e-07,6.564964396935394e-07,7.319781427687966e-07,8.592146014514561e-07,9.898199428462505e-07,1.0415311339995853e-06,1.0599553058799408e-06,1.090004990736627e-06,1.1476094219154482e-06,1.1577025041709775e-06,1.1486274011962405e-06,1.111028451943819e-06,9.997201958138964e-07,8.707046433286036e-07,8.316217263369616e-07,7.525688990091582e-07,6.33892985587102e-07,4.417715476629615e-07,2.8729351322833765e-07,1.9366241645277032e-07,1.6642512936489428e-07,1.839979667307215e-07,2.046487673876966e-07,1.937939934965552e-07,1.4792612740373654e-07,9.034986086080022e-08,5.107029711243681e-08,4.671244629610201e-08,2.9216340070957632e-08,4.0050364646848656e-08,8.035214684684144e-08,1.5203704852896714e-07,2.525301625563601e-07,3.671353724038449e-07,4.659722048863893e-07,4.705010418004521e-07,5.15584252846414e-07,5.018326936894538e-07,4.398023893248108e-07,3.589166294714824e-07,2.827054636926078e-07,2.208705946662277e-07,1.710123831943282e-07,1.2580548943778234e-07,8.253053741661758e-08],"type":"scatter","xaxis":"x2","yaxis":"y2"},{"line":{"color":"#69b3a2","dash":"dash"},"mode":"lines+markers","name":"Test Mean","x":[24538.885673930345,24538.885673930345],"y":[0,1.0601323304192726e-05],"type":"scatter","xaxis":"x2","yaxis":"y2"},{"line":{"color":"#69b3a2"},"mode":"lines","name":"Test Median","x":[5701.75390625,5701.75390625],"y":[0,2.2920725573243815e-05],"type":"scatter","xaxis":"x2","yaxis":"y2"}],                        {"template":{"data":{"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"choropleth":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"choropleth"}],"contour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"contour"}],"contourcarpet":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"contourcarpet"}],"heatmap":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmap"}],"heatmapgl":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmapgl"}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"histogram2d":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2d"}],"histogram2dcontour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2dcontour"}],"mesh3d":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"mesh3d"}],"parcoords":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"parcoords"}],"pie":[{"automargin":true,"type":"pie"}],"scatter":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter"}],"scatter3d":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter3d"}],"scattercarpet":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattercarpet"}],"scattergeo":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergeo"}],"scattergl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergl"}],"scattermapbox":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattermapbox"}],"scatterpolar":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolar"}],"scatterpolargl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolargl"}],"scatterternary":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterternary"}],"surface":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"surface"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}]},"layout":{"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"autotypenumbers":"strict","coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]],"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]},"colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"geo":{"bgcolor":"white","lakecolor":"white","landcolor":"#E5ECF6","showlakes":true,"showland":true,"subunitcolor":"white"},"hoverlabel":{"align":"left"},"hovermode":"closest","mapbox":{"style":"light"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"ternary":{"aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"title":{"x":0.05},"xaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2},"yaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2}}},"xaxis":{"anchor":"y","domain":[0.0,1.0],"showgrid":false,"gridcolor":"black","linecolor":"black","range":[0,0.4],"dtick":0.05,"fixedrange":true},"yaxis":{"anchor":"x","domain":[0.9200000000000002,1.0],"showgrid":false,"showline":false,"showticklabels":false,"zeroline":false,"color":"black","fixedrange":true},"xaxis2":{"anchor":"y2","domain":[0.0,1.0],"fixedrange":false,"range":[109.18000854492188,250191.84187499966],"title":{"text":"Bounding Box Area (in pixels)"}},"yaxis2":{"anchor":"x2","domain":[0.0,0.7200000000000001],"title":{"text":"Probability Density"},"fixedrange":true},"annotations":[{"font":{"size":16},"showarrow":false,"text":"Drift Score (Earth Mover's Distance)","x":0.5,"xanchor":"center","xref":"paper","y":1.0000000000000002,"yanchor":"bottom","yref":"paper"},{"font":{"size":16},"showarrow":false,"text":"Distribution Plot","x":0.5,"xanchor":"center","xref":"paper","y":0.7200000000000001,"yanchor":"bottom","yref":"paper"}],"legend":{"title":{"text":"Legend"},"yanchor":"top","y":0.6},"title":{"text":"Bounding Box Area (in pixels)","x":0.5,"xanchor":"center"},"width":700,"height":400,"bargroupgap":0},                        {"responsive": true}                    ).then(function(){
                            
    var gd = document.getElementById('8819a6d3-9db3-4ac9-a1e3-63f91424146a');
    var x = new MutationObserver(function (mutations, observer) {{
            var display = window.getComputedStyle(gd).display;
            if (!display || display === 'none') {{
                console.log([gd, 'removed!']);
                Plotly.purge(gd);
                observer.disconnect();
            }}
    }});

    // Listen for the removal of the full notebook cells
    var notebookContainer = gd.closest('#notebook-container');
    if (notebookContainer) {{
        x.observe(notebookContainer, {childList: true});
    }}

    // Listen for the clearing of the current output cell
    var outputEl = gd.closest('.output');
    if (outputEl) {{
        x.observe(outputEl, {childList: true});
    }}

                            })                };                });            </script>        </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 220-226

Prediction drift is detected!
-----------------------------
We can see that the COCO128 contains a drift in the out of the box dataset. In
addition to the prediction count per class, the prediction drift check for object
detection tasks include drift calculation on certain measurements, like the
bounding box area and the number of bboxes per image.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  13.522 seconds)


.. _sphx_glr_download_checks_gallery_vision_distribution_plot_train_test_prediction_drift.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_train_test_prediction_drift.py <plot_train_test_prediction_drift.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_train_test_prediction_drift.ipynb <plot_train_test_prediction_drift.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
