
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "checks_gallery/vision/model_evaluation/plot_train_test_prediction_drift.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_checks_gallery_vision_model_evaluation_plot_train_test_prediction_drift.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_checks_gallery_vision_model_evaluation_plot_train_test_prediction_drift.py:


.. _plot_vision_train_test_prediction_drift:

Train Test Prediction Drift
***************************

This notebooks provides an overview for using and understanding the vision prediction drift check.

**Structure:**

* `What Is Prediction Drift? <#what-is-prediction-drift>`__
* `Which Prediction Properties Are Used? <#which-prediction-properties-are-used>`__
* `Run Check on a Classification Task <#run-the-check-on-a-classification-task-mnist>`__
* `Run Check on an Object Detection Task <#run-the-check-on-an-object-detection-task-coco>`__

What Is Prediction Drift?
=========================
Drift is simply a change in the distribution of data over time, and it is
also one of the top reasons why machine learning model's performance degrades
over time.

Prediction drift is when drift occurs in the prediction itself.
Calculating prediction drift is especially useful in cases
in which labels are not available for the test dataset, and so a drift in the predictions
is a direct indication that a change that happened in the data has affected the model's
predictions. If labels are available, it's also recommended to run the
:doc:`Label Drift check </checks_gallery/vision/train_test_validation/plot_train_test_label_drift>`.

For more information on drift, please visit our :doc:`drift guide </user-guide/general/drift_guide>`

How Deepchecks Detects Prediction Drift
---------------------------------------

This check detects prediction drift by using :ref:`univariate measures <drift_detection_by_univariate_measure>`
on the prediction properties.

Using Prediction Properties to Detect Prediction Drift
------------------------------------------------------

In computer vision specifically, our predictions may be complex, and measuring their drift
is not a straightforward task. Therefore, we calculate drift on different :doc:`properties of the prediction</user-guide/vision/vision_properties>`,
on which we can directly measure drift.

Which Prediction Properties Are Used?
=====================================

================  ===================================  ==========
Task Type         Property name                        What is it
================  ===================================  ==========
Classification    Samples Per Class                    Number of images per class
Object Detection  Samples Per Class                    Number of bounding boxes per class
Object Detection  Bounding Box Area                    Area of bounding box (height * width)
Object Detection  Number of Bounding Boxes Per Image   Number of bounding box objects in each image
================  ===================================  ==========


Run the Check on a Classification Task (MNIST)
==============================================

.. GENERATED FROM PYTHON SOURCE LINES 63-65

Imports
-------

.. GENERATED FROM PYTHON SOURCE LINES 65-70

.. code-block:: default


    from deepchecks.vision.checks import TrainTestPredictionDrift
    from deepchecks.vision.datasets.classification.mnist import (load_dataset,
                                                                 load_model)








.. GENERATED FROM PYTHON SOURCE LINES 71-73

Loading data and model:
-----------------------

.. GENERATED FROM PYTHON SOURCE LINES 73-78

.. code-block:: default



    train_ds = load_dataset(train=True, batch_size=64, object_type='VisionData')
    test_ds = load_dataset(train=False, batch_size=64, object_type='VisionData')








.. GENERATED FROM PYTHON SOURCE LINES 79-82

.. code-block:: default


    model = load_model()








.. GENERATED FROM PYTHON SOURCE LINES 83-85

Running TrainTestLabelDrift on classification
---------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 85-90

.. code-block:: default


    check = TrainTestPredictionDrift()
    result = check.run(train_ds, test_ds, model)
    result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |#########                                                                                                                                                    | 9/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |##################                                                                                                                                           | 18/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |###########################                                                                                                                                  | 27/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |####################################                                                                                                                         | 36/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |#############################################                                                                                                                | 45/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |######################################################                                                                                                       | 54/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |###############################################################                                                                                              | 63/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |########################################################################                                                                                     | 72/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |#################################################################################                                                                            | 81/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |##########################################################################################                                                                   | 90/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |###################################################################################################                                                          | 99/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |############################################################################################################                                                 | 108/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |####################################################################################################################9                                        | 117/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |##############################################################################################################################                               | 126/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#######################################################################################################################################                      | 135/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |################################################################################################################################################             | 144/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#########################################################################################################################################################    | 153/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |                                                                                                                                                             | 0/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#########                                                                                                                                                    | 9/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |##################                                                                                                                                           | 18/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |###########################                                                                                                                                  | 27/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |####################################                                                                                                                         | 36/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#############################################                                                                                                                | 45/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |######################################################                                                                                                       | 54/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |##############################################################                                                                                               | 62/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |######################################################################                                                                                       | 70/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |##############################################################################                                                                               | 78/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#######################################################################################                                                                      | 87/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |###############################################################################################                                                              | 95/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |########################################################################################################                                                     | 104/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |################################################################################################################9                                            | 113/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |##########################################################################################################################                                   | 122/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |###################################################################################################################################                          | 131/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |############################################################################################################################################                 | 140/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |#####################################################################################################################################################        | 149/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]


    Computing Check:
    |     | 0/1 [Time: 00:00]


    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                                            

                                                                                                                                                                                                                           


                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Train Test Prediction Drift</title>
        <link rel="icon" type="image/x-icon" href="https://deepchecks.com/wp-content/themes/deepchecks/assets/favicons/favicon.ico">
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"11be342b572e4292ada640610be6d2ee": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_e0fe2312688b4825b7218eea0afc594f", "IPY_MODEL_24330d6aec31430fbaa4d23be072a174", "IPY_MODEL_f3816befe79948aeaa2fbe078a33273e", "IPY_MODEL_ded4dd6345a64880b77a58ac2215ab81"], "layout": "IPY_MODEL_88c545942ea14f30aa3988f43cdbeb60"}}, "e0fe2312688b4825b7218eea0afc594f": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_509098c0d3e144d08b37ddbf2104905a", "style": "IPY_MODEL_495c4a7c46be46beb7fca3375e255ee3", "value": "<h4><b>Train Test Prediction Drift</b></h4>"}}, "509098c0d3e144d08b37ddbf2104905a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "495c4a7c46be46beb7fca3375e255ee3": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "24330d6aec31430fbaa4d23be072a174": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_646bae2656864ee8b0fc0f4eff2719e6", "style": "IPY_MODEL_1b2c9d9819ce44d5995bb69267be0a1e", "value": "<p>    Calculate prediction drift between train dataset and test dataset, using statistical measures. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_train_test_prediction_drift.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "646bae2656864ee8b0fc0f4eff2719e6": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "1b2c9d9819ce44d5995bb69267be0a1e": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "f3816befe79948aeaa2fbe078a33273e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_59154f4fe3a840a292091e5d6aca68bd", "style": "IPY_MODEL_ba13aeb149714692b72197b4b7a1ce5b"}}, "59154f4fe3a840a292091e5d6aca68bd": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ba13aeb149714692b72197b4b7a1ce5b": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "ded4dd6345a64880b77a58ac2215ab81": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_0e845395930542088874b80d464d6551", "IPY_MODEL_4e1e36969ddd41279ccd5808f2e327fa", "IPY_MODEL_ea6ef5fc98fd48ca993a1cd58b8e16c4", "IPY_MODEL_53a4f2763608421ebe0027ad88dcb2a7", "IPY_MODEL_5d2147e44bf94c1c9bdcffcf8b419d90"], "layout": "IPY_MODEL_aadd672311564be787a2e08db1e0b556"}}, "0e845395930542088874b80d464d6551": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_a48acadb7d3a4be586eab251f6ea4e72", "style": "IPY_MODEL_13748955a90e45678ef6af4841091fd4", "value": "<h5><b>Additional Outputs</b></h5>"}}, "a48acadb7d3a4be586eab251f6ea4e72": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "13748955a90e45678ef6af4841091fd4": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "4e1e36969ddd41279ccd5808f2e327fa": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_380eb522a4454900bf0aab1a4f7a26a5", "style": "IPY_MODEL_91243ab1e25f47ddaf471f21fde5fd9c", "value": "<div><span>The Drift score is a measure for the difference between two distributions. In this check, drift is measured for the distribution of the following prediction properties: ['Samples Per Class']. </span></div>"}}, "380eb522a4454900bf0aab1a4f7a26a5": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "91243ab1e25f47ddaf471f21fde5fd9c": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "ea6ef5fc98fd48ca993a1cd58b8e16c4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c507b7e81cf5495e877ca4b1ddf0ab9b", "style": "IPY_MODEL_94c087d2405547cc9d55da5f4c970416", "value": "<div>For discrete distribution plots, showing the top 10 categories with largest difference between train and test.</div>"}}, "c507b7e81cf5495e877ca4b1ddf0ab9b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "94c087d2405547cc9d55da5f4c970416": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "53a4f2763608421ebe0027ad88dcb2a7": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"base": 0, "marker": {"color": "#01B8AA"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.0], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "eaf34849-2587-4652-b6a6-5d45430061cc"}, {"marker": {"color": "#00008b"}, "name": "Train Dataset", "x": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y2", "type": "bar", "uid": "fb2a6364-3a72-4b06-8bf6-d98a9cfca446"}, {"marker": {"color": "#69b3a2"}, "name": "Test Dataset", "x": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y2", "type": "bar", "uid": "e046fbf9-7ec0-4c70-9cf1-242c5d4d7fcf"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"font": {"size": 16}, "showarrow": false, "text": "Drift Score (Cramer's V)", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0000000000000002, "yanchor": "bottom", "yref": "paper"}, {"font": {"size": 16}, "showarrow": false, "text": "Distribution Plot", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 0.7200000000000001, "yanchor": "bottom", "yref": "paper"}], "bargroupgap": 0, "height": 400, "legend": {"title": {"text": "Legend"}, "y": 0.6, "yanchor": "top"}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Samples Per Class", "x": 0.5, "xanchor": "center"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "dtick": 0.05, "fixedrange": true, "gridcolor": "black", "linecolor": "black", "range": [0, 0.4], "showgrid": false}, "yaxis": {"anchor": "x", "autorange": true, "color": "black", "domain": [0.9200000000000002, 1.0], "fixedrange": true, "rangemode": "normal", "showgrid": false, "showline": false, "showticklabels": false, "zeroline": false}, "xaxis2": {"anchor": "y2", "domain": [0.0, 1.0], "range": [-3, 12], "type": "category"}, "yaxis2": {"anchor": "x2", "autorange": true, "domain": [0.0, 0.7200000000000001], "fixedrange": true, "rangemode": "normal", "title": {"text": "Frequency"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "Vn2utmJ/uT/zH9JvXwe+P1Z9rrZif7k/6bevA+eMuD/Mf0i/fR24P1pkO99Pjbc/1QloImx4uj94eqUsQxy7P5kqGJXUCbg/a5p3nKIjuT8="}, {"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "Z0Rpb/CFuT+WIY51cRu9P33Qs1n1ubo/QmDl0CLbuT9v8IXJVMG4P8sQx7q4jbY/+n5qvHSTuD8p7Q2+MJm6P6abxCCwcrg/QmDl0CLbuT8="}]}, "5d2147e44bf94c1c9bdcffcf8b419d90": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_687f46581e0547b69250894438b62932", "style": "IPY_MODEL_20ee7a42feda43b585b69601fbc77b66", "value": "<div><p style=\"font-size:0.9em;line-height:1;\"><i>Note - data sampling: Running on 10000 <b>train</b> data samples out of 60000. Sample size can be controlled with the \"n_samples\" parameter.</i></p></div>"}}, "687f46581e0547b69250894438b62932": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "20ee7a42feda43b585b69601fbc77b66": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "aadd672311564be787a2e08db1e0b556": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "88c545942ea14f30aa3988f43cdbeb60": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "11be342b572e4292ada640610be6d2ee"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 91-94

If you have a GPU, you can speed up this check by passing it as an argument to .run() as device=<your GPU>

To display the results in an IDE like PyCharm, you can use the following code:

.. GENERATED FROM PYTHON SOURCE LINES 94-96

.. code-block:: default


    #  result.show_in_window()







.. GENERATED FROM PYTHON SOURCE LINES 97-98

The result will be displayed in a new window.

.. GENERATED FROM PYTHON SOURCE LINES 100-105

Understanding the results
-------------------------
We can see there is almost no drift between the train & test labels. This means the
split to train and test was good (as it is balanced and random). Let's check the
performance of a simple model trained on MNIST.

.. GENERATED FROM PYTHON SOURCE LINES 105-110

.. code-block:: default


    from deepchecks.vision.checks import ClassPerformance

    ClassPerformance().run(train_ds, test_ds, model)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |########                                                                                                                                                     | 8/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |#################                                                                                                                                            | 17/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |##########################                                                                                                                                   | 26/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |###################################                                                                                                                          | 35/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |############################################                                                                                                                 | 44/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |####################################################                                                                                                         | 52/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |############################################################                                                                                                 | 60/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |####################################################################                                                                                         | 68/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |#############################################################################                                                                                | 77/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |#####################################################################################                                                                        | 85/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |##############################################################################################                                                               | 94/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#######################################################################################################                                                      | 103/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |###############################################################################################################9                                             | 112/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#########################################################################################################################                                    | 121/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |##################################################################################################################################                           | 130/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |###########################################################################################################################################                  | 139/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |####################################################################################################################################################         | 148/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |                                                                                                                                                             | 0/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |########                                                                                                                                                     | 8/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#################                                                                                                                                            | 17/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#########################                                                                                                                                    | 25/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#################################                                                                                                                            | 33/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |##########################################                                                                                                                   | 42/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |##################################################                                                                                                           | 50/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#########################################################9                                                                                                   | 58/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |##################################################################                                                                                           | 66/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |###########################################################################                                                                                  | 75/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |###################################################################################                                                                          | 83/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |###########################################################################################                                                                  | 91/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |###################################################################################################                                                          | 99/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |############################################################################################################                                                 | 108/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |####################################################################################################################9                                        | 117/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |##############################################################################################################################                               | 126/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |######################################################################################################################################                       | 134/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |##############################################################################################################################################               | 142/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |#######################################################################################################################################################      | 151/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |#############################################################################################################################################################| 157/157 [Time: 00:02]


    Computing Check:
    |     | 0/1 [Time: 00:00]


    Computing Check:
    |#####| 1/1 [Time: 00:00]


    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                                            

                                                                                                                                                                                                                           


                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Class Performance</title>
        <link rel="icon" type="image/x-icon" href="https://deepchecks.com/wp-content/themes/deepchecks/assets/favicons/favicon.ico">
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"df3f5ca45d934c6c846038a63cd60684": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_3bacef35a79c4e86ae16eaa07902c245", "IPY_MODEL_8d6ba6b2209e45c6a1621aba3b240618", "IPY_MODEL_7a278cfcf68c4844a535387fe2146f98", "IPY_MODEL_1b3ac8888cdf4d1284d8178b9a110301"], "layout": "IPY_MODEL_3c5096489010424e845e8d736478ecf1"}}, "3bacef35a79c4e86ae16eaa07902c245": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_dad94bc63e5347f4bf2cf2da5ec71080", "style": "IPY_MODEL_6fa1f1026a134f7cbe8e15729e7cfe51", "value": "<h4><b>Class Performance</b></h4>"}}, "dad94bc63e5347f4bf2cf2da5ec71080": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "6fa1f1026a134f7cbe8e15729e7cfe51": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "8d6ba6b2209e45c6a1621aba3b240618": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_feb5097032e142c291d06180b32c3095", "style": "IPY_MODEL_218a27255ed14e0e9f764fe3728e815e", "value": "<p>Summarize given metrics on a dataset and model. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_class_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "feb5097032e142c291d06180b32c3095": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "218a27255ed14e0e9f764fe3728e815e": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "7a278cfcf68c4844a535387fe2146f98": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_be07d7d404234958b0fd494b701548fb", "style": "IPY_MODEL_ecc0918e22bd42fe9483553cfbaa7f22"}}, "be07d7d404234958b0fd494b701548fb": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ecc0918e22bd42fe9483553cfbaa7f22": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "1b3ac8888cdf4d1284d8178b9a110301": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_80e80b47fcde498ba448511167551fa1", "IPY_MODEL_c53632253535449e9fb2d91fcc7c101e", "IPY_MODEL_ab81537e8e86400ca2bb2f7fe1960c95"], "layout": "IPY_MODEL_9b6d99747fb64d4a9257426e991caebd"}}, "80e80b47fcde498ba448511167551fa1": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6b10162986d44fc99139c762f84470e1", "style": "IPY_MODEL_7c62c6815e224aa880410fce00029acb", "value": "<h5><b>Additional Outputs</b></h5>"}}, "6b10162986d44fc99139c762f84470e1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "7c62c6815e224aa880410fce00029acb": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "c53632253535449e9fb2d91fcc7c101e": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Train<br>Metric=Recall<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Train", "marker": {"color": "#00008b", "pattern": {"shape": ""}}, "name": "Train", "offsetgroup": "Train", "orientation": "v", "showlegend": true, "x": ["6", "0", "7", "1", "2", "3", "8", "4", "9", "5"], "xaxis": "x", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y", "type": "histogram", "uid": "ee15dfea-2884-4b15-8132-3390ba4f2f72"}, {"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Train<br>Metric=Precision<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Train", "marker": {"color": "#00008b", "pattern": {"shape": ""}}, "name": "Train", "offsetgroup": "Train", "orientation": "v", "showlegend": false, "x": ["5", "1", "4", "0", "8", "7", "3", "6", "2", "9"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y2", "type": "histogram", "uid": "0d95a022-a9a7-40e8-9414-cf5f5125ed17"}, {"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Test<br>Metric=Recall<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Test", "marker": {"color": "#69b3a2", "pattern": {"shape": ""}}, "name": "Test", "offsetgroup": "Test", "orientation": "v", "showlegend": true, "x": ["0", "1", "2", "7", "3", "6", "9", "4", "5", "8"], "xaxis": "x", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y", "type": "histogram", "uid": "5bf1b797-580e-4d0e-972a-2e436a859ac0"}, {"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Test<br>Metric=Precision<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Test", "marker": {"color": "#69b3a2", "pattern": {"shape": ""}}, "name": "Test", "offsetgroup": "Test", "orientation": "v", "showlegend": false, "x": ["8", "1", "4", "5", "3", "6", "2", "9", "0", "7"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y2", "type": "histogram", "uid": "36b350ea-522b-4d6a-8c60-d35fde82a0f6"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"showarrow": false, "text": "Recall", "x": 0.2375, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Precision", "x": 0.7625, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}], "barmode": "group", "legend": {"title": {"text": "Dataset"}, "tracegroupgap": 0}, "margin": {"t": 60}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "xaxis": {"anchor": "y", "domain": [0.0, 0.475], "title": {"text": "Class"}, "type": "category"}, "yaxis": {"anchor": "x", "domain": [0.0, 1.0], "showticklabels": true, "title": {"text": "Value"}}, "xaxis2": {"anchor": "y2", "domain": [0.525, 1.0], "matches": "x", "title": {"text": "Class"}, "type": "category"}, "yaxis2": {"anchor": "x2", "domain": [0.0, 1.0], "showticklabels": true, "title": {"text": "Value"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 0, "y", "buffer"], "data": "/P1+v9/v7z8b5QunE8bvPyr699Skou8/CDzMHY+e7z9QfqrwMpzvP6xWbEeZf+8/uxbG4iVK7z/y6KGstDrvP2Mcper9N+8/8rHShmUu7z8="}, {"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "fRj365LK7z9WHmF3KbrvPwYTaz0Jqe8/NSy9iBOV7z96vduO3IXvPwl0YFvCdO8/BZJjNchu7z9y0qshjGHvP1/EicrTQu8/XuReXiFA7z8="}, {"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "xLQnMpDe7z9+MOdx6dvvP+6IO+KOuO8/YKBfoF+g7z9Q8rJXq57vPwdtTK9IiO8/ABGNFJ9d7z9LE9GN0FDvP0P6mqdSSO8/lXz1yyQ27z8="}, {"encoding": "base64", "path": ["_data", 3, "y", "buffer"], "data": "Kl+HJRzV7z94rCLGkM3vP4gSdq4rze8/hlIkM1Cs7z9Q8rJXq57vP3d3d3d3d+8/f7N16Ddb7z8MKHnZq1XvPwrlNEpzU+8/mArbCahK7z8="}]}, "ab81537e8e86400ca2bb2f7fe1960c95": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_4f1cfa5d6aa8427d9bd371540e90b43d", "style": "IPY_MODEL_11b36f388f9541c7af4163a71206873d", "value": "<div><p style=\"font-size:0.9em;line-height:1;\"><i>Note - data sampling: Running on 10000 <b>train</b> data samples out of 60000. Sample size can be controlled with the \"n_samples\" parameter.</i></p></div>"}}, "4f1cfa5d6aa8427d9bd371540e90b43d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "11b36f388f9541c7af4163a71206873d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "9b6d99747fb64d4a9257426e991caebd": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "3c5096489010424e845e8d736478ecf1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "df3f5ca45d934c6c846038a63cd60684"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 111-117

MNIST with label drift
======================
Now, let's try to separate the MNIST dataset in a different manner that will result
in a prediction drift, and see how it affects the performance. We are going to create
a custom collate_fn in the test dataset, that will select samples with class 0
in a 1/10 chances.

.. GENERATED FROM PYTHON SOURCE LINES 117-124

.. code-block:: default


    import torch

    mnist_dataloader_train = load_dataset(train=True, batch_size=64, object_type='DataLoader')
    mnist_dataloader_test = load_dataset(train=False, batch_size=64, object_type='DataLoader')
    full_mnist = torch.utils.data.ConcatDataset([mnist_dataloader_train.dataset, mnist_dataloader_test.dataset])








.. GENERATED FROM PYTHON SOURCE LINES 125-128

.. code-block:: default


    train_dataset, test_dataset = torch.utils.data.random_split(full_mnist, [60000,10000], generator=torch.Generator().manual_seed(42))








.. GENERATED FROM PYTHON SOURCE LINES 129-131

Inserting drift to the test set
-------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 131-157

.. code-block:: default


    import numpy as np
    from torch.utils.data._utils.collate import default_collate

    np.random.seed(42)

    images, labels = next(iter(mnist_dataloader_test))


    def collate_test(batch):
        modified_batch = []
        for item in batch:
            image, label = item
            if label == 0:
                if np.random.randint(5) == 0:
                    modified_batch.append(item)
                else:
                    modified_batch.append((images[0], 1))
            else:
                modified_batch.append(item)

        return default_collate(modified_batch)

    mod_train_loader = torch.utils.data.DataLoader(train_dataset, batch_size=64)
    mod_test_loader = torch.utils.data.DataLoader(test_dataset, batch_size=64, collate_fn=collate_test)








.. GENERATED FROM PYTHON SOURCE LINES 158-163

.. code-block:: default

    from deepchecks.vision.datasets.classification.mnist import MNISTData

    mod_train_ds = MNISTData(mod_train_loader)
    mod_test_ds = MNISTData(mod_test_loader)








.. GENERATED FROM PYTHON SOURCE LINES 164-166

Run the check
-------------

.. GENERATED FROM PYTHON SOURCE LINES 166-171

.. code-block:: default


    check = TrainTestPredictionDrift()
    result = check.run(mod_train_ds, mod_test_ds, model)
    result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |########                                                                                                                                                     | 8/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |#################                                                                                                                                            | 17/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |##########################                                                                                                                                   | 26/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |###################################                                                                                                                          | 35/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |############################################                                                                                                                 | 44/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |#####################################################                                                                                                        | 53/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |#############################################################                                                                                                | 61/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |######################################################################                                                                                       | 70/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |###############################################################################                                                                              | 79/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |#######################################################################################                                                                      | 87/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |###############################################################################################                                                              | 95/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#######################################################################################################                                                      | 103/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |###############################################################################################################9                                             | 112/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |########################################################################################################################                                     | 120/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |################################################################################################################################                             | 128/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |########################################################################################################################################                     | 136/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |################################################################################################################################################             | 144/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |########################################################################################################################################################     | 152/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#############################################################################################################################################################| 157/157 [Time: 00:02]

    Ingesting Batches - Test Dataset:
    |                                                                                                                                                             | 0/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |########                                                                                                                                                     | 8/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#################                                                                                                                                            | 17/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |##########################                                                                                                                                   | 26/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |###################################                                                                                                                          | 35/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |############################################                                                                                                                 | 44/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#####################################################                                                                                                        | 53/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |##############################################################                                                                                               | 62/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#######################################################################                                                                                      | 71/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |###############################################################################                                                                              | 79/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#######################################################################################                                                                      | 87/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |###############################################################################################                                                              | 95/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |########################################################################################################                                                     | 104/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |################################################################################################################9                                            | 113/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |##########################################################################################################################                                   | 122/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |##################################################################################################################################                           | 130/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |##########################################################################################################################################                   | 138/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |###################################################################################################################################################          | 147/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |###########################################################################################################################################################  | 155/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]


    Computing Check:
    |     | 0/1 [Time: 00:00]


    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                                            

                                                                                                                                                                                                                           


                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Train Test Prediction Drift</title>
        <link rel="icon" type="image/x-icon" href="https://deepchecks.com/wp-content/themes/deepchecks/assets/favicons/favicon.ico">
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"56f2efd42b844fa0a4c53e6644b756d1": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_90ec1f4d9bbd464d8312a326faa3d207", "IPY_MODEL_714adaf69d2243bcbff579cdb2f267ec", "IPY_MODEL_314397bcbd4848e8b3d2f73c40543163", "IPY_MODEL_35343ff864824010bd8854e6bd2f0ad7"], "layout": "IPY_MODEL_048ea87af5024213851ae587bbfe34f4"}}, "90ec1f4d9bbd464d8312a326faa3d207": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_f1d01d6fd2ab465ba5f51e0b7d1f92b1", "style": "IPY_MODEL_698ab43a0bbb41e199c080dc64f16553", "value": "<h4><b>Train Test Prediction Drift</b></h4>"}}, "f1d01d6fd2ab465ba5f51e0b7d1f92b1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "698ab43a0bbb41e199c080dc64f16553": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "714adaf69d2243bcbff579cdb2f267ec": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_32612aa810ed4aba84322061b822aad7", "style": "IPY_MODEL_6581baf187154796a0eb8271c91b22fb", "value": "<p>    Calculate prediction drift between train dataset and test dataset, using statistical measures. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_train_test_prediction_drift.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "32612aa810ed4aba84322061b822aad7": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "6581baf187154796a0eb8271c91b22fb": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "314397bcbd4848e8b3d2f73c40543163": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6d47b45454c14c73b208405033ead0c0", "style": "IPY_MODEL_b4ea96a73a3f4c1b8d4d646296e82d66"}}, "6d47b45454c14c73b208405033ead0c0": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b4ea96a73a3f4c1b8d4d646296e82d66": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "35343ff864824010bd8854e6bd2f0ad7": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_0fe89381b3c2406fa9a6c61181fcff68", "IPY_MODEL_01f53b016d464265a9cba8db39aeb380", "IPY_MODEL_d27bdd9d2fcd4a6da2764160dffeebef", "IPY_MODEL_7462a361368f4d9293e5cb4f5c16049e", "IPY_MODEL_9919c9bd119d4d1eae0994e594e301f8"], "layout": "IPY_MODEL_c7d3b2fb50ab4f58a813389182461810"}}, "0fe89381b3c2406fa9a6c61181fcff68": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_ab1b2599aa194f749ae786c7f5968756", "style": "IPY_MODEL_64af7c2d666b4f07b2ce8bed3446b6f4", "value": "<h5><b>Additional Outputs</b></h5>"}}, "ab1b2599aa194f749ae786c7f5968756": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "64af7c2d666b4f07b2ce8bed3446b6f4": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "01f53b016d464265a9cba8db39aeb380": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_374798dced354e2f9d3cd48b522e5111", "style": "IPY_MODEL_618f475b803f443aa33020398109a46c", "value": "<div><span>The Drift score is a measure for the difference between two distributions. In this check, drift is measured for the distribution of the following prediction properties: ['Samples Per Class']. </span></div>"}}, "374798dced354e2f9d3cd48b522e5111": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "618f475b803f443aa33020398109a46c": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "d27bdd9d2fcd4a6da2764160dffeebef": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_367edc8a9d40464a984e1544aee4482b", "style": "IPY_MODEL_735606a208c6463b96cecc94a080a453", "value": "<div>For discrete distribution plots, showing the top 10 categories with largest difference between train and test.</div>"}}, "367edc8a9d40464a984e1544aee4482b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "735606a208c6463b96cecc94a080a453": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "7462a361368f4d9293e5cb4f5c16049e": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"base": 0, "marker": {"color": "#01B8AA"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.1], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "3107f45e-3e01-490a-ad31-8b7d4b3d09a1"}, {"base": 0.1, "marker": {"color": "#F2C80F"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.09195194874478405], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "4fc90a7b-4799-43ea-aa3d-fedcd112089f"}, {"marker": {"color": "#00008b"}, "name": "Train Dataset", "x": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y2", "type": "bar", "uid": "8fe900ce-51ed-4664-8ba1-0036084f844b"}, {"marker": {"color": "#69b3a2"}, "name": "Test Dataset", "x": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y2", "type": "bar", "uid": "c11a2ad2-5cf7-4c45-b719-0b997ba5f62c"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"font": {"size": 16}, "showarrow": false, "text": "Drift Score (Cramer's V)", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0000000000000002, "yanchor": "bottom", "yref": "paper"}, {"font": {"size": 16}, "showarrow": false, "text": "Distribution Plot", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 0.7200000000000001, "yanchor": "bottom", "yref": "paper"}], "bargroupgap": 0, "height": 400, "legend": {"title": {"text": "Legend"}, "y": 0.6, "yanchor": "top"}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Samples Per Class", "x": 0.5, "xanchor": "center"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "dtick": 0.05, "fixedrange": true, "gridcolor": "black", "linecolor": "black", "range": [0, 0.4], "showgrid": false}, "yaxis": {"anchor": "x", "autorange": true, "color": "black", "domain": [0.9200000000000002, 1.0], "fixedrange": true, "rangemode": "normal", "showgrid": false, "showline": false, "showticklabels": false, "zeroline": false}, "xaxis2": {"anchor": "y2", "domain": [0.0, 1.0], "range": [-3, 12], "type": "category"}, "yaxis2": {"anchor": "x2", "autorange": true, "domain": [0.0, 0.7200000000000001], "fixedrange": true, "rangemode": "normal", "title": {"text": "Frequency"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "Ne84RUdyuT8hsHJoke28P8RCrWnecbo/t9EA3gIJuj/Y8PRKWYa4P67YX3ZPHrY/hA1Pr5RluD9fmEwVjEq6P0oMAiuHFrk/fdCzWfW5uj8="}, {"encoding": "base64", "path": ["_data", 3, "y", "buffer"], "data": "x7q4jQbwlj85tMh2vp+6P33Qs1n1ubo/INJvXwfOuT+iRbbz/dS4P8sQx7q4jbY/hA1Pr5RluD9lqmBUUifIP0VHcvkP6bc/eHqlLEMcuz8="}]}, "9919c9bd119d4d1eae0994e594e301f8": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_35971cfd85a34167b65ec751471303e6", "style": "IPY_MODEL_207d5e81edc946a1a449c990fc872745", "value": "<div><p style=\"font-size:0.9em;line-height:1;\"><i>Note - data sampling: Running on 10000 <b>train</b> data samples out of 60000. Sample size can be controlled with the \"n_samples\" parameter.</i></p></div>"}}, "35971cfd85a34167b65ec751471303e6": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "207d5e81edc946a1a449c990fc872745": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "c7d3b2fb50ab4f58a813389182461810": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "048ea87af5024213851ae587bbfe34f4": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "56f2efd42b844fa0a4c53e6644b756d1"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 172-176

Add a condition
---------------
We could also add a condition to the check to alert us to changes in the prediction
distribution, such as the one that occurred here.

.. GENERATED FROM PYTHON SOURCE LINES 176-181

.. code-block:: default


    check = TrainTestPredictionDrift().add_condition_drift_score_less_than()
    result = check.run(mod_train_ds, mod_test_ds, model)
    result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |########                                                                                                                                                     | 8/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |################                                                                                                                                             | 16/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |########################                                                                                                                                     | 24/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |################################                                                                                                                             | 32/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |########################################                                                                                                                     | 40/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |#################################################                                                                                                            | 49/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |########################################################9                                                                                                    | 57/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |##################################################################                                                                                           | 66/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |##########################################################################                                                                                   | 74/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |###################################################################################                                                                          | 83/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |###########################################################################################                                                                  | 91/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |####################################################################################################                                                         | 100/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#############################################################################################################                                                | 109/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |######################################################################################################################                                       | 118/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |##############################################################################################################################                               | 126/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#######################################################################################################################################                      | 135/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |################################################################################################################################################             | 144/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |########################################################################################################################################################     | 152/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#############################################################################################################################################################| 157/157 [Time: 00:02]

    Ingesting Batches - Test Dataset:
    |                                                                                                                                                             | 0/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#########                                                                                                                                                    | 9/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |##################                                                                                                                                           | 18/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |###########################                                                                                                                                  | 27/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |####################################                                                                                                                         | 36/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |############################################                                                                                                                 | 44/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |####################################################                                                                                                         | 52/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |############################################################                                                                                                 | 60/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |####################################################################                                                                                         | 68/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |############################################################################                                                                                 | 76/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |####################################################################################                                                                         | 84/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |############################################################################################                                                                 | 92/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |####################################################################################################                                                         | 100/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |############################################################################################################                                                 | 108/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |###################################################################################################################9                                         | 116/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |############################################################################################################################                                 | 124/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |####################################################################################################################################                         | 132/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |############################################################################################################################################                 | 140/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |####################################################################################################################################################         | 148/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |#############################################################################################################################################################| 157/157 [Time: 00:02]

    Ingesting Batches - Test Dataset:
    |#############################################################################################################################################################| 157/157 [Time: 00:02]


    Computing Check:
    |     | 0/1 [Time: 00:00]


    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                                            

                                                                                                                                                                                                                           


                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Train Test Prediction Drift</title>
        <link rel="icon" type="image/x-icon" href="https://deepchecks.com/wp-content/themes/deepchecks/assets/favicons/favicon.ico">
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"de3e4034229e465796cd65081436c0a5": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_e2c43d3f40964cbc8bfbef9185a89a6d", "IPY_MODEL_8925cfe458cc4cb4ac5ea8a29b3dba1a", "IPY_MODEL_edc2b8511b724d5b953fa51067139e50", "IPY_MODEL_0efdd657e91645699d8d142c2209a170"], "layout": "IPY_MODEL_82e3a416a979484082368c6a8c7a2ea9"}}, "e2c43d3f40964cbc8bfbef9185a89a6d": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c437d325bc9a4a69842e2e9718c4d348", "style": "IPY_MODEL_cd3cd43c64e046bbb9acd968d72cf2d7", "value": "<h4><b>Train Test Prediction Drift</b></h4>"}}, "c437d325bc9a4a69842e2e9718c4d348": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "cd3cd43c64e046bbb9acd968d72cf2d7": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "8925cfe458cc4cb4ac5ea8a29b3dba1a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_bfa63a82045a40e6a0ef4989d7d2241d", "style": "IPY_MODEL_71c1136242ea43bb8cfeeb3bd6adc402", "value": "<p>    Calculate prediction drift between train dataset and test dataset, using statistical measures. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_train_test_prediction_drift.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "bfa63a82045a40e6a0ef4989d7d2241d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "71c1136242ea43bb8cfeeb3bd6adc402": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "edc2b8511b724d5b953fa51067139e50": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_676214d9354e4959a58cdd35d4f2011d", "style": "IPY_MODEL_2db6c663c7b64545a4a578f6c1cb0ae7", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_2aa6f_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_2aa6f_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_2aa6f_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_2aa6f_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_2aa6f_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_2aa6f_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_2aa6f_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_2aa6f_row0_col1\" class=\"data row0 col1\" >categorical drift score < 0.15 and numerical drift score < 0.075 for prediction drift</td>\n      <td id=\"T_2aa6f_row0_col2\" class=\"data row0 col2\" >Failed for 1 out of 1 prediction properties.\nFound 1 categorical prediction properties with Cramer's V above threshold: {'Samples Per Class': '0.19'}</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "676214d9354e4959a58cdd35d4f2011d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "2db6c663c7b64545a4a578f6c1cb0ae7": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "0efdd657e91645699d8d142c2209a170": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_413c776067f04394901e6a69870e05ae", "IPY_MODEL_9a36ef25222046dbbe29c4f9aa7f9533", "IPY_MODEL_9b3aeff5b32e47a399d925880fa7cb76", "IPY_MODEL_e1c45ff21cfb4cf59d529f1db78b41f4", "IPY_MODEL_43d3567e7a394225b9c8ac1366865c85"], "layout": "IPY_MODEL_d4dfb923dcfb4569bc9af1354380dc53"}}, "413c776067f04394901e6a69870e05ae": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c71baa94a0c94382972c82cc40b0047e", "style": "IPY_MODEL_513df5cc2e804f00b377917b4d036754", "value": "<h5><b>Additional Outputs</b></h5>"}}, "c71baa94a0c94382972c82cc40b0047e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "513df5cc2e804f00b377917b4d036754": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "9a36ef25222046dbbe29c4f9aa7f9533": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_164eaa07da614f308d8f91f2a4d5cb50", "style": "IPY_MODEL_01f9c706292541ab946e679bc82076d9", "value": "<div><span>The Drift score is a measure for the difference between two distributions. In this check, drift is measured for the distribution of the following prediction properties: ['Samples Per Class']. </span></div>"}}, "164eaa07da614f308d8f91f2a4d5cb50": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "01f9c706292541ab946e679bc82076d9": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "9b3aeff5b32e47a399d925880fa7cb76": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_700765809c2f436283ad5859caf59d43", "style": "IPY_MODEL_570180d744a540bdbc894137995054d0", "value": "<div>For discrete distribution plots, showing the top 10 categories with largest difference between train and test.</div>"}}, "700765809c2f436283ad5859caf59d43": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "570180d744a540bdbc894137995054d0": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "e1c45ff21cfb4cf59d529f1db78b41f4": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"base": 0, "marker": {"color": "#01B8AA"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.1], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "a58867f4-3bbe-46a9-ac0a-40ac860a6110"}, {"base": 0.1, "marker": {"color": "#F2C80F"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.09386764669835956], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "d5c2c8df-4ab8-4359-9b39-f3ee584d1175"}, {"marker": {"color": "#00008b"}, "name": "Train Dataset", "x": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y2", "type": "bar", "uid": "f9fcfedf-1bf5-458f-8d51-7b7579155e46"}, {"marker": {"color": "#69b3a2"}, "name": "Test Dataset", "x": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y2", "type": "bar", "uid": "c85590e9-52c7-4306-9ec3-ff866caae29b"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"font": {"size": 16}, "showarrow": false, "text": "Drift Score (Cramer's V)", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0000000000000002, "yanchor": "bottom", "yref": "paper"}, {"font": {"size": 16}, "showarrow": false, "text": "Distribution Plot", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 0.7200000000000001, "yanchor": "bottom", "yref": "paper"}], "bargroupgap": 0, "height": 400, "legend": {"title": {"text": "Legend"}, "y": 0.6, "yanchor": "top"}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Samples Per Class", "x": 0.5, "xanchor": "center"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "dtick": 0.05, "fixedrange": true, "gridcolor": "black", "linecolor": "black", "range": [0, 0.4], "showgrid": false}, "yaxis": {"anchor": "x", "autorange": true, "color": "black", "domain": [0.9200000000000002, 1.0], "fixedrange": true, "rangemode": "normal", "showgrid": false, "showline": false, "showticklabels": false, "zeroline": false}, "xaxis2": {"anchor": "y2", "domain": [0.0, 1.0], "range": [-3, 12], "type": "category"}, "yaxis2": {"anchor": "x2", "autorange": true, "domain": [0.0, 0.7200000000000001], "fixedrange": true, "rangemode": "normal", "title": {"text": "Frequency"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "Ne84RUdyuT8hsHJoke28P8RCrWnecbo/t9EA3gIJuj/Y8PRKWYa4P67YX3ZPHrY/hA1Pr5RluD9fmEwVjEq6P0oMAiuHFrk/fdCzWfW5uj8="}, {"encoding": "base64", "path": ["_data", 3, "y", "buffer"], "data": "8fRKWYY4lj85tMh2vp+6P33Qs1n1ubo/INJvXwfOuT+iRbbz/dS4P8sQx7q4jbY/ldQJaCJsuD+X/5B++zrIP0VHcvkP6bc/eHqlLEMcuz8="}]}, "43d3567e7a394225b9c8ac1366865c85": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_9ad9af4c080f4799902c5bb2b0e42ed7", "style": "IPY_MODEL_a92ed07e58e142c9973e495d008b5de7", "value": "<div><p style=\"font-size:0.9em;line-height:1;\"><i>Note - data sampling: Running on 10000 <b>train</b> data samples out of 60000. Sample size can be controlled with the \"n_samples\" parameter.</i></p></div>"}}, "9ad9af4c080f4799902c5bb2b0e42ed7": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a92ed07e58e142c9973e495d008b5de7": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "d4dfb923dcfb4569bc9af1354380dc53": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "82e3a416a979484082368c6a8c7a2ea9": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "de3e4034229e465796cd65081436c0a5"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 182-183

As we can see, the condition alerts us to the present of drift in the prediction.

.. GENERATED FROM PYTHON SOURCE LINES 185-192

Results
-------
We can see the check successfully detects the (expected) drift in class 0 distribution
between the train and test sets. It means the the model correctly predicted 0 for
those samples and so we're seeing drift in the predictions as well as the labels.
We note that this check enabled us to detect the presence of label drift (in this case)
without needing actual labels for the test data.

.. GENERATED FROM PYTHON SOURCE LINES 194-196

But how does this affect the performance of the model?
------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 196-200

.. code-block:: default


    result = ClassPerformance().run(mod_train_ds, mod_test_ds, model)
    result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |#########                                                                                                                                                    | 9/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |##################                                                                                                                                           | 18/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |##########################                                                                                                                                   | 26/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |###################################                                                                                                                          | 35/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |###########################################                                                                                                                  | 43/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |###################################################                                                                                                          | 51/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |###########################################################                                                                                                  | 59/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |####################################################################                                                                                         | 68/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |############################################################################                                                                                 | 76/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |#####################################################################################                                                                        | 85/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#############################################################################################                                                                | 93/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#####################################################################################################                                                        | 101/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |##############################################################################################################                                               | 110/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |######################################################################################################################                                       | 118/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |##############################################################################################################################                               | 126/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |######################################################################################################################################                       | 134/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |###############################################################################################################################################              | 143/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#######################################################################################################################################################      | 151/157 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#############################################################################################################################################################| 157/157 [Time: 00:02]

    Ingesting Batches - Test Dataset:
    |                                                                                                                                                             | 0/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |########                                                                                                                                                     | 8/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |################                                                                                                                                             | 16/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |########################                                                                                                                                     | 24/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#################################                                                                                                                            | 33/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#########################################                                                                                                                    | 41/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#################################################                                                                                                            | 49/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |########################################################9                                                                                                    | 57/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#################################################################                                                                                            | 65/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#########################################################################                                                                                    | 73/157 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#################################################################################                                                                            | 81/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |#########################################################################################                                                                    | 89/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |#################################################################################################                                                            | 97/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |#########################################################################################################                                                    | 105/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |################################################################################################################9                                            | 113/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |#########################################################################################################################                                    | 121/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |#################################################################################################################################                            | 129/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |#########################################################################################################################################                    | 137/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |#################################################################################################################################################            | 145/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |#########################################################################################################################################################    | 153/157 [Time: 00:02]

    Ingesting Batches - Test Dataset:
    |#############################################################################################################################################################| 157/157 [Time: 00:02]


    Computing Check:
    |     | 0/1 [Time: 00:00]


    Computing Check:
    |#####| 1/1 [Time: 00:00]


    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                                            

                                                                                                                                                                                                                           


                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Class Performance</title>
        <link rel="icon" type="image/x-icon" href="https://deepchecks.com/wp-content/themes/deepchecks/assets/favicons/favicon.ico">
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"fef8d240cee24ba7969c4968fc32d82c": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_56d4117f85474a20bcc2e18076dbfccd", "IPY_MODEL_3aec7179af9347c68e2f274db2acd4af", "IPY_MODEL_9eaedc805a1546dabd02658e08acde5f", "IPY_MODEL_0443e1d910af496f98e17f2fca84fa1f"], "layout": "IPY_MODEL_399b2e47246d4c1897eaf0bf2d897004"}}, "56d4117f85474a20bcc2e18076dbfccd": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_4706e40272cb4fefa9ffdc514cb4c7a3", "style": "IPY_MODEL_fe22085d1cb04d7abc66535aa08bfe61", "value": "<h4><b>Class Performance</b></h4>"}}, "4706e40272cb4fefa9ffdc514cb4c7a3": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "fe22085d1cb04d7abc66535aa08bfe61": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "3aec7179af9347c68e2f274db2acd4af": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_bceff681e5934ecc94a74950a525616f", "style": "IPY_MODEL_33c6054b617b49e5899b611de4c1a950", "value": "<p>Summarize given metrics on a dataset and model. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_class_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "bceff681e5934ecc94a74950a525616f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "33c6054b617b49e5899b611de4c1a950": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "9eaedc805a1546dabd02658e08acde5f": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_8385bec523514b679006c3438631a971", "style": "IPY_MODEL_56be48e2a6a447f5b245d137298c3bee"}}, "8385bec523514b679006c3438631a971": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "56be48e2a6a447f5b245d137298c3bee": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "0443e1d910af496f98e17f2fca84fa1f": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_6154d0680f744bc68be14437c9060cdf", "IPY_MODEL_9c5a89dea0d94cf3bc0a4f970ae42504", "IPY_MODEL_e074b6b384a840b7a5d9fcda49e677d5"], "layout": "IPY_MODEL_5e17912ef7414051ba52f22781afbecd"}}, "6154d0680f744bc68be14437c9060cdf": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_7af020aaee8b4330897fb6d36b21db63", "style": "IPY_MODEL_79a793c2ce534d4bba7358eba7600e7e", "value": "<h5><b>Additional Outputs</b></h5>"}}, "7af020aaee8b4330897fb6d36b21db63": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "79a793c2ce534d4bba7358eba7600e7e": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "9c5a89dea0d94cf3bc0a4f970ae42504": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Train<br>Metric=Recall<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Train", "marker": {"color": "#00008b", "pattern": {"shape": ""}}, "name": "Train", "offsetgroup": "Train", "orientation": "v", "showlegend": true, "x": ["0", "1", "6", "2", "7", "4", "3", "9", "8", "5"], "xaxis": "x", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y", "type": "histogram", "uid": "0165e480-0b10-4423-9dfc-736ea30f8579"}, {"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Train<br>Metric=Precision<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Train", "marker": {"color": "#00008b", "pattern": {"shape": ""}}, "name": "Train", "offsetgroup": "Train", "orientation": "v", "showlegend": false, "x": ["5", "1", "8", "4", "3", "0", "6", "7", "2", "9"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y2", "type": "histogram", "uid": "c2b7da81-dadb-43ab-9731-26b212b9855c"}, {"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Test<br>Metric=Recall<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Test", "marker": {"color": "#69b3a2", "pattern": {"shape": ""}}, "name": "Test", "offsetgroup": "Test", "orientation": "v", "showlegend": true, "x": ["0", "6", "7", "2", "9", "5", "4", "3", "8", "1"], "xaxis": "x", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y", "type": "histogram", "uid": "c63b867e-fb2d-4145-8665-00728b6c4098"}, {"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Test<br>Metric=Precision<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Test", "marker": {"color": "#69b3a2", "pattern": {"shape": ""}}, "name": "Test", "offsetgroup": "Test", "orientation": "v", "showlegend": false, "x": ["3", "1", "4", "8", "5", "6", "9", "2", "0", "7"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y2", "type": "histogram", "uid": "cd2c1a1e-dece-4791-95d1-3a32b1c899ad"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"showarrow": false, "text": "Recall", "x": 0.2375, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Precision", "x": 0.7625, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}], "barmode": "group", "legend": {"title": {"text": "Dataset"}, "tracegroupgap": 0}, "margin": {"t": 60}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "xaxis": {"anchor": "y", "domain": [0.0, 0.475], "title": {"text": "Class"}, "type": "category"}, "yaxis": {"anchor": "x", "domain": [0.0, 1.0], "showticklabels": true, "title": {"text": "Value"}}, "xaxis2": {"anchor": "y2", "domain": [0.525, 1.0], "matches": "x", "title": {"text": "Class"}, "type": "category"}, "yaxis2": {"anchor": "x2", "domain": [0.0, 1.0], "showticklabels": true, "title": {"text": "Value"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 0, "y", "buffer"], "data": "obTxjmrW7z93TzCTFqLvP5fEMvXxoO8/epRDaYef7z8AAAAAAHjvPy1Rdlqvb+8/aJ999tln7z/4nCfwn1nvP4APvNhnUu8/lJQvsYVO7z8="}, {"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "chzHcRzH7z8Q7PsEwb7vP+tDY31orO8/l7t/D32q7z/hyU6/SJfvP5Tx26WejO8/YiKAu3Z27z+GTUOmd2DvP6KbLOzPMe8/WSHGPsAM7z8="}, {"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "TDo1D3LX7z+pCHAZubrvPwccKRrij+8/VPfKpQuJ7z/7sn3ZvmzvP6agHjHRYu8/agk0Q6VY7z9XV1dXV1fvPyt0Bit0Bu8/FzNX/dYA4j8="}, {"encoding": "base64", "path": ["_data", 3, "y", "buffer"], "data": "btu2bdu27z+WWqmVWqnvP/CyKd0Zo+8/D2csNYWf7z+zGNvuapDvP/uRsKObdu8/CjKbao1d7z9s6p0T/DPvPxSp3kOR6u0/DG+mUB1B4j8="}]}, "e074b6b384a840b7a5d9fcda49e677d5": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_4fc7b41f86c347d490211787ffe88f99", "style": "IPY_MODEL_9044bf462a3e4c4e91b02c55e71e92a3", "value": "<div><p style=\"font-size:0.9em;line-height:1;\"><i>Note - data sampling: Running on 10000 <b>train</b> data samples out of 60000. Sample size can be controlled with the \"n_samples\" parameter.</i></p></div>"}}, "4fc7b41f86c347d490211787ffe88f99": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9044bf462a3e4c4e91b02c55e71e92a3": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "5e17912ef7414051ba52f22781afbecd": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "399b2e47246d4c1897eaf0bf2d897004": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "fef8d240cee24ba7969c4968fc32d82c"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 201-203

Inferring the results
---------------------

.. GENERATED FROM PYTHON SOURCE LINES 203-207

.. code-block:: default


    # We can see the drop in the precision of class 0, which was caused by the class
    # imbalance indicated earlier by the label drift check.








.. GENERATED FROM PYTHON SOURCE LINES 208-210

Run the Check on an Object Detection Task (COCO)
================================================

.. GENERATED FROM PYTHON SOURCE LINES 210-217

.. code-block:: default


    from deepchecks.vision.datasets.detection.coco import load_dataset, load_model

    train_ds = load_dataset(train=True, object_type='VisionData')
    test_ds = load_dataset(train=False, object_type='VisionData')
    model = load_model(pretrained=True)








.. GENERATED FROM PYTHON SOURCE LINES 218-223

.. code-block:: default


    check = TrainTestPredictionDrift()
    result = check.run(train_ds, test_ds, model)
    result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:19]    Validating Input:
    |#####| 1/1 [Time: 00:19]
    Ingesting Batches - Train Dataset:
    |     | 0/2 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |##5  | 1/2 [Time: 00:09]
    Ingesting Batches - Train Dataset:
    |#####| 2/2 [Time: 00:19]
    Ingesting Batches - Train Dataset:
    |#####| 2/2 [Time: 00:19]

    Ingesting Batches - Test Dataset:
    |     | 0/2 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |##5  | 1/2 [Time: 00:09]

    Ingesting Batches - Test Dataset:
    |#####| 2/2 [Time: 00:19]

    Ingesting Batches - Test Dataset:
    |#####| 2/2 [Time: 00:19]


    Computing Check:
    |     | 0/1 [Time: 00:00]


    Computing Check:
    |#####| 1/1 [Time: 00:00]


    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                

                                                               


                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Train Test Prediction Drift</title>
        <link rel="icon" type="image/x-icon" href="https://deepchecks.com/wp-content/themes/deepchecks/assets/favicons/favicon.ico">
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"13a9b835ece14b72b91ebce48081fd31": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_7a97f67109a14884a4fa67f51c3ce453", "IPY_MODEL_454512c0c78a4904abc80bb8be6d0715", "IPY_MODEL_d6a5aef45e7544939ed34f7a40bcda37", "IPY_MODEL_0e3385926e7e41a48418e4651d9b9574"], "layout": "IPY_MODEL_fd91e439f97547869ce6b12d987f2a6a"}}, "7a97f67109a14884a4fa67f51c3ce453": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_152ea99ccddc4e559870caa4f5352113", "style": "IPY_MODEL_9fc9b7869d6f4fa18cae8f8487d8fdae", "value": "<h4><b>Train Test Prediction Drift</b></h4>"}}, "152ea99ccddc4e559870caa4f5352113": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9fc9b7869d6f4fa18cae8f8487d8fdae": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "454512c0c78a4904abc80bb8be6d0715": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_b53593bd47404ca68d0f6c52e58c2551", "style": "IPY_MODEL_9e5dde592a554237a61f0f8ed0ad532d", "value": "<p>    Calculate prediction drift between train dataset and test dataset, using statistical measures. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_train_test_prediction_drift.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "b53593bd47404ca68d0f6c52e58c2551": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9e5dde592a554237a61f0f8ed0ad532d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "d6a5aef45e7544939ed34f7a40bcda37": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_7df652ffe364415b8073689262b0a8e6", "style": "IPY_MODEL_22e2c0f7668d498986eff1218c56cd7a"}}, "7df652ffe364415b8073689262b0a8e6": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "22e2c0f7668d498986eff1218c56cd7a": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "0e3385926e7e41a48418e4651d9b9574": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_82fa5623b5cc47faae91c171633a60eb", "IPY_MODEL_4067c0230f56403786b3f976bb7bef78", "IPY_MODEL_6627679de79b43cfaac11d0a825b549a", "IPY_MODEL_4245d9af31534113b6f4ea5bf635c1eb", "IPY_MODEL_9bd0aab21def4ac78315317803ca8364", "IPY_MODEL_4e90a35c55d34ca99b9253924eb96ac6"], "layout": "IPY_MODEL_3588816e0e8f4cd7b64346064de91512"}}, "82fa5623b5cc47faae91c171633a60eb": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_57406850c6fa4537903dae46feb777e4", "style": "IPY_MODEL_9ea27e9b8a2c4eafab25b5fcf9b54917", "value": "<h5><b>Additional Outputs</b></h5>"}}, "57406850c6fa4537903dae46feb777e4": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9ea27e9b8a2c4eafab25b5fcf9b54917": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "4067c0230f56403786b3f976bb7bef78": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_a63c6654c30346c18c8326e0bd276db3", "style": "IPY_MODEL_1f4e5d18f7784080b493eaa21ae3604f", "value": "<div><span>The Drift score is a measure for the difference between two distributions. In this check, drift is measured for the distribution of the following prediction properties: ['Samples Per Class', 'Bounding Box Area (in pixels)', 'Number of Bounding Boxes Per Image']. </span></div>"}}, "a63c6654c30346c18c8326e0bd276db3": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "1f4e5d18f7784080b493eaa21ae3604f": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "6627679de79b43cfaac11d0a825b549a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_5fa77a8153a044feae91d3fc34bea860", "style": "IPY_MODEL_eb1f2a3431da49e293dde62a5a54bcec", "value": "<div>For discrete distribution plots, showing the top 10 categories with largest difference between train and test.</div>"}}, "5fa77a8153a044feae91d3fc34bea860": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "eb1f2a3431da49e293dde62a5a54bcec": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "4245d9af31534113b6f4ea5bf635c1eb": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"base": 0, "marker": {"color": "#01B8AA"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.1], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "b385e1e2-efbe-4ac2-a29d-73d852648dc1"}, {"base": 0.1, "marker": {"color": "#F2C80F"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.1], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "039d78ff-c957-4044-8137-393f921f0bb4"}, {"base": 0.2, "marker": {"color": "#FE9666"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.09999999999999998], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "51e53a7b-2b9e-4eef-9cda-50e82233e0a7"}, {"base": 0.3, "marker": {"color": "#FD625E"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.03323494538941535], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "9b8d167f-f123-4129-8266-80dbd59ca341"}, {"marker": {"color": "#00008b"}, "name": "Train Dataset", "x": ["book", "bowl", "chair", "donut", "knife", "person", "spoon", "teddy bear", "umbrella", "wine glass"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y2", "type": "bar", "uid": "26bd6caf-caa6-4e27-83cc-2924124462b8"}, {"marker": {"color": "#69b3a2"}, "name": "Test Dataset", "x": ["book", "bowl", "chair", "donut", "knife", "person", "spoon", "teddy bear", "umbrella", "wine glass"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y2", "type": "bar", "uid": "ad758f8b-d6bd-4d1b-be88-7ff3a517c033"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"font": {"size": 16}, "showarrow": false, "text": "Drift Score (Cramer's V)", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0000000000000002, "yanchor": "bottom", "yref": "paper"}, {"font": {"size": 16}, "showarrow": false, "text": "Distribution Plot", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 0.7200000000000001, "yanchor": "bottom", "yref": "paper"}], "bargroupgap": 0, "height": 400, "legend": {"title": {"text": "Legend"}, "y": 0.6, "yanchor": "top"}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Samples Per Class", "x": 0.5, "xanchor": "center"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "dtick": 0.05, "fixedrange": true, "gridcolor": "black", "linecolor": "black", "range": [0, 0.4332349453894153], "showgrid": false}, "yaxis": {"anchor": "x", "autorange": true, "color": "black", "domain": [0.9200000000000002, 1.0], "fixedrange": true, "rangemode": "normal", "showgrid": false, "showline": false, "showticklabels": false, "zeroline": false}, "xaxis2": {"anchor": "y2", "domain": [0.0, 1.0], "range": [-3, 12], "type": "category"}, "yaxis2": {"anchor": "x2", "autorange": true, "domain": [0.0, 0.7200000000000001], "fixedrange": true, "rangemode": "normal", "title": {"text": "Frequency"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 4, "y", "buffer"], "data": "S9H+oU7rgj90qz52uEilPyL3vs3kjaA/AAAAAAAAAABL0f6hTuuiP9nhIlVw4tE/GhQ+x1++nj9L0f6hTutyPzbk3reZvKE/iZheYG13pj8="}, {"encoding": "base64", "path": ["_data", 5, "y", "buffer"], "data": "7ZrRV/45oj8CqeS8LOKDPw0wbu9DtrQ/mQtqgHF7rz8AAAAAAAAAAMUKh4kyF9Q/WeEwUeaCaj/tmtFX/jmiPwAAAAAAAAAAWeEwUeaCej8="}]}, "9bd0aab21def4ac78315317803ca8364": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"base": 0, "marker": {"color": "#01B8AA"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.08510928961748633], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "45ccb45f-859d-43d3-b583-19f1d160e2c3"}, {"fill": "tozeroy", "line": {"color": "#00008b", "shape": "spline"}, "name": "Train Dataset", "x": [0.0, 0.26, 0.7346938775510204, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.1199999999999992, 1.469387755102041, 1.8199999999999985, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.2040816326530615, 2.6400000000000006, 2.719999999999999, 2.938775510204082, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.673469387755102, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.408163265306123, 4.799999999999997, 4.828125, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.142857142857143, 5.3600000000000065, 5.799999999999997, 5.877551020408164, 6.0, 6.0, 6.32, 6.612244897959184, 6.765625, 6.880000000000003, 7.0, 7.0, 7.140000000000001, 7.346938775510204, 8.0, 8.0, 8.0, 8.0, 8.081632653061225, 8.660000000000004, 8.816326530612246, 8.880000000000003, 9.280000000000001, 9.551020408163266, 9.920000000000002, 10.0, 10.0, 10.285714285714286, 10.700000000000003, 11.0, 11.0, 11.0, 11.020408163265307, 11.755102040816327, 11.96, 12.0, 12.489795918367347, 12.960000000000008, 13.18, 13.224489795918368, 13.959183673469388, 14.693877551020408, 14.879999999999995, 15.428571428571429, 16.16326530612245, 16.700000000000003, 16.89795918367347, 16.960000000000008, 17.63265306122449, 17.96, 18.367346938775512, 19.102040816326532, 19.836734693877553, 20.440000000000012, 20.571428571428573, 21.306122448979593, 22.040816326530614, 22.480000000000004, 22.775510204081634, 23.510204081632654, 23.740000000000002, 24.244897959183675, 24.979591836734695, 25.714285714285715, 26.448979591836736, 27.183673469387756, 27.918367346938776, 28.653061224489797, 29.387755102040817, 30.122448979591837, 30.857142857142858, 31.591836734693878, 32.3265306122449, 33.06122448979592, 33.79591836734694, 34.53061224489796, 35.26530612244898, 36.0], "xaxis": "x2", "y": {"dtype": "float64", "shape": [152]}, "yaxis": "y2", "type": "scatter", "uid": "09f60cb5-d49d-46a2-b357-2480145b8394"}, {"line": {"color": "#00008b", "dash": "dash"}, "mode": "lines+markers", "name": "Train Mean", "x": [6.765625, 6.765625], "xaxis": "x2", "y": [0, 0.053066955495643865], "yaxis": "y2", "type": "scatter", "uid": "2cc7cdf1-f70b-4743-8a44-13e8e14b6b9a"}, {"line": {"color": "#00008b"}, "mode": "lines", "name": "Train Median", "x": [4.0, 4.0], "xaxis": "x2", "y": [0, 0.09485723538286599], "yaxis": "y2", "type": "scatter", "uid": "e5bd696b-6785-4d72-84f8-d55d7c402a21"}, {"fill": "tozeroy", "line": {"color": "#69b3a2", "shape": "spline"}, "name": "Test Dataset", "x": [0.0, 0.26, 0.7346938775510204, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.1199999999999992, 1.469387755102041, 1.8199999999999985, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.2040816326530615, 2.6400000000000006, 2.719999999999999, 2.938775510204082, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.0, 3.673469387755102, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.408163265306123, 4.799999999999997, 4.828125, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.142857142857143, 5.3600000000000065, 5.799999999999997, 5.877551020408164, 6.0, 6.0, 6.32, 6.612244897959184, 6.765625, 6.880000000000003, 7.0, 7.0, 7.140000000000001, 7.346938775510204, 8.0, 8.0, 8.0, 8.0, 8.081632653061225, 8.660000000000004, 8.816326530612246, 8.880000000000003, 9.280000000000001, 9.551020408163266, 9.920000000000002, 10.0, 10.0, 10.285714285714286, 10.700000000000003, 11.0, 11.0, 11.0, 11.020408163265307, 11.755102040816327, 11.96, 12.0, 12.489795918367347, 12.960000000000008, 13.18, 13.224489795918368, 13.959183673469388, 14.693877551020408, 14.879999999999995, 15.428571428571429, 16.16326530612245, 16.700000000000003, 16.89795918367347, 16.960000000000008, 17.63265306122449, 17.96, 18.367346938775512, 19.102040816326532, 19.836734693877553, 20.440000000000012, 20.571428571428573, 21.306122448979593, 22.040816326530614, 22.480000000000004, 22.775510204081634, 23.510204081632654, 23.740000000000002, 24.244897959183675, 24.979591836734695, 25.714285714285715, 26.448979591836736, 27.183673469387756, 27.918367346938776, 28.653061224489797, 29.387755102040817, 30.122448979591837, 30.857142857142858, 31.591836734693878, 32.3265306122449, 33.06122448979592, 33.79591836734694, 34.53061224489796, 35.26530612244898, 36.0], "xaxis": "x2", "y": {"dtype": "float64", "shape": [152]}, "yaxis": "y2", "type": "scatter", "uid": "7b1a10ef-3924-4f8f-b895-206de8cfb08e"}, {"line": {"color": "#69b3a2", "dash": "dash"}, "mode": "lines+markers", "name": "Test Mean", "x": [4.828125, 4.828125], "xaxis": "x2", "y": [0, 0.08052756688778683], "yaxis": "y2", "type": "scatter", "uid": "5ddb340c-89e8-4861-9aa3-0a46f0931ab3"}, {"line": {"color": "#69b3a2"}, "mode": "lines", "name": "Test Median", "x": [3.0, 3.0], "xaxis": "x2", "y": [0, 0.12031515267317901], "yaxis": "y2", "type": "scatter", "uid": "da3670f1-78a8-4dc1-98a2-313c7e85eb18"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"font": {"size": 16}, "showarrow": false, "text": "Drift Score (Earth Mover's Distance)", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0000000000000002, "yanchor": "bottom", "yref": "paper"}, {"font": {"size": 16}, "showarrow": false, "text": "Distribution Plot", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 0.7200000000000001, "yanchor": "bottom", "yref": "paper"}], "bargroupgap": 0, "height": 400, "legend": {"title": {"text": "Legend"}, "y": 0.6, "yanchor": "top"}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Number of Bounding Boxes Per Image", "x": 0.5, "xanchor": "center"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "dtick": 0.05, "fixedrange": true, "gridcolor": "black", "linecolor": "black", "range": [0, 0.4], "showgrid": false}, "yaxis": {"anchor": "x", "autorange": true, "color": "black", "domain": [0.9200000000000002, 1.0], "fixedrange": true, "rangemode": "normal", "showgrid": false, "showline": false, "showticklabels": false, "zeroline": false}, "xaxis2": {"anchor": "y2", "domain": [0.0, 1.0], "fixedrange": false, "range": [0.26, 23.740000000000002], "title": {"text": "Number of Bounding Boxes Per Image"}}, "yaxis2": {"anchor": "x2", "domain": [0.0, 0.7200000000000001], "fixedrange": true, "title": {"text": "Probability Density"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "R/18AU25rD/7O3fyeVawP6rTDXfu6bM/zFb+ExHKtT/MVv4TEcq1P8xW/hMRyrU/zFb+ExHKtT/MVv4TEcq1P8xW/hMRyrU/zFb+ExHKtT/MVv4TEcq1P8xW/hMRyrU/zFb+ExHKtT/MVv4TEcq1P8xW/hMRyrU/zFb+ExHKtT/MVv4TEcq1P8xW/hMRyrU/zFb+ExHKtT9B7EbvOZa2P/u9ZcFxqrg/RIxFAf9Luj+sEkFLIu26P6wSQUsi7bo/rBJBSyLtuj+sEkFLIu26P6wSQUsi7bo/rBJBSyLtuj+sEkFLIu26P6wSQUsi7bo/rBJBSyLtuj+sEkFLIu26P6wSQUsi7bo/rBJBSyLtuj+sEkFLIu26P6wSQUsi7bo/rBJBSyLtuj/mp5GshnS7P0HF9Enu57s/lic/sqLjuz+kDTA8fbG7P/4wJWfLmbs//jAlZ8uZuz/+MCVny5m7P/4wJWfLmbs//jAlZ8uZuz/+MCVny5m7P/4wJWfLmbs//jAlZ8uZuz/+MCVny5m7P/4wJWfLmbs//jAlZ8uZuz/+MCVny5m7P/4wJWfLmbs//jAlZ8uZuz8+1zt0l6q5P2slwlOQSLg/ayXCU5BIuD9rJcJTkEi4P2slwlOQSLg/ayXCU5BIuD9rJcJTkEi4P2slwlOQSLg/HWlvj/lbtj/6lXUpj3m0P94mT2qXV7Q/z2EReKKLsz/PYRF4oouzP89hEXiii7M/z2EReKKLsz/PYRF4oouzP89hEXiii7M/z2EReKKLsz/PYRF4oouzP/sF84bi57I/uvc4CED7sT9+frD9PVCwP1OEfaObDLA/15xEh8dMrz/XnESHx0yvP3v4WMJlaK0/eUvzAlnlqz+NQ7SMlyurP0iJQ3eHp6o/CF862A0iqj8IXzrYDSKqPwICiFHli6k/AwHxdJq2qD+zORKskzumP7M5EqyTO6Y/szkSrJM7pj+zORKskzumP4iibT9Q7qU/LBKCbLLToz/drv8orUWjPwS1UZ1yDKM/mM2by02voT+1NZdDDc+gP4pqbn63X58/Ag5eWKjonj8CDl5YqOiePxqdoRgATp0/3iGdHMwbmz/MwjzgdZWZP8zCPOB1lZk/zMI84HWVmT8eVqHRQHuZP/lFNVvY3ZU/XfA9U+fhlD/Fhf9+LLGUP7049W7kbpI/PvV6OWJ2kD++BHCZ/EWPP3Dstn369I4/q72j9zS0ij+uH7oKaWSIP3xzJoliF4g/h1y6Pbu3hz9jhQwbbd+HPz/yWyat8Ic/OXe+D5Lhhz85eE+OuNmHP9j4wnfzHYc/8fkKn6yFhj9EpGLADqiFPzclT5LLJoQ/3o2/ZNtYgz8GT2PuU32DPx/MsasmnYM/HLWbdtm2hD+at6mxz9SFPyfWR0t/DoY/e6UxZpXjhT8Ny2myxByEP53dKSVEKIM/j4S9tcyDgD/0KJw7R9h3PzNVugCW720//M1MunI1YD8AOVCQ6xdOPxQUVm2G1Tc/LdjM7qgYID9ZFJ4qGKwDP116ash7gfU+wTGbZ6j+CD8Od/Yk1iojP3G4OoFBbDk/Sg7XaqRHTD+Z5RDGmlZaP2hiUnA6iWQ/OlO3ZkrPaj9r+aVzFk1tPw=="}, {"encoding": "base64", "path": ["_data", 4, "y", "buffer"], "data": "bzj++N+7sz8ua7wSEAi4P+HpBBPbYL8/lsU+A0FTwT+WxT4DQVPBP5bFPgNBU8E/lsU+A0FTwT+WxT4DQVPBP5bFPgNBU8E/lsU+A0FTwT+WxT4DQVPBP5bFPgNBU8E/lsU+A0FTwT+WxT4DQVPBP5bFPgNBU8E/lsU+A0FTwT+WxT4DQVPBP5bFPgNBU8E/lsU+A0FTwT+Kjo3rZOvBP6FMpNP/C8M/9He1kpE+wz+33htyLgPDP7feG3IuA8M/t94bci4Dwz+33htyLgPDP7feG3IuA8M/t94bci4Dwz+33htyLgPDP7feG3IuA8M/t94bci4Dwz+33htyLgPDP7feG3IuA8M/t94bci4Dwz+33htyLgPDP7feG3IuA8M/t94bci4Dwz8vz9NlAYbCPxF45D/97sA/30GwpNKYwD/JaaKgKlK/PxXO8U35zL4/Fc7xTfnMvj8VzvFN+cy+PxXO8U35zL4/Fc7xTfnMvj8VzvFN+cy+PxXO8U35zL4/Fc7xTfnMvj8VzvFN+cy+PxXO8U35zL4/Fc7xTfnMvj8VzvFN+cy+PxXO8U35zL4/Fc7xTfnMvj+XsC1K0NO5Pxpy66sME7g/GnLrqwwTuD8acuurDBO4Pxpy66sME7g/GnLrqwwTuD8acuurDBO4Pxpy66sME7g/4H0uUsVQtj8kthPa0ru0P5ehNWJ0nbQ/mF0vaancsz+YXS9pqdyzP5hdL2mp3LM/mF0vaancsz+YXS9pqdyzP5hdL2mp3LM/mF0vaancsz+YXS9pqdyzP8MxulCaMbM/JSXZgLcZsj+zNkPuQlWvP/lKTxW0cq4/AiDLB5kOrT8CIMsHmQ6tP9aK509qkak/13W4jSq8pj8T9PSskW6lP/6iO6g2jaQ/qmbTJO22oz+qZtMk7bajP/+PeBi82aI/lcOOZ4nKoT9ZMlcW0vmfP1kyVxbS+Z8/WTJXFtL5nz9ZMlcW0vmfP7bFJjh30J8/V7mmck4PoD++//lbqkWgPzTXxX5eX6A/o656M90YoT+GknSWSpGhPyll7Tlv/aE/wGWYsYIIoj/AZZixggiiP20YbcXJBaI/gjff6leLoT+88jdTMOSgP7zyN1Mw5KA/vPI3UzDkoD/tqA4kudagP4udTYMDvZw/2FTIPc0Emz/u4UewPquaP0extoLbHpY/peA5h8emkT93x42E6VqPP7quu7hElo4/XXXoIA6vgz8lTALpy613P+KkwlrAhnQ/ofp1x032aj+mEqcG+WZlP2lhv/Qz4mo/1ODYFuMobj9DXi4ZnD5vP03vZjH+uHQ/eLGLRWaadT9lz2V4jox0P52wnaIv92s/6i2oVcLyWT9BYP1N9LtEP5izh8ocaEA/z+vPFSXLHD9dJktVjbwCP+FWSP7h5hE/Tfc+U7BHIT+OzoFtZABDP8k+By2nAkw/2+ut+LzMXD/PuAhKGb1tP71AEkTh6nQ/3cbM0D0LdD+eEbwAiCpqPylXnwSARFc/gY8MEdgvPD90UpDKZEIXPyJEU2rLJeo+X3rvwMwFtD4HcRo9T+N0Pp9uQaulry0+4YuQkBa93D352p8Ud/OCPQXt1DtfBiE9A1N6SBbWtDzOMJX0015BPA=="}]}, "4e90a35c55d34ca99b9253924eb96ac6": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"base": 0, "marker": {"color": "#01B8AA"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.01238221937828273], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "cdf3c233-7ebd-4eca-949b-7f3df15d427a"}, {"fill": "tozeroy", "line": {"color": "#00008b", "shape": "spline"}, "name": "Train Dataset", "x": [37.10152053833008, 109.18000854492188, 147.666328125, 181.2833728027344, 213.46283630371096, 244.24084411621092, 288.14108398437503, 309.654794921875, 374.7276281738281, 379.43372192382816, 467.1339294433594, 494.3518225097656, 532.7771435546875, 544.8547998046874, 562.3316284179688, 603.9962133789062, 628.3988452148437, 637.8612915039062, 669.3140014648437, 752.3986791992188, 759.5673828125, 818.9570922851561, 830.2332397460938, 957.7402099609377, 993.8690820312503, 1035.0429345703126, 1121.3585156249999, 1162.3160546875001, 1178.106982421875, 1357.6400390625004, 1370.497753906251, 1473.6469628906252, 1748.8001025390633, 1764.7797265625002, 1933.3173925781252, 2012.6846044921879, 2183.728701171875, 2219.340537109375, 2429.6777343750005, 2479.671220703125, 2793.8108398437507, 3041.2399902343755, 3177.590546875001, 3530.418046875, 3695.600957031251, 4062.981738281251, 4222.739628906251, 4431.60302734375, 4431.60302734375, 4704.6566015625, 5040.592011718752, 5298.789863281256, 5387.08140625, 5701.75390625, 5701.75390625, 6041.7317578125, 6195.579804687502, 6281.8392446089765, 6728.56197265625, 7020.938710937503, 7028.3362304687535, 7611.106250000002, 7924.246093749999, 8076.224804687497, 8604.1176953125, 9676.7543359375, 9747.055195312505, 10556.037851562502, 10738.5143359375, 11979.0859375, 12017.25703125, 12442.548007812502, 12526.576968679623, 13899.809375, 13962.665234375005, 15166.429726562508, 15433.055898437506, 16740.290625, 16809.860703124992, 18771.314692750268, 18826.20218750001, 19484.689296874996, 21219.124921875, 23049.182578125008, 23160.246736108016, 24051.058984375006, 24538.885673930345, 25016.052416820916, 25324.56679687501, 25935.50882812501, 29840.01703125, 31260.790140891564, 35292.07609375011, 37505.527864962205, 39823.90312500012, 43344.14999999999, 43750.26558903285, 49268.04234374996, 49280.92593750014, 49995.0033131035, 55662.33406250009, 56239.74103717415, 62484.4787612448, 66033.17187500001, 68729.21648531544, 74973.95420938608, 76707.21093749981, 79222.73499999999, 81218.69193345674, 87463.42965752738, 93708.16738159803, 99952.90510566867, 102869.68500000011, 104042.099375, 106197.64282973931, 112442.38055380997, 118687.11827788061, 120834.49906250028, 124931.85600195127, 131176.5937260219, 136103.211875, 137421.33145009255, 139968.65437500042, 143666.0691741632, 149910.80689823383, 156155.5446223045, 162400.28234637514, 168645.02007044578, 174889.75779451642, 181134.49551858706, 187379.23324265773, 193623.97096672838, 199868.70869079902, 205293.34750000003, 206113.44641486966, 212358.1841389403, 218602.92186301097, 224847.6595870816, 231092.39731115225, 237337.1350352229, 243581.87275929353, 249826.6104833642, 250191.84187499966, 256071.34820743484, 262316.0859315055, 268560.82365557615, 274805.56137964677, 281050.29910371744, 287295.03682778805, 293539.7745518587, 299784.51227592933, 306029.25], "xaxis": "x2", "y": {"dtype": "float64", "shape": [152]}, "yaxis": "y2", "type": "scatter", "uid": "c0264c97-b3d1-46ec-ae56-d9bccd063502"}, {"line": {"color": "#00008b", "dash": "dash"}, "mode": "lines+markers", "name": "Train Mean", "x": [23160.246736108016, 23160.246736108016], "xaxis": "x2", "y": [0, 1.057736790762719e-05], "yaxis": "y2", "type": "scatter", "uid": "3ecb6089-0c65-4e4f-8255-3e35fbbc38a1"}, {"line": {"color": "#00008b"}, "mode": "lines", "name": "Train Median", "x": [4431.60302734375, 4431.60302734375], "xaxis": "x2", "y": [0, 2.3786960970197137e-05], "yaxis": "y2", "type": "scatter", "uid": "a0a39eb7-c438-48ea-a9ac-e83e2ee2ba1e"}, {"fill": "tozeroy", "line": {"color": "#69b3a2", "shape": "spline"}, "name": "Test Dataset", "x": [37.10152053833008, 109.18000854492188, 147.666328125, 181.2833728027344, 213.46283630371096, 244.24084411621092, 288.14108398437503, 309.654794921875, 374.7276281738281, 379.43372192382816, 467.1339294433594, 494.3518225097656, 532.7771435546875, 544.8547998046874, 562.3316284179688, 603.9962133789062, 628.3988452148437, 637.8612915039062, 669.3140014648437, 752.3986791992188, 759.5673828125, 818.9570922851561, 830.2332397460938, 957.7402099609377, 993.8690820312503, 1035.0429345703126, 1121.3585156249999, 1162.3160546875001, 1178.106982421875, 1357.6400390625004, 1370.497753906251, 1473.6469628906252, 1748.8001025390633, 1764.7797265625002, 1933.3173925781252, 2012.6846044921879, 2183.728701171875, 2219.340537109375, 2429.6777343750005, 2479.671220703125, 2793.8108398437507, 3041.2399902343755, 3177.590546875001, 3530.418046875, 3695.600957031251, 4062.981738281251, 4222.739628906251, 4431.60302734375, 4431.60302734375, 4704.6566015625, 5040.592011718752, 5298.789863281256, 5387.08140625, 5701.75390625, 5701.75390625, 6041.7317578125, 6195.579804687502, 6281.8392446089765, 6728.56197265625, 7020.938710937503, 7028.3362304687535, 7611.106250000002, 7924.246093749999, 8076.224804687497, 8604.1176953125, 9676.7543359375, 9747.055195312505, 10556.037851562502, 10738.5143359375, 11979.0859375, 12017.25703125, 12442.548007812502, 12526.576968679623, 13899.809375, 13962.665234375005, 15166.429726562508, 15433.055898437506, 16740.290625, 16809.860703124992, 18771.314692750268, 18826.20218750001, 19484.689296874996, 21219.124921875, 23049.182578125008, 23160.246736108016, 24051.058984375006, 24538.885673930345, 25016.052416820916, 25324.56679687501, 25935.50882812501, 29840.01703125, 31260.790140891564, 35292.07609375011, 37505.527864962205, 39823.90312500012, 43344.14999999999, 43750.26558903285, 49268.04234374996, 49280.92593750014, 49995.0033131035, 55662.33406250009, 56239.74103717415, 62484.4787612448, 66033.17187500001, 68729.21648531544, 74973.95420938608, 76707.21093749981, 79222.73499999999, 81218.69193345674, 87463.42965752738, 93708.16738159803, 99952.90510566867, 102869.68500000011, 104042.099375, 106197.64282973931, 112442.38055380997, 118687.11827788061, 120834.49906250028, 124931.85600195127, 131176.5937260219, 136103.211875, 137421.33145009255, 139968.65437500042, 143666.0691741632, 149910.80689823383, 156155.5446223045, 162400.28234637514, 168645.02007044578, 174889.75779451642, 181134.49551858706, 187379.23324265773, 193623.97096672838, 199868.70869079902, 205293.34750000003, 206113.44641486966, 212358.1841389403, 218602.92186301097, 224847.6595870816, 231092.39731115225, 237337.1350352229, 243581.87275929353, 249826.6104833642, 250191.84187499966, 256071.34820743484, 262316.0859315055, 268560.82365557615, 274805.56137964677, 281050.29910371744, 287295.03682778805, 293539.7745518587, 299784.51227592933, 306029.25], "xaxis": "x2", "y": {"dtype": "float64", "shape": [152]}, "yaxis": "y2", "type": "scatter", "uid": "730c8413-6da5-44cd-b692-ae144db03d46"}, {"line": {"color": "#69b3a2", "dash": "dash"}, "mode": "lines+markers", "name": "Test Mean", "x": [24538.885673930345, 24538.885673930345], "xaxis": "x2", "y": [0, 1.0601323304192726e-05], "yaxis": "y2", "type": "scatter", "uid": "215194f5-7ce3-4b00-9a2a-4c315dc45c74"}, {"line": {"color": "#69b3a2"}, "mode": "lines", "name": "Test Median", "x": [5701.75390625, 5701.75390625], "xaxis": "x2", "y": [0, 2.2920725573243815e-05], "yaxis": "y2", "type": "scatter", "uid": "619b3f1e-d0f9-4b5c-9e61-8aaf42979c00"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"font": {"size": 16}, "showarrow": false, "text": "Drift Score (Earth Mover's Distance)", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0000000000000002, "yanchor": "bottom", "yref": "paper"}, {"font": {"size": 16}, "showarrow": false, "text": "Distribution Plot", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 0.7200000000000001, "yanchor": "bottom", "yref": "paper"}], "bargroupgap": 0, "height": 400, "legend": {"title": {"text": "Legend"}, "y": 0.6, "yanchor": "top"}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Bounding Box Area (in pixels)", "x": 0.5, "xanchor": "center"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "dtick": 0.05, "fixedrange": true, "gridcolor": "black", "linecolor": "black", "range": [0, 0.4], "showgrid": false}, "yaxis": {"anchor": "x", "autorange": true, "color": "black", "domain": [0.9200000000000002, 1.0], "fixedrange": true, "rangemode": "normal", "showgrid": false, "showline": false, "showticklabels": false, "zeroline": false}, "xaxis2": {"anchor": "y2", "domain": [0.0, 1.0], "fixedrange": false, "range": [109.18000854492188, 250191.84187499966], "title": {"text": "Bounding Box Area (in pixels)"}}, "yaxis2": {"anchor": "x2", "domain": [0.0, 0.7200000000000001], "fixedrange": true, "title": {"text": "Probability Density"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "TIqb//uo9z5o2WpwobP3PlcKWGU/ufc+73+sih2+9z5x8V6/vcL3Pi0qaXIix/c+kRcnNlnN9z69h5r+XtD3Pk3b5z1s2fc+28VQeBLa9z6IqyajCub3Pnk3k5606fc+NW7yU9bu9z7i3dmzcPD3PrzpnF/A8vc+aQDImzj49z5w4ej2Zfv3PsXTqwKg/Pc+5FY4e64A+D50Zj+kPQv4Pr5OwSUkDPg+WrZPFYkT+D7tqdsd7RT4PuXceOFbJPg+aLCkJaIo+D4/MxCecy34PoCZDkxeN/g+Q2fuivw7+D7Nm6Z+wD34PrLCSog7Ufg+rXGn+5VS+D58zCtVPV34PiU42hfid/g+vwg0zll5+D5nIPBiS4j4PsqGovj9jvg+7nhHFa+c+D5nb68iaJ/4Pon6p3aWrvg+3CAYA/ix+D4y3c7dNcX4Ph1BA+bs0fg+th2nzALY+D4ePwYyt+T4PgqYVZ0n6fg+DJkp0pTv+D5nRLI15fD4Pgeo0YJD8fg+B6jRgkPx+D5iW4twcu/4Pn5QK9qo6fg+oaj4VpHi+D7aN/d9nt/4Pg2xWvT00vg+DbFa9PTS+D4ULiiliMH4PpF/iw1juPg+HJJX4eqy+D6T9QdCuJL4Pi2/fOwvevg+jhbvEoh5+D5oWdexkED4Pim6bI+3Hfg+yDBx88ML+D4vhqVjSsj3Pn4oGpwSKPc++bEcI44c9z7pJch/u4/2PgIXFa/2bfY+pZERwwJ39T7Jv3nv+G71PiARTufTE/U+FCG/OX0B9T6hI5h2iMjzPjs3xnewufM+k+8t8O2W8j5Ea6o9MVXyPp6rhCHqDvE+PJ6U13H98D5g7NL+ayXuPhuUZDZBCu4+Fm9hDZPG7D56QqqXlYzpPhIJVwznXeY+b7MuYK4u5j5wWt017L3kPr/FjHq/++M+nrd/HUxD4z59MJl4+M7iPvCOinV97+E+7actDcVp2j5f6tTh563XPuh34veOvNE+FVd20xjlzj7WEOAE6kfLPo7/gMXoksc+6leGMShBxz7a5NGWh1bEPnkVaZ1XVcQ+bqKBQwIWxD4YfLp4dX3CPguHtzXAVsI+4Q4hBsKTwD45W57qOue+PlVOZL6KHr0+3IYkFoX9uD62Bs44LOS3PhnM2t86XLY+mYCUL6I1tT6DtDgQ2QmyPjmjhLuEG68+CzkfLx1Vqz7Lhfruh9upPgU59TkjTKk+qrSHXX1MqD6nGdUXvXWlPg5x/o+Fb6I+v/P8L8RUoT4NEKDIZ1iePvGvxV83HZg+6h7VNIRilD41PrV/w6uTPrkFKpbrr5I+5gvJfYo0kj6gl4dsR4CTPg97UMQC2ZU+LNjWXPMElz5j4iqf+tKVPjtzFu94IJM+JMeCYdskkT4tJUxHI3eRPjRHJdnFpJM+AmXnnnajlT6OFwtOa9mVPsYzlFB1vJU+2h/7CtHpkz4yBy/aQB+RPk7+TLWrv4s+UTvuZOOihD6ia1tTHZ98PgMDulqlsXU+ppg8UCOrdT78J7fTFNZ1PgR1EU69JXo+FibkCdHCgD4DLtFG48qGPr4mW2Ssio8+pKLjeEH2kz4wVTglOXmVPq55Gs8PWpM+PrdbCRb+jT6ZLX9ihMiEPg=="}, {"encoding": "base64", "path": ["_data", 4, "y", "buffer"], "data": "c3Y4pyGF9j4iXiuXyo/2PsvQOH9tlfY+89+kuVGa9j6N5aBK+Z72PnlFpnBmo/Y+FNOapKup9j5fFfmGuaz2Prmuz2PjtfY+myFn7Yu29j4oxHcOtcL2PpGwHIZwxvY+n4UtxKzL9j5qE6ftT832Pq2zqLGsz/Y+p6ar9EXV9j5d8+zWh9j2PuixuRTK2fY+i8hIvfTd9j4Fpotc1ej2PpBvW1/D6fY+QAXVZWnx9j64yn9g2vL2PimvlJXoAvc+S1C7ZGAH9z7b9iatbAz3PuQbPMjaFvc+ulysPrsb9z4KUp1jmR33PllPeSdYMvc+hIp+nssz9z48RNx9RD/3PoQ3ThNlXPc+sw2XJQVe9z6JfexMt273PiD5FphLdvc+1SbyiAKG9z66orrILIn3PhNmz2Mdm/c+M1kAQzCf9z5w1hTaGrf3Pmsk+tLjx/c+RyuK5FzQ9z4jKrIMt+P3Pl9/NvZ+6/c+KhJsWN759z7f5CXS2v73PnIT1sc3BPg+chPWxzcE+D7f2u1NQQn4PkgYEX1jDPg+pTAkyYEM+D6mMLWfFwz4PuW4jkS8CPg+5biORLwI+D43GpFD1AH4PjdwA6OX/fc+7u3zYOr69z48ewW7nen3PpfvKfc02/c+dgC3m8/a9z5EcE/m0rb3PgfVBIain/c+KWGgv22T9z7MCY6GTGT3Pj/RLE/U7vY+p38UxSjm9j40LiP3S3r2PnBRiqn7X/Y+Pc2HzVWb9T6pqPHv0pT1PqWR3LWQSvU+3Vs/I4g79T6NC6EkqDb0PpcdZvoXKvQ+bN9hI9cw8z7O3QQOr/fyPhO9D1bR1/E+K9t2RjbI8T58M02A+QnwPsPIyw/Q+u8+dgWDd4PN7j5Ea+feJb3rPmnDYZuEoOg+fkmvOplx6D6bYC5SOgDnPgTLxMeKO+Y+IIV2ZD5/5T7zm9mmuwflPlNV6nZtIOQ+/XnK9fwb3j7/uSddLQnbPpqMyx0c/tM+ZkMuRt8M0T4R4w+jWRTNPn+RzLfANMc+a+kH8j+jxj6o8GhZoX/APlA6w3uqfMA+p4nQ/tC4vz5377F5z5i3PncDaHEb67Y+OejYuHP2sD6dsfSjiyKtPqw7QY9OV6o+ZfALZQd3pj525EyPLAKmPlqJ7gpOz6U+cJAl8EIHpj5yimD1pI+oPrmy3eOY1Kw+mUJciT6bsD7Xmq+XV3mxPstxCS95yLE+tdBhKYlJsj4KfE7n8UCzPrA+Zl1LbLM+Jz0AL1FFsz5XwaKz1KOyPr951frDxbA+ndJnwks3rT7oBBuEk+erPp++pIKEQKk+29m1ahlFpT7tBFzQk6WdPiPAxzuqR5M+TENJoTD+iT6s4UvrUlaGPlrkMzsfsog+qEdGmK13iz6y6HL+tQKKPnN9IPqz2oM+L6e0j8tAeD7BLRdWDGtrPg4jdxccFGk+69oGKe1eXz4vZZnueoBlPv4MmerBkXU+IQCNBfRnhD7IRX9mb/KQPhqPlnFWo5g+gKUSbldFnz6k6iF3JZOfPhzpH8PVTKE+RKuJw7XWoD4Fgytdv4OdPoCrrwckFpg+skM8x9f4kj6G/+pLDqWNPl1nndTw84Y+VDStyaTigD7gYI6RdCd2Pg=="}]}, "3588816e0e8f4cd7b64346064de91512": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "fd91e439f97547869ce6b12d987f2a6a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "13a9b835ece14b72b91ebce48081fd31"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 224-230

Prediction drift is detected!
-----------------------------
We can see that the COCO128 contains a drift in the out of the box dataset. In
addition to the prediction count per class, the prediction drift check for object
detection tasks include drift calculation on certain measurements, like the
bounding box area and the number of bboxes per image.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  21.606 seconds)


.. _sphx_glr_download_checks_gallery_vision_model_evaluation_plot_train_test_prediction_drift.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_train_test_prediction_drift.py <plot_train_test_prediction_drift.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_train_test_prediction_drift.ipynb <plot_train_test_prediction_drift.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
