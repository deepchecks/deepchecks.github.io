
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "checks_gallery/vision/model_evaluation/plot_single_dataset_performance.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_checks_gallery_vision_model_evaluation_plot_single_dataset_performance.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_checks_gallery_vision_model_evaluation_plot_single_dataset_performance.py:


.. _plot_vision_single_dataset_performance:

Single Dataset Performance
*********************************

This notebooks provides an overview for using and understanding single dataset performance check.

**Structure:**

* `What Is the Purpose of the Check? <#what-is-the-purpose-of-the-check>`__
* `Generate data an model <#generate-data-and-model>`__
* `Run the check <#run-the-check>`__
* `Define a condition <#define-a-condition>`__

What Is the Purpose of the Check?
=================================
This check returns the results from a dict of metrics, in the format metric name: scorer, calculated for the
given model dataset. The scorer can be an ignite.Metric or Sklearn scorer.
Use this check to evaluate the performance on a single vision dataset such as a test set.

.. GENERATED FROM PYTHON SOURCE LINES 25-27

Generate data and model
-----------------------

.. GENERATED FROM PYTHON SOURCE LINES 27-31

.. code-block:: default


    from deepchecks.vision.checks import SingleDatasetPerformance
    from deepchecks.vision.datasets.classification import mnist








.. GENERATED FROM PYTHON SOURCE LINES 32-37

.. code-block:: default



    mnist_model = mnist.load_model()
    train_ds = mnist.load_dataset(train=True, object_type='VisionData')








.. GENERATED FROM PYTHON SOURCE LINES 38-45

Run the check
-------------
We will run the check with the model defined above.

The check will use the default classification metrics - `Precision
<https://pytorch.org/ignite/generated/ignite.metrics.precision.Precision.html#ignite.metrics.precision.Precision>`__.
and `Recall <https://pytorch.org/ignite/generated/ignite.metrics.recall.Recall.html#ignite.metrics.recall.Recall>`__.

.. GENERATED FROM PYTHON SOURCE LINES 45-51

.. code-block:: default



    check = SingleDatasetPerformance()
    result = check.run(train_ds, mnist_model)
    result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |########                                                                                                                                                     | 8/157 [Time: 00:00]
    Ingesting Batches:
    |##################                                                                                                                                           | 18/157 [Time: 00:00]
    Ingesting Batches:
    |###########################9                                                                                                                                 | 28/157 [Time: 00:00]
    Ingesting Batches:
    |######################################                                                                                                                       | 38/157 [Time: 00:00]
    Ingesting Batches:
    |################################################                                                                                                             | 48/157 [Time: 00:00]
    Ingesting Batches:
    |#########################################################9                                                                                                   | 58/157 [Time: 00:00]
    Ingesting Batches:
    |####################################################################                                                                                         | 68/157 [Time: 00:00]
    Ingesting Batches:
    |##############################################################################                                                                               | 78/157 [Time: 00:00]
    Ingesting Batches:
    |########################################################################################                                                                     | 88/157 [Time: 00:00]
    Ingesting Batches:
    |##################################################################################################                                                           | 98/157 [Time: 00:01]
    Ingesting Batches:
    |############################################################################################################                                                 | 108/157 [Time: 00:01]
    Ingesting Batches:
    |######################################################################################################################                                       | 118/157 [Time: 00:01]
    Ingesting Batches:
    |###############################################################################################################################                              | 127/157 [Time: 00:01]
    Ingesting Batches:
    |#########################################################################################################################################                    | 137/157 [Time: 00:01]
    Ingesting Batches:
    |###################################################################################################################################################          | 147/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <link rel="icon" type="image/x-icon" href="https://deepchecks.com/wp-content/themes/deepchecks/assets/favicons/favicon.ico">
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"476a06e2bf1b4323a5899013c8f59c20": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_3f50f79622a84997ab9beab9cf423100", "IPY_MODEL_fc99403827764354b2854f7946cb12d8", "IPY_MODEL_f5da44c98c714db780201a75fb36b6ee", "IPY_MODEL_a8a9a5d0453240a1917349b4915b3b12"], "layout": "IPY_MODEL_1ff24ea6b0404658ac017d99f7aff3bf"}}, "3f50f79622a84997ab9beab9cf423100": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_73036cc9009d4f3eac943ffbc83ed007", "style": "IPY_MODEL_5ea3eb3f5c9346a8bce0b81dc435f83b", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "73036cc9009d4f3eac943ffbc83ed007": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "5ea3eb3f5c9346a8bce0b81dc435f83b": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "fc99403827764354b2854f7946cb12d8": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c3865886021d4d74aab204e980b5641a", "style": "IPY_MODEL_67438fffb3004bc3ae809a2e66ee8f0b", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "c3865886021d4d74aab204e980b5641a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "67438fffb3004bc3ae809a2e66ee8f0b": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "f5da44c98c714db780201a75fb36b6ee": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_55f767a3dbab45f08786064f4f1a2a7a", "style": "IPY_MODEL_dd24db807650407aa14ff7b06a4ddaa5"}}, "55f767a3dbab45f08786064f4f1a2a7a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "dd24db807650407aa14ff7b06a4ddaa5": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "a8a9a5d0453240a1917349b4915b3b12": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_17fdd9d0243e4329ab6d2040677d5cd4", "IPY_MODEL_f3cfd6ede5fc45e4a2269cae62c76543", "IPY_MODEL_6dc11a39925840c980412cd3939bcca8"], "layout": "IPY_MODEL_cbe9602ffff148abaebaeb15a83de87b"}}, "17fdd9d0243e4329ab6d2040677d5cd4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_213239d14d87449fb7ff2f6c3749ff7b", "style": "IPY_MODEL_270a2ca3d52041ae84c8dc9df6b9dc5c", "value": "<h5><b>Additional Outputs</b></h5>"}}, "213239d14d87449fb7ff2f6c3749ff7b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "270a2ca3d52041ae84c8dc9df6b9dc5c": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "f3cfd6ede5fc45e4a2269cae62c76543": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_4121e3fc783345848803797b415ff926", "style": "IPY_MODEL_2ff7a76d9adf454ba93e19ade6aef01e", "value": "<style type=\"text/css\">\n#T_08191_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_08191_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_08191_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_08191_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_08191_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_08191_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >Metric</th>\n      <th class=\"col_heading level0 col1\" >Class</th>\n      <th class=\"col_heading level0 col2\" >Class Name</th>\n      <th class=\"col_heading level0 col3\" >Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_08191_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n      <td id=\"T_08191_row0_col0\" class=\"data row0 col0\" >Precision</td>\n      <td id=\"T_08191_row0_col1\" class=\"data row0 col1\" >0</td>\n      <td id=\"T_08191_row0_col2\" class=\"data row0 col2\" >0</td>\n      <td id=\"T_08191_row0_col3\" class=\"data row0 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n      <td id=\"T_08191_row1_col0\" class=\"data row1 col0\" >Precision</td>\n      <td id=\"T_08191_row1_col1\" class=\"data row1 col1\" >1</td>\n      <td id=\"T_08191_row1_col2\" class=\"data row1 col2\" >1</td>\n      <td id=\"T_08191_row1_col3\" class=\"data row1 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n      <td id=\"T_08191_row2_col0\" class=\"data row2 col0\" >Precision</td>\n      <td id=\"T_08191_row2_col1\" class=\"data row2 col1\" >2</td>\n      <td id=\"T_08191_row2_col2\" class=\"data row2 col2\" >2</td>\n      <td id=\"T_08191_row2_col3\" class=\"data row2 col3\" >0.97</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n      <td id=\"T_08191_row3_col0\" class=\"data row3 col0\" >Precision</td>\n      <td id=\"T_08191_row3_col1\" class=\"data row3 col1\" >3</td>\n      <td id=\"T_08191_row3_col2\" class=\"data row3 col2\" >3</td>\n      <td id=\"T_08191_row3_col3\" class=\"data row3 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n      <td id=\"T_08191_row4_col0\" class=\"data row4 col0\" >Precision</td>\n      <td id=\"T_08191_row4_col1\" class=\"data row4 col1\" >4</td>\n      <td id=\"T_08191_row4_col2\" class=\"data row4 col2\" >4</td>\n      <td id=\"T_08191_row4_col3\" class=\"data row4 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n      <td id=\"T_08191_row5_col0\" class=\"data row5 col0\" >Precision</td>\n      <td id=\"T_08191_row5_col1\" class=\"data row5 col1\" >5</td>\n      <td id=\"T_08191_row5_col2\" class=\"data row5 col2\" >5</td>\n      <td id=\"T_08191_row5_col3\" class=\"data row5 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n      <td id=\"T_08191_row6_col0\" class=\"data row6 col0\" >Precision</td>\n      <td id=\"T_08191_row6_col1\" class=\"data row6 col1\" >6</td>\n      <td id=\"T_08191_row6_col2\" class=\"data row6 col2\" >6</td>\n      <td id=\"T_08191_row6_col3\" class=\"data row6 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n      <td id=\"T_08191_row7_col0\" class=\"data row7 col0\" >Precision</td>\n      <td id=\"T_08191_row7_col1\" class=\"data row7 col1\" >7</td>\n      <td id=\"T_08191_row7_col2\" class=\"data row7 col2\" >7</td>\n      <td id=\"T_08191_row7_col3\" class=\"data row7 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n      <td id=\"T_08191_row8_col0\" class=\"data row8 col0\" >Precision</td>\n      <td id=\"T_08191_row8_col1\" class=\"data row8 col1\" >8</td>\n      <td id=\"T_08191_row8_col2\" class=\"data row8 col2\" >8</td>\n      <td id=\"T_08191_row8_col3\" class=\"data row8 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n      <td id=\"T_08191_row9_col0\" class=\"data row9 col0\" >Precision</td>\n      <td id=\"T_08191_row9_col1\" class=\"data row9 col1\" >9</td>\n      <td id=\"T_08191_row9_col2\" class=\"data row9 col2\" >9</td>\n      <td id=\"T_08191_row9_col3\" class=\"data row9 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n      <td id=\"T_08191_row10_col0\" class=\"data row10 col0\" >Recall</td>\n      <td id=\"T_08191_row10_col1\" class=\"data row10 col1\" >0</td>\n      <td id=\"T_08191_row10_col2\" class=\"data row10 col2\" >0</td>\n      <td id=\"T_08191_row10_col3\" class=\"data row10 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n      <td id=\"T_08191_row11_col0\" class=\"data row11 col0\" >Recall</td>\n      <td id=\"T_08191_row11_col1\" class=\"data row11 col1\" >1</td>\n      <td id=\"T_08191_row11_col2\" class=\"data row11 col2\" >1</td>\n      <td id=\"T_08191_row11_col3\" class=\"data row11 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n      <td id=\"T_08191_row12_col0\" class=\"data row12 col0\" >Recall</td>\n      <td id=\"T_08191_row12_col1\" class=\"data row12 col1\" >2</td>\n      <td id=\"T_08191_row12_col2\" class=\"data row12 col2\" >2</td>\n      <td id=\"T_08191_row12_col3\" class=\"data row12 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n      <td id=\"T_08191_row13_col0\" class=\"data row13 col0\" >Recall</td>\n      <td id=\"T_08191_row13_col1\" class=\"data row13 col1\" >3</td>\n      <td id=\"T_08191_row13_col2\" class=\"data row13 col2\" >3</td>\n      <td id=\"T_08191_row13_col3\" class=\"data row13 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n      <td id=\"T_08191_row14_col0\" class=\"data row14 col0\" >Recall</td>\n      <td id=\"T_08191_row14_col1\" class=\"data row14 col1\" >4</td>\n      <td id=\"T_08191_row14_col2\" class=\"data row14 col2\" >4</td>\n      <td id=\"T_08191_row14_col3\" class=\"data row14 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row15\" class=\"row_heading level0 row15\" >15</th>\n      <td id=\"T_08191_row15_col0\" class=\"data row15 col0\" >Recall</td>\n      <td id=\"T_08191_row15_col1\" class=\"data row15 col1\" >5</td>\n      <td id=\"T_08191_row15_col2\" class=\"data row15 col2\" >5</td>\n      <td id=\"T_08191_row15_col3\" class=\"data row15 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row16\" class=\"row_heading level0 row16\" >16</th>\n      <td id=\"T_08191_row16_col0\" class=\"data row16 col0\" >Recall</td>\n      <td id=\"T_08191_row16_col1\" class=\"data row16 col1\" >6</td>\n      <td id=\"T_08191_row16_col2\" class=\"data row16 col2\" >6</td>\n      <td id=\"T_08191_row16_col3\" class=\"data row16 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row17\" class=\"row_heading level0 row17\" >17</th>\n      <td id=\"T_08191_row17_col0\" class=\"data row17 col0\" >Recall</td>\n      <td id=\"T_08191_row17_col1\" class=\"data row17 col1\" >7</td>\n      <td id=\"T_08191_row17_col2\" class=\"data row17 col2\" >7</td>\n      <td id=\"T_08191_row17_col3\" class=\"data row17 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row18\" class=\"row_heading level0 row18\" >18</th>\n      <td id=\"T_08191_row18_col0\" class=\"data row18 col0\" >Recall</td>\n      <td id=\"T_08191_row18_col1\" class=\"data row18 col1\" >8</td>\n      <td id=\"T_08191_row18_col2\" class=\"data row18 col2\" >8</td>\n      <td id=\"T_08191_row18_col3\" class=\"data row18 col3\" >0.96</td>\n    </tr>\n    <tr>\n      <th id=\"T_08191_level0_row19\" class=\"row_heading level0 row19\" >19</th>\n      <td id=\"T_08191_row19_col0\" class=\"data row19 col0\" >Recall</td>\n      <td id=\"T_08191_row19_col1\" class=\"data row19 col1\" >9</td>\n      <td id=\"T_08191_row19_col2\" class=\"data row19 col2\" >9</td>\n      <td id=\"T_08191_row19_col3\" class=\"data row19 col3\" >0.97</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "4121e3fc783345848803797b415ff926": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "2ff7a76d9adf454ba93e19ade6aef01e": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "6dc11a39925840c980412cd3939bcca8": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_24e09064680c4f888880cdd9dd4a0c76", "style": "IPY_MODEL_f7b8b5c63ce245978cc4c0bf919eb801", "value": "<div><p style=\"font-size:0.9em;line-height:1;\"><i>Note - data sampling: Data is sampled from the original dataset, running on 10000 samples out of 60000. Sample size can be controlled with the \"n_samples\" parameter.</i></p></div>"}}, "24e09064680c4f888880cdd9dd4a0c76": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "f7b8b5c63ce245978cc4c0bf919eb801": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "cbe9602ffff148abaebaeb15a83de87b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "1ff24ea6b0404658ac017d99f7aff3bf": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "476a06e2bf1b4323a5899013c8f59c20"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 52-55

If you have a GPU, you can speed up this check by passing it as an argument to .run() as device=<your GPU>

To display the results in an IDE like PyCharm, you can use the following code:

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: default


    #  result.show_in_window()







.. GENERATED FROM PYTHON SOURCE LINES 58-59

The result will be displayed in a new window.

.. GENERATED FROM PYTHON SOURCE LINES 61-62

Now we will run a check with a metric different from the defaults- F-1.

.. GENERATED FROM PYTHON SOURCE LINES 62-68

.. code-block:: default

    from ignite.metrics import Fbeta

    check = SingleDatasetPerformance(scorers={'f1': Fbeta(1)})
    result = check.run(train_ds, mnist_model)
    result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |##########                                                                                                                                                   | 10/157 [Time: 00:00]
    Ingesting Batches:
    |###################                                                                                                                                          | 19/157 [Time: 00:00]
    Ingesting Batches:
    |############################9                                                                                                                                | 29/157 [Time: 00:00]
    Ingesting Batches:
    |#######################################                                                                                                                      | 39/157 [Time: 00:00]
    Ingesting Batches:
    |#################################################                                                                                                            | 49/157 [Time: 00:00]
    Ingesting Batches:
    |###########################################################                                                                                                  | 59/157 [Time: 00:00]
    Ingesting Batches:
    |#####################################################################                                                                                        | 69/157 [Time: 00:00]
    Ingesting Batches:
    |##############################################################################                                                                               | 78/157 [Time: 00:00]
    Ingesting Batches:
    |#######################################################################################                                                                      | 87/157 [Time: 00:00]
    Ingesting Batches:
    |################################################################################################                                                             | 96/157 [Time: 00:01]
    Ingesting Batches:
    |#########################################################################################################                                                    | 105/157 [Time: 00:01]
    Ingesting Batches:
    |#################################################################################################################9                                           | 114/157 [Time: 00:01]
    Ingesting Batches:
    |###########################################################################################################################                                  | 123/157 [Time: 00:01]
    Ingesting Batches:
    |####################################################################################################################################                         | 132/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################                | 141/157 [Time: 00:01]
    Ingesting Batches:
    |#######################################################################################################################################################      | 151/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <link rel="icon" type="image/x-icon" href="https://deepchecks.com/wp-content/themes/deepchecks/assets/favicons/favicon.ico">
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"c20dfa3dab9b442895efebbd6f8b1b08": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_91dd0a381723428084e381194014ce8a", "IPY_MODEL_87346d33a1e14bebb5b934e78edce170", "IPY_MODEL_ebd17a8b188d4882b37a259435f5809e", "IPY_MODEL_a978b3080e484119a1eca918596ac480"], "layout": "IPY_MODEL_e1f5ac410bb64ac49c643a216e7b3a63"}}, "91dd0a381723428084e381194014ce8a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_43d0067ddf424d3390238a810c955710", "style": "IPY_MODEL_24cb893cd93d4bbdbc20f108fafbf498", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "43d0067ddf424d3390238a810c955710": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "24cb893cd93d4bbdbc20f108fafbf498": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "87346d33a1e14bebb5b934e78edce170": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6878515ae8314a6490e8cc6d12689f54", "style": "IPY_MODEL_5f5aa9cfd8aa4e32b5287702b02d6737", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "6878515ae8314a6490e8cc6d12689f54": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "5f5aa9cfd8aa4e32b5287702b02d6737": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "ebd17a8b188d4882b37a259435f5809e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_f27954bd155b47aab4a2d159aaf3d0fd", "style": "IPY_MODEL_f7e7d1d0412b44be8f492d675936f840"}}, "f27954bd155b47aab4a2d159aaf3d0fd": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "f7e7d1d0412b44be8f492d675936f840": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "a978b3080e484119a1eca918596ac480": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_a41e8a7521a0417dbb9df754ae420111", "IPY_MODEL_0f931f972b7546f680cb12749c741dc6", "IPY_MODEL_ac807944dbad4bf0aae9f3249ecfb71e"], "layout": "IPY_MODEL_de3ebcf1efb440899ef433c0c091e8d1"}}, "a41e8a7521a0417dbb9df754ae420111": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_7df8596132504871b2b69ecf6294a2f9", "style": "IPY_MODEL_e02dafbd76c5471f80ad080a694d3e64", "value": "<h5><b>Additional Outputs</b></h5>"}}, "7df8596132504871b2b69ecf6294a2f9": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e02dafbd76c5471f80ad080a694d3e64": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "0f931f972b7546f680cb12749c741dc6": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_ec357ad7af134e088eb8a9154f6fbb23", "style": "IPY_MODEL_dd5f33d7e342451c83d55fdf2a74f055", "value": "<style type=\"text/css\">\n#T_13077_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_13077_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_13077_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_13077_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_13077_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_13077_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >Metric</th>\n      <th class=\"col_heading level0 col1\" >Class</th>\n      <th class=\"col_heading level0 col2\" >Class Name</th>\n      <th class=\"col_heading level0 col3\" >Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_13077_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n      <td id=\"T_13077_row0_col0\" class=\"data row0 col0\" >f1</td>\n      <td id=\"T_13077_row0_col1\" class=\"data row0 col1\" ><NA></td>\n      <td id=\"T_13077_row0_col2\" class=\"data row0 col2\" ><NA></td>\n      <td id=\"T_13077_row0_col3\" class=\"data row0 col3\" >0.98</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "ec357ad7af134e088eb8a9154f6fbb23": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "dd5f33d7e342451c83d55fdf2a74f055": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "ac807944dbad4bf0aae9f3249ecfb71e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c9d7e518c74645daaa2588572397dbc0", "style": "IPY_MODEL_ce28a82c32584a228349720b3bb5325f", "value": "<div><p style=\"font-size:0.9em;line-height:1;\"><i>Note - data sampling: Data is sampled from the original dataset, running on 10000 samples out of 60000. Sample size can be controlled with the \"n_samples\" parameter.</i></p></div>"}}, "c9d7e518c74645daaa2588572397dbc0": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ce28a82c32584a228349720b3bb5325f": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "de3ebcf1efb440899ef433c0c091e8d1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e1f5ac410bb64ac49c643a216e7b3a63": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "c20dfa3dab9b442895efebbd6f8b1b08"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 69-74

Define a Condition
==================
We can define a condition to validate that our model performance score is above or below a certain threshold.
The condition is defined as a function that takes the results of the check as input and
returns a ConditionResult object.

.. GENERATED FROM PYTHON SOURCE LINES 74-80

.. code-block:: default


    check = SingleDatasetPerformance()
    check.add_condition_greater_than(0.5)
    result = check.run(train_ds, mnist_model)
    result.show(show_additional_outputs=False)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |#########                                                                                                                                                    | 9/157 [Time: 00:00]
    Ingesting Batches:
    |###################                                                                                                                                          | 19/157 [Time: 00:00]
    Ingesting Batches:
    |############################9                                                                                                                                | 29/157 [Time: 00:00]
    Ingesting Batches:
    |#######################################                                                                                                                      | 39/157 [Time: 00:00]
    Ingesting Batches:
    |#################################################                                                                                                            | 49/157 [Time: 00:00]
    Ingesting Batches:
    |###########################################################                                                                                                  | 59/157 [Time: 00:00]
    Ingesting Batches:
    |#####################################################################                                                                                        | 69/157 [Time: 00:00]
    Ingesting Batches:
    |###############################################################################                                                                              | 79/157 [Time: 00:00]
    Ingesting Batches:
    |#########################################################################################                                                                    | 89/157 [Time: 00:00]
    Ingesting Batches:
    |###################################################################################################                                                          | 99/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################                                                | 109/157 [Time: 00:01]
    Ingesting Batches:
    |#######################################################################################################################                                      | 119/157 [Time: 00:01]
    Ingesting Batches:
    |#################################################################################################################################                            | 129/157 [Time: 00:01]
    Ingesting Batches:
    |###########################################################################################################################################                  | 139/157 [Time: 00:01]
    Ingesting Batches:
    |#####################################################################################################################################################        | 149/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <link rel="icon" type="image/x-icon" href="https://deepchecks.com/wp-content/themes/deepchecks/assets/favicons/favicon.ico">
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"5d4b47eaf01540a1ae8c456815a3ce0c": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_626829bb18b04fe39fa27cf5236d6605", "IPY_MODEL_057df670c49b4cdea49427d71cc466c4", "IPY_MODEL_6f94ef1932be41e6a45f1f67d3ac4e34"], "layout": "IPY_MODEL_bdaf169fb3f74a44b197e62b129461ec"}}, "626829bb18b04fe39fa27cf5236d6605": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_1c22125fbc5342c0b5af1dedd7e44608", "style": "IPY_MODEL_d07e6160fb2a48c0a3885af72d558ead", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "1c22125fbc5342c0b5af1dedd7e44608": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d07e6160fb2a48c0a3885af72d558ead": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "057df670c49b4cdea49427d71cc466c4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_fcbb180603ba47859a2a25b102fe4b59", "style": "IPY_MODEL_aba291a4f813457f9d47240e8f651dba", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "fcbb180603ba47859a2a25b102fe4b59": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "aba291a4f813457f9d47240e8f651dba": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "6f94ef1932be41e6a45f1f67d3ac4e34": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_26411ac8e37d4f5c97fd75db80949529", "style": "IPY_MODEL_d599b9f43ac944eb928fb0861d9cd90d", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_6eb2d_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_6eb2d_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_6eb2d_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_6eb2d_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_6eb2d_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_6eb2d_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_6eb2d_row0_col0\" class=\"data row0 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_6eb2d_row0_col1\" class=\"data row0 col1\" >Score is greater than 0.5 for classes: all</td>\n      <td id=\"T_6eb2d_row0_col2\" class=\"data row0 col2\" >Passed for all of the metrics.</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "26411ac8e37d4f5c97fd75db80949529": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d599b9f43ac944eb928fb0861d9cd90d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "bdaf169fb3f74a44b197e62b129461ec": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "5d4b47eaf01540a1ae8c456815a3ce0c"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 81-83

We can also define a condition on a specific metric (or a subset of the metrics) that was passed to the check and a
specific class, instead of testing all the metrics and all the classes which is the default mode.

.. GENERATED FROM PYTHON SOURCE LINES 83-88

.. code-block:: default


    check = SingleDatasetPerformance()
    check.add_condition_greater_than(0.8, metrics=['Precision'], class_mode='3')
    result = check.run(train_ds, mnist_model)
    result.show(show_additional_outputs=False)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |#########                                                                                                                                                    | 9/157 [Time: 00:00]
    Ingesting Batches:
    |###################                                                                                                                                          | 19/157 [Time: 00:00]
    Ingesting Batches:
    |############################9                                                                                                                                | 29/157 [Time: 00:00]
    Ingesting Batches:
    |#######################################                                                                                                                      | 39/157 [Time: 00:00]
    Ingesting Batches:
    |#################################################                                                                                                            | 49/157 [Time: 00:00]
    Ingesting Batches:
    |###########################################################                                                                                                  | 59/157 [Time: 00:00]
    Ingesting Batches:
    |#####################################################################                                                                                        | 69/157 [Time: 00:00]
    Ingesting Batches:
    |###############################################################################                                                                              | 79/157 [Time: 00:00]
    Ingesting Batches:
    |#########################################################################################                                                                    | 89/157 [Time: 00:00]
    Ingesting Batches:
    |###################################################################################################                                                          | 99/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################                                                | 109/157 [Time: 00:01]
    Ingesting Batches:
    |#######################################################################################################################                                      | 119/157 [Time: 00:01]
    Ingesting Batches:
    |#################################################################################################################################                            | 129/157 [Time: 00:01]
    Ingesting Batches:
    |###########################################################################################################################################                  | 139/157 [Time: 00:01]
    Ingesting Batches:
    |#####################################################################################################################################################        | 149/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <link rel="icon" type="image/x-icon" href="https://deepchecks.com/wp-content/themes/deepchecks/assets/favicons/favicon.ico">
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"526e35bdd4b946cda20bdcdb482a3932": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_6c262b70920341e38c73e317ffe55ad9", "IPY_MODEL_c2d44274da024a73a69a6795e8cce060", "IPY_MODEL_2505d9df6aa14650b7447baea4ac0217"], "layout": "IPY_MODEL_1b921dbee0fd442ca6987c1f96817225"}}, "6c262b70920341e38c73e317ffe55ad9": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_2d3a508470e64492bfd2705276fdc9b0", "style": "IPY_MODEL_0b64d07330b1473e9f4c06c9d4806955", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "2d3a508470e64492bfd2705276fdc9b0": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "0b64d07330b1473e9f4c06c9d4806955": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "c2d44274da024a73a69a6795e8cce060": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_efa83f5c6cce41c380493d240f931788", "style": "IPY_MODEL_33e4efc72ea747fd9c5dcc445e285e85", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "efa83f5c6cce41c380493d240f931788": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "33e4efc72ea747fd9c5dcc445e285e85": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "2505d9df6aa14650b7447baea4ac0217": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_bb520108cbaa43e880f9ba7ceac66387", "style": "IPY_MODEL_f8137864fe71455faf8c63a6bdb923f5", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_8a960_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_8a960_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_8a960_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_8a960_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_8a960_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_8a960_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_8a960_row0_col0\" class=\"data row0 col0\" ><div style=\"color: firebrick;text-align: center;font-weight:bold\">\u2048</div></td>\n      <td id=\"T_8a960_row0_col1\" class=\"data row0 col1\" >Score is greater than 0.8 for classes: 3</td>\n      <td id=\"T_8a960_row0_col2\" class=\"data row0 col2\" >Exception in condition: KeyError: '3'</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "bb520108cbaa43e880f9ba7ceac66387": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "f8137864fe71455faf8c63a6bdb923f5": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "1b921dbee0fd442ca6987c1f96817225": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "526e35bdd4b946cda20bdcdb482a3932"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  7.148 seconds)


.. _sphx_glr_download_checks_gallery_vision_model_evaluation_plot_single_dataset_performance.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_single_dataset_performance.py <plot_single_dataset_performance.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_single_dataset_performance.ipynb <plot_single_dataset_performance.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
