
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "checks_gallery/vision/model_evaluation/plot_single_dataset_performance.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_checks_gallery_vision_model_evaluation_plot_single_dataset_performance.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_checks_gallery_vision_model_evaluation_plot_single_dataset_performance.py:


.. _plot_vision_single_dataset_performance:

Single Dataset Performance
*********************************

This notebooks provides an overview for using and understanding single dataset performance check.

**Structure:**

* `What Is the Purpose of the Check? <#what-is-the-purpose-of-the-check>`__
* `Generate data an model <#generate-data-and-model>`__
* `Run the check <#run-the-check>`__
* `Define a condition <#define-a-condition>`__

What Is the Purpose of the Check?
=================================
This check returns the results from a dict of metrics, in the format metric name: scorer, calculated for the
given model dataset. The scorer can be an ignite.Metric or Sklearn scorer.
Use this check to evaluate the performance on a single vision dataset such as a test set.

.. GENERATED FROM PYTHON SOURCE LINES 25-27

Generate data and model
-----------------------

.. GENERATED FROM PYTHON SOURCE LINES 27-31

.. code-block:: default


    from deepchecks.vision.checks import SingleDatasetPerformance
    from deepchecks.vision.datasets.classification import mnist








.. GENERATED FROM PYTHON SOURCE LINES 32-37

.. code-block:: default



    mnist_model = mnist.load_model()
    train_ds = mnist.load_dataset(train=True, object_type='VisionData')








.. GENERATED FROM PYTHON SOURCE LINES 38-45

Run the check
-------------
We will run the check with the model defined above.

The check will use the default classification metrics - `Precision
<https://pytorch.org/ignite/generated/ignite.metrics.precision.Precision.html#ignite.metrics.precision.Precision>`__.
and `Recall <https://pytorch.org/ignite/generated/ignite.metrics.recall.Recall.html#ignite.metrics.recall.Recall>`__.

.. GENERATED FROM PYTHON SOURCE LINES 45-51

.. code-block:: default



    check = SingleDatasetPerformance()
    result = check.run(train_ds, mnist_model)
    result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |########                                                                                                                                                     | 8/157 [Time: 00:00]
    Ingesting Batches:
    |################                                                                                                                                             | 16/157 [Time: 00:00]
    Ingesting Batches:
    |##########################                                                                                                                                   | 26/157 [Time: 00:00]
    Ingesting Batches:
    |####################################                                                                                                                         | 36/157 [Time: 00:00]
    Ingesting Batches:
    |###############################################                                                                                                              | 47/157 [Time: 00:00]
    Ingesting Batches:
    |#########################################################9                                                                                                   | 58/157 [Time: 00:00]
    Ingesting Batches:
    |#####################################################################                                                                                        | 69/157 [Time: 00:00]
    Ingesting Batches:
    |#################################################################################                                                                            | 81/157 [Time: 00:00]
    Ingesting Batches:
    |#############################################################################################                                                                | 93/157 [Time: 00:00]
    Ingesting Batches:
    |##########################################################################################################                                                   | 106/157 [Time: 00:01]
    Ingesting Batches:
    |######################################################################################################################                                       | 118/157 [Time: 00:01]
    Ingesting Batches:
    |##################################################################################################################################                           | 130/157 [Time: 00:01]
    Ingesting Batches:
    |##############################################################################################################################################               | 142/157 [Time: 00:01]
    Ingesting Batches:
    |##########################################################################################################################################################   | 154/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"85d7726e3408468988e09eecac8c3d1e": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_309b4feb4f8f4697aa64be8aa1dcf236", "IPY_MODEL_709876f6a72f4ca390d6ff605d391028", "IPY_MODEL_7a2b90f6ad9a462ead4f15819efb843d", "IPY_MODEL_eb75101b91c748b6b56a64ab8735fce1"], "layout": "IPY_MODEL_507a7f69392347bdb956e03eb3496f86"}}, "309b4feb4f8f4697aa64be8aa1dcf236": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_f646657f1cc14507b09c5166ee562626", "style": "IPY_MODEL_c8be7a710ef2424ab6c8e3f7e76f8ee2", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "f646657f1cc14507b09c5166ee562626": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "c8be7a710ef2424ab6c8e3f7e76f8ee2": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "709876f6a72f4ca390d6ff605d391028": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_b9bf14a200544a03b6f65d6e730cc183", "style": "IPY_MODEL_dd4700f79e784021a2b7fee2ba75c3a3", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "b9bf14a200544a03b6f65d6e730cc183": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "dd4700f79e784021a2b7fee2ba75c3a3": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "7a2b90f6ad9a462ead4f15819efb843d": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_65f67dfcc0434311b6db78b7528b568e", "style": "IPY_MODEL_2280fb046e2c43c8a13901060140e101"}}, "65f67dfcc0434311b6db78b7528b568e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "2280fb046e2c43c8a13901060140e101": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "eb75101b91c748b6b56a64ab8735fce1": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_5796797f51a5401789bd70a0dc910668", "IPY_MODEL_efbe91ab2f4948a8970e305d114f5e6e", "IPY_MODEL_73d0395a20b44dc29c36df5daad8160b"], "layout": "IPY_MODEL_2f2caaa61ef14b75ac198cc242f5da8b"}}, "5796797f51a5401789bd70a0dc910668": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_43a075e7aa2c4030ad560d143c7993be", "style": "IPY_MODEL_ad384291bb574cb296cf28154cf52d65", "value": "<h5><b>Additional Outputs</b></h5>"}}, "43a075e7aa2c4030ad560d143c7993be": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ad384291bb574cb296cf28154cf52d65": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "efbe91ab2f4948a8970e305d114f5e6e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_a389e94a500541eeb1d2b1c34f1ad8d5", "style": "IPY_MODEL_3fb6e98e1bca4ac68cae6717480e7416", "value": "<style type=\"text/css\">\n#T_be403_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_be403_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_be403_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_be403_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_be403_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_be403_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >Metric</th>\n      <th class=\"col_heading level0 col1\" >Class</th>\n      <th class=\"col_heading level0 col2\" >Class Name</th>\n      <th class=\"col_heading level0 col3\" >Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_be403_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n      <td id=\"T_be403_row0_col0\" class=\"data row0 col0\" >Precision</td>\n      <td id=\"T_be403_row0_col1\" class=\"data row0 col1\" >0</td>\n      <td id=\"T_be403_row0_col2\" class=\"data row0 col2\" >0</td>\n      <td id=\"T_be403_row0_col3\" class=\"data row0 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n      <td id=\"T_be403_row1_col0\" class=\"data row1 col0\" >Precision</td>\n      <td id=\"T_be403_row1_col1\" class=\"data row1 col1\" >1</td>\n      <td id=\"T_be403_row1_col2\" class=\"data row1 col2\" >1</td>\n      <td id=\"T_be403_row1_col3\" class=\"data row1 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n      <td id=\"T_be403_row2_col0\" class=\"data row2 col0\" >Precision</td>\n      <td id=\"T_be403_row2_col1\" class=\"data row2 col1\" >2</td>\n      <td id=\"T_be403_row2_col2\" class=\"data row2 col2\" >2</td>\n      <td id=\"T_be403_row2_col3\" class=\"data row2 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n      <td id=\"T_be403_row3_col0\" class=\"data row3 col0\" >Precision</td>\n      <td id=\"T_be403_row3_col1\" class=\"data row3 col1\" >3</td>\n      <td id=\"T_be403_row3_col2\" class=\"data row3 col2\" >3</td>\n      <td id=\"T_be403_row3_col3\" class=\"data row3 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n      <td id=\"T_be403_row4_col0\" class=\"data row4 col0\" >Precision</td>\n      <td id=\"T_be403_row4_col1\" class=\"data row4 col1\" >4</td>\n      <td id=\"T_be403_row4_col2\" class=\"data row4 col2\" >4</td>\n      <td id=\"T_be403_row4_col3\" class=\"data row4 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n      <td id=\"T_be403_row5_col0\" class=\"data row5 col0\" >Precision</td>\n      <td id=\"T_be403_row5_col1\" class=\"data row5 col1\" >5</td>\n      <td id=\"T_be403_row5_col2\" class=\"data row5 col2\" >5</td>\n      <td id=\"T_be403_row5_col3\" class=\"data row5 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n      <td id=\"T_be403_row6_col0\" class=\"data row6 col0\" >Precision</td>\n      <td id=\"T_be403_row6_col1\" class=\"data row6 col1\" >6</td>\n      <td id=\"T_be403_row6_col2\" class=\"data row6 col2\" >6</td>\n      <td id=\"T_be403_row6_col3\" class=\"data row6 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n      <td id=\"T_be403_row7_col0\" class=\"data row7 col0\" >Precision</td>\n      <td id=\"T_be403_row7_col1\" class=\"data row7 col1\" >7</td>\n      <td id=\"T_be403_row7_col2\" class=\"data row7 col2\" >7</td>\n      <td id=\"T_be403_row7_col3\" class=\"data row7 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n      <td id=\"T_be403_row8_col0\" class=\"data row8 col0\" >Precision</td>\n      <td id=\"T_be403_row8_col1\" class=\"data row8 col1\" >8</td>\n      <td id=\"T_be403_row8_col2\" class=\"data row8 col2\" >8</td>\n      <td id=\"T_be403_row8_col3\" class=\"data row8 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n      <td id=\"T_be403_row9_col0\" class=\"data row9 col0\" >Precision</td>\n      <td id=\"T_be403_row9_col1\" class=\"data row9 col1\" >9</td>\n      <td id=\"T_be403_row9_col2\" class=\"data row9 col2\" >9</td>\n      <td id=\"T_be403_row9_col3\" class=\"data row9 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n      <td id=\"T_be403_row10_col0\" class=\"data row10 col0\" >Recall</td>\n      <td id=\"T_be403_row10_col1\" class=\"data row10 col1\" >0</td>\n      <td id=\"T_be403_row10_col2\" class=\"data row10 col2\" >0</td>\n      <td id=\"T_be403_row10_col3\" class=\"data row10 col3\" >1.00</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n      <td id=\"T_be403_row11_col0\" class=\"data row11 col0\" >Recall</td>\n      <td id=\"T_be403_row11_col1\" class=\"data row11 col1\" >1</td>\n      <td id=\"T_be403_row11_col2\" class=\"data row11 col2\" >1</td>\n      <td id=\"T_be403_row11_col3\" class=\"data row11 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n      <td id=\"T_be403_row12_col0\" class=\"data row12 col0\" >Recall</td>\n      <td id=\"T_be403_row12_col1\" class=\"data row12 col1\" >2</td>\n      <td id=\"T_be403_row12_col2\" class=\"data row12 col2\" >2</td>\n      <td id=\"T_be403_row12_col3\" class=\"data row12 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n      <td id=\"T_be403_row13_col0\" class=\"data row13 col0\" >Recall</td>\n      <td id=\"T_be403_row13_col1\" class=\"data row13 col1\" >3</td>\n      <td id=\"T_be403_row13_col2\" class=\"data row13 col2\" >3</td>\n      <td id=\"T_be403_row13_col3\" class=\"data row13 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n      <td id=\"T_be403_row14_col0\" class=\"data row14 col0\" >Recall</td>\n      <td id=\"T_be403_row14_col1\" class=\"data row14 col1\" >4</td>\n      <td id=\"T_be403_row14_col2\" class=\"data row14 col2\" >4</td>\n      <td id=\"T_be403_row14_col3\" class=\"data row14 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row15\" class=\"row_heading level0 row15\" >15</th>\n      <td id=\"T_be403_row15_col0\" class=\"data row15 col0\" >Recall</td>\n      <td id=\"T_be403_row15_col1\" class=\"data row15 col1\" >5</td>\n      <td id=\"T_be403_row15_col2\" class=\"data row15 col2\" >5</td>\n      <td id=\"T_be403_row15_col3\" class=\"data row15 col3\" >0.97</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row16\" class=\"row_heading level0 row16\" >16</th>\n      <td id=\"T_be403_row16_col0\" class=\"data row16 col0\" >Recall</td>\n      <td id=\"T_be403_row16_col1\" class=\"data row16 col1\" >6</td>\n      <td id=\"T_be403_row16_col2\" class=\"data row16 col2\" >6</td>\n      <td id=\"T_be403_row16_col3\" class=\"data row16 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row17\" class=\"row_heading level0 row17\" >17</th>\n      <td id=\"T_be403_row17_col0\" class=\"data row17 col0\" >Recall</td>\n      <td id=\"T_be403_row17_col1\" class=\"data row17 col1\" >7</td>\n      <td id=\"T_be403_row17_col2\" class=\"data row17 col2\" >7</td>\n      <td id=\"T_be403_row17_col3\" class=\"data row17 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row18\" class=\"row_heading level0 row18\" >18</th>\n      <td id=\"T_be403_row18_col0\" class=\"data row18 col0\" >Recall</td>\n      <td id=\"T_be403_row18_col1\" class=\"data row18 col1\" >8</td>\n      <td id=\"T_be403_row18_col2\" class=\"data row18 col2\" >8</td>\n      <td id=\"T_be403_row18_col3\" class=\"data row18 col3\" >0.97</td>\n    </tr>\n    <tr>\n      <th id=\"T_be403_level0_row19\" class=\"row_heading level0 row19\" >19</th>\n      <td id=\"T_be403_row19_col0\" class=\"data row19 col0\" >Recall</td>\n      <td id=\"T_be403_row19_col1\" class=\"data row19 col1\" >9</td>\n      <td id=\"T_be403_row19_col2\" class=\"data row19 col2\" >9</td>\n      <td id=\"T_be403_row19_col3\" class=\"data row19 col3\" >0.97</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "a389e94a500541eeb1d2b1c34f1ad8d5": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "3fb6e98e1bca4ac68cae6717480e7416": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "73d0395a20b44dc29c36df5daad8160b": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c0e9e883ef8847d598abc50f75a9c1e7", "style": "IPY_MODEL_14add3f817fa469282c632d3c0406b68", "value": "<div><p style=\"font-size:0.9em;line-height:1;\"><i>Note - data sampling: Data is sampled from the original dataset, running on 10000 samples out of 60000. Sample size can be controlled with the \"n_samples\" parameter.</i></p></div>"}}, "c0e9e883ef8847d598abc50f75a9c1e7": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "14add3f817fa469282c632d3c0406b68": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "2f2caaa61ef14b75ac198cc242f5da8b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "507a7f69392347bdb956e03eb3496f86": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "85d7726e3408468988e09eecac8c3d1e"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 52-55

If you have a GPU, you can speed up this check by passing it as an argument to .run() as device=<your GPU>

To display the results in an IDE like PyCharm, you can use the following code:

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: default


    #  result.show_in_window()







.. GENERATED FROM PYTHON SOURCE LINES 58-59

The result will be displayed in a new window.

.. GENERATED FROM PYTHON SOURCE LINES 61-62

Now we will run a check with a metric different from the defaults- F-1.

.. GENERATED FROM PYTHON SOURCE LINES 62-68

.. code-block:: default

    from ignite.metrics import Fbeta

    check = SingleDatasetPerformance(scorers={'f1': Fbeta(1)})
    result = check.run(train_ds, mnist_model)
    result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |###########                                                                                                                                                  | 11/157 [Time: 00:00]
    Ingesting Batches:
    |######################                                                                                                                                       | 22/157 [Time: 00:00]
    Ingesting Batches:
    |#################################                                                                                                                            | 33/157 [Time: 00:00]
    Ingesting Batches:
    |############################################                                                                                                                 | 44/157 [Time: 00:00]
    Ingesting Batches:
    |#######################################################                                                                                                      | 55/157 [Time: 00:00]
    Ingesting Batches:
    |##################################################################                                                                                           | 66/157 [Time: 00:00]
    Ingesting Batches:
    |#############################################################################                                                                                | 77/157 [Time: 00:00]
    Ingesting Batches:
    |########################################################################################                                                                     | 88/157 [Time: 00:00]
    Ingesting Batches:
    |###################################################################################################                                                          | 99/157 [Time: 00:00]
    Ingesting Batches:
    |##############################################################################################################                                               | 110/157 [Time: 00:01]
    Ingesting Batches:
    |#########################################################################################################################                                    | 121/157 [Time: 00:01]
    Ingesting Batches:
    |####################################################################################################################################                         | 132/157 [Time: 00:01]
    Ingesting Batches:
    |###############################################################################################################################################              | 143/157 [Time: 00:01]
    Ingesting Batches:
    |##########################################################################################################################################################   | 154/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"aa8322d3426b44c59c8a0f107c8a5dc2": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_71c843f4b1164eefab1303021328a368", "IPY_MODEL_fad049ee44fa4fb49d1a8b3f09e65724", "IPY_MODEL_fb4707cbbe54485b9fe90ee708e53d67", "IPY_MODEL_84cb0a0589ff435e808030fea75e8f6a"], "layout": "IPY_MODEL_9e3aacc4161040b9b7aecb8e566f6e0d"}}, "71c843f4b1164eefab1303021328a368": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_ec7e3ebd105e4fa3bffbc3a7c0a001ca", "style": "IPY_MODEL_f794e3bb13ab4d01b14efd4e45d46c30", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "ec7e3ebd105e4fa3bffbc3a7c0a001ca": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "f794e3bb13ab4d01b14efd4e45d46c30": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "fad049ee44fa4fb49d1a8b3f09e65724": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_45ffd5e0908c464f9f4b0a4911b1d6ca", "style": "IPY_MODEL_a0a1f78a29a44ae6a805bb850acddbfa", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "45ffd5e0908c464f9f4b0a4911b1d6ca": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a0a1f78a29a44ae6a805bb850acddbfa": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "fb4707cbbe54485b9fe90ee708e53d67": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_ae720b74545043a9a2d381d6fc478ec2", "style": "IPY_MODEL_87de75e5df8d48c28d7026bc08571859"}}, "ae720b74545043a9a2d381d6fc478ec2": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "87de75e5df8d48c28d7026bc08571859": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "84cb0a0589ff435e808030fea75e8f6a": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_6667d5f40d034f26b288b03d4ca7ec44", "IPY_MODEL_438c074abb3841fea1e9e6d95cc5f8a7", "IPY_MODEL_5a32ea44db0241d39fefa0303f26337a"], "layout": "IPY_MODEL_5c39c06005b84d98909671cf25ad48dc"}}, "6667d5f40d034f26b288b03d4ca7ec44": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3430770135194e4ba68e8f7783087b98", "style": "IPY_MODEL_dadbbd61371c46b0bd4ed86b0553cfd6", "value": "<h5><b>Additional Outputs</b></h5>"}}, "3430770135194e4ba68e8f7783087b98": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "dadbbd61371c46b0bd4ed86b0553cfd6": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "438c074abb3841fea1e9e6d95cc5f8a7": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_bb245088e1904eef981138b9bb2099e5", "style": "IPY_MODEL_f3b12e6416024355a7d3a3a0d406f8b3", "value": "<style type=\"text/css\">\n#T_4ff4c_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_4ff4c_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_4ff4c_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_4ff4c_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_4ff4c_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_4ff4c_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >Metric</th>\n      <th class=\"col_heading level0 col1\" >Class</th>\n      <th class=\"col_heading level0 col2\" >Class Name</th>\n      <th class=\"col_heading level0 col3\" >Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_4ff4c_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n      <td id=\"T_4ff4c_row0_col0\" class=\"data row0 col0\" >f1</td>\n      <td id=\"T_4ff4c_row0_col1\" class=\"data row0 col1\" ><NA></td>\n      <td id=\"T_4ff4c_row0_col2\" class=\"data row0 col2\" ><NA></td>\n      <td id=\"T_4ff4c_row0_col3\" class=\"data row0 col3\" >0.98</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "bb245088e1904eef981138b9bb2099e5": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "f3b12e6416024355a7d3a3a0d406f8b3": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "5a32ea44db0241d39fefa0303f26337a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_9923c0211a2e4752bff1abcbea3dc03f", "style": "IPY_MODEL_1ef6f467e6d148adbe980ac1cdf3dd06", "value": "<div><p style=\"font-size:0.9em;line-height:1;\"><i>Note - data sampling: Data is sampled from the original dataset, running on 10000 samples out of 60000. Sample size can be controlled with the \"n_samples\" parameter.</i></p></div>"}}, "9923c0211a2e4752bff1abcbea3dc03f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "1ef6f467e6d148adbe980ac1cdf3dd06": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "5c39c06005b84d98909671cf25ad48dc": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9e3aacc4161040b9b7aecb8e566f6e0d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "aa8322d3426b44c59c8a0f107c8a5dc2"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 69-74

Define a Condition
==================
We can define a condition to validate that our model performance score is above or below a certain threshold.
The condition is defined as a function that takes the results of the check as input and
returns a ConditionResult object.

.. GENERATED FROM PYTHON SOURCE LINES 74-80

.. code-block:: default


    check = SingleDatasetPerformance()
    check.add_condition_greater_than(0.5)
    result = check.run(train_ds, mnist_model)
    result.show(show_additional_outputs=False)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |###########                                                                                                                                                  | 11/157 [Time: 00:00]
    Ingesting Batches:
    |######################                                                                                                                                       | 22/157 [Time: 00:00]
    Ingesting Batches:
    |#################################                                                                                                                            | 33/157 [Time: 00:00]
    Ingesting Batches:
    |#############################################                                                                                                                | 45/157 [Time: 00:00]
    Ingesting Batches:
    |#######################################################9                                                                                                     | 56/157 [Time: 00:00]
    Ingesting Batches:
    |###################################################################                                                                                          | 67/157 [Time: 00:00]
    Ingesting Batches:
    |##############################################################################                                                                               | 78/157 [Time: 00:00]
    Ingesting Batches:
    |#########################################################################################                                                                    | 89/157 [Time: 00:00]
    Ingesting Batches:
    |####################################################################################################                                                         | 100/157 [Time: 00:00]
    Ingesting Batches:
    |##############################################################################################################9                                              | 111/157 [Time: 00:01]
    Ingesting Batches:
    |###########################################################################################################################                                  | 123/157 [Time: 00:01]
    Ingesting Batches:
    |######################################################################################################################################                       | 134/157 [Time: 00:01]
    Ingesting Batches:
    |#################################################################################################################################################            | 145/157 [Time: 00:01]
    Ingesting Batches:
    |###########################################################################################################################################################  | 155/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"4844590a60c14e239f5154c476b6cc7e": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_064c7c7845c94a23961e90e6ee145cb2", "IPY_MODEL_163748616a7441daab57082c1cc80bea", "IPY_MODEL_88ed46f1c9b44313af4222a7ca080ba9"], "layout": "IPY_MODEL_9f41a6b20ed345c8a96f91ee3986a47b"}}, "064c7c7845c94a23961e90e6ee145cb2": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_225a0a697bde43789ba16bd4b4c514d9", "style": "IPY_MODEL_e77fa82a0bc848d1b276792546893d1a", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "225a0a697bde43789ba16bd4b4c514d9": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e77fa82a0bc848d1b276792546893d1a": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "163748616a7441daab57082c1cc80bea": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_5101ec3d46cf460887890dcf260e921f", "style": "IPY_MODEL_1cd0ed50dd8a4db8807ef14efdc10454", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "5101ec3d46cf460887890dcf260e921f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "1cd0ed50dd8a4db8807ef14efdc10454": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "88ed46f1c9b44313af4222a7ca080ba9": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_130c1f721f58463fbf624c4b8907e960", "style": "IPY_MODEL_6c5f4efed6234320ad58c8e9976888c9", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_c402f_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_c402f_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_c402f_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_c402f_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_c402f_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_c402f_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_c402f_row0_col0\" class=\"data row0 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_c402f_row0_col1\" class=\"data row0 col1\" >Score is greater than 0.5 for classes: all</td>\n      <td id=\"T_c402f_row0_col2\" class=\"data row0 col2\" >Passed for all of the mertics.</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "130c1f721f58463fbf624c4b8907e960": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "6c5f4efed6234320ad58c8e9976888c9": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "9f41a6b20ed345c8a96f91ee3986a47b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "4844590a60c14e239f5154c476b6cc7e"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 81-83

We can also define a condition on a specific metric (or a subset of the metrics) that was passed to the check and a
specific class, instead of testing all the metrics and all the classes which is the default mode.

.. GENERATED FROM PYTHON SOURCE LINES 83-88

.. code-block:: default


    check = SingleDatasetPerformance()
    check.add_condition_greater_than(0.8, metrics=['Precision'], class_mode='3')
    result = check.run(train_ds, mnist_model)
    result.show(show_additional_outputs=False)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |##########                                                                                                                                                   | 10/157 [Time: 00:00]
    Ingesting Batches:
    |####################                                                                                                                                         | 20/157 [Time: 00:00]
    Ingesting Batches:
    |##############################                                                                                                                               | 30/157 [Time: 00:00]
    Ingesting Batches:
    |########################################                                                                                                                     | 40/157 [Time: 00:00]
    Ingesting Batches:
    |##################################################                                                                                                           | 50/157 [Time: 00:00]
    Ingesting Batches:
    |#############################################################                                                                                                | 61/157 [Time: 00:00]
    Ingesting Batches:
    |#######################################################################                                                                                      | 71/157 [Time: 00:00]
    Ingesting Batches:
    |#################################################################################                                                                            | 81/157 [Time: 00:00]
    Ingesting Batches:
    |###########################################################################################                                                                  | 91/157 [Time: 00:00]
    Ingesting Batches:
    |######################################################################################################                                                       | 102/157 [Time: 00:01]
    Ingesting Batches:
    |################################################################################################################9                                            | 113/157 [Time: 00:01]
    Ingesting Batches:
    |############################################################################################################################                                 | 124/157 [Time: 00:01]
    Ingesting Batches:
    |#######################################################################################################################################                      | 135/157 [Time: 00:01]
    Ingesting Batches:
    |##################################################################################################################################################           | 146/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"77dae318ec9f4f429e20cbc713841755": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_5b4c3a3382b246e9b89c61642f6812c1", "IPY_MODEL_11a3825b0c3544bfa4721c9c7401b70e", "IPY_MODEL_7211c94115ed4379be5029166701a5e3"], "layout": "IPY_MODEL_e529bc03424c488daceeaeb949651c75"}}, "5b4c3a3382b246e9b89c61642f6812c1": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_45e4c2a01bda43b68379226126400923", "style": "IPY_MODEL_0f305f6c78324db5ba53f3f7c6af15da", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "45e4c2a01bda43b68379226126400923": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "0f305f6c78324db5ba53f3f7c6af15da": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "11a3825b0c3544bfa4721c9c7401b70e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_106d6040f1344b049be30bbb4e110553", "style": "IPY_MODEL_eed31f02ae4040668e5c83067930c181", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "106d6040f1344b049be30bbb4e110553": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "eed31f02ae4040668e5c83067930c181": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "7211c94115ed4379be5029166701a5e3": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6b85cfaaa4e44fc0b713040af80cc908", "style": "IPY_MODEL_855b35848fdd48e994b07ae292c629cf", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_c20be_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_c20be_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_c20be_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_c20be_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_c20be_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_c20be_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_c20be_row0_col0\" class=\"data row0 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_c20be_row0_col1\" class=\"data row0 col1\" >Score is greater than 0.8 for classes: 3</td>\n      <td id=\"T_c20be_row0_col2\" class=\"data row0 col2\" >Passed for all of the mertics.</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "6b85cfaaa4e44fc0b713040af80cc908": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "855b35848fdd48e994b07ae292c629cf": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "e529bc03424c488daceeaeb949651c75": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "77dae318ec9f4f429e20cbc713841755"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  6.503 seconds)


.. _sphx_glr_download_checks_gallery_vision_model_evaluation_plot_single_dataset_performance.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_single_dataset_performance.py <plot_single_dataset_performance.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_single_dataset_performance.ipynb <plot_single_dataset_performance.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
