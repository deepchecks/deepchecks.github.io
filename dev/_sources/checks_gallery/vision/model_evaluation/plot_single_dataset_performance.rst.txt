
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "checks_gallery/vision/model_evaluation/plot_single_dataset_performance.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_checks_gallery_vision_model_evaluation_plot_single_dataset_performance.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_checks_gallery_vision_model_evaluation_plot_single_dataset_performance.py:


.. _plot_vision_single_dataset_performance:

Single Dataset Performance
*********************************

This notebooks provides an overview for using and understanding single dataset performance check.

**Structure:**

* `What Is the Purpose of the Check? <#what-is-the-purpose-of-the-check>`__
* `Generate data an model <#generate-data-and-model>`__
* `Run the check <#run-the-check>`__
* `Define a condition <#define-a-condition>`__

What Is the Purpose of the Check?
=================================
This check returns the results from a dict of metrics, in the format metric name: scorer, calculated for the
given model dataset. The scorer can be an ignite.Metric or Sklearn scorer.
Use this check to evaluate the performance on a single vision dataset such as a test set.

.. GENERATED FROM PYTHON SOURCE LINES 25-27

Generate data and model
-----------------------

.. GENERATED FROM PYTHON SOURCE LINES 27-31

.. code-block:: default


    from deepchecks.vision.checks import SingleDatasetPerformance
    from deepchecks.vision.datasets.classification import mnist








.. GENERATED FROM PYTHON SOURCE LINES 32-37

.. code-block:: default



    mnist_model = mnist.load_model()
    train_ds = mnist.load_dataset(train=True, object_type='VisionData')








.. GENERATED FROM PYTHON SOURCE LINES 38-45

Run the check
-------------
We will run the check with the model defined above.

The check will use the default classification metrics - `Precision
<https://pytorch.org/ignite/generated/ignite.metrics.precision.Precision.html#ignite.metrics.precision.Precision>`__.
and `Recall <https://pytorch.org/ignite/generated/ignite.metrics.recall.Recall.html#ignite.metrics.recall.Recall>`__.

.. GENERATED FROM PYTHON SOURCE LINES 45-51

.. code-block:: default



    check = SingleDatasetPerformance()
    result = check.run(train_ds, mnist_model)
    result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |###########                                                                                                                                                  | 11/157 [Time: 00:00]
    Ingesting Batches:
    |######################                                                                                                                                       | 22/157 [Time: 00:00]
    Ingesting Batches:
    |################################                                                                                                                             | 32/157 [Time: 00:00]
    Ingesting Batches:
    |#########################################                                                                                                                    | 41/157 [Time: 00:00]
    Ingesting Batches:
    |##################################################                                                                                                           | 50/157 [Time: 00:00]
    Ingesting Batches:
    |############################################################                                                                                                 | 60/157 [Time: 00:00]
    Ingesting Batches:
    |#######################################################################                                                                                      | 71/157 [Time: 00:00]
    Ingesting Batches:
    |#################################################################################                                                                            | 81/157 [Time: 00:00]
    Ingesting Batches:
    |############################################################################################                                                                 | 92/157 [Time: 00:00]
    Ingesting Batches:
    |#######################################################################################################                                                      | 103/157 [Time: 00:01]
    Ingesting Batches:
    |#################################################################################################################9                                           | 114/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################                                | 125/157 [Time: 00:01]
    Ingesting Batches:
    |#######################################################################################################################################                      | 135/157 [Time: 00:01]
    Ingesting Batches:
    |#################################################################################################################################################            | 145/157 [Time: 00:01]
    Ingesting Batches:
    |###########################################################################################################################################################  | 155/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"f2ccfcb4bb3743819213d73b91100516": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_2c77cdb52f764d21bb4d53edb16ce0eb", "IPY_MODEL_f3f483d069044420859708737583f750", "IPY_MODEL_fe8e57e8adaa4937bcf353ca200c5016", "IPY_MODEL_b54e4f9e1a484effbb34de642fb0fa37"], "layout": "IPY_MODEL_7610e780ed3f49e198f3a5654f6f7ed9"}}, "2c77cdb52f764d21bb4d53edb16ce0eb": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_61df5558afcd428a9b8ae79c63be1377", "style": "IPY_MODEL_e8140c8cfeae4a88b3b11c8ec642987c", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "61df5558afcd428a9b8ae79c63be1377": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e8140c8cfeae4a88b3b11c8ec642987c": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "f3f483d069044420859708737583f750": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_d6b1752e91c54a3987d7903abfb5103e", "style": "IPY_MODEL_ab0c296ba0184b4fae7469ddeeb61772", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "d6b1752e91c54a3987d7903abfb5103e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ab0c296ba0184b4fae7469ddeeb61772": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "fe8e57e8adaa4937bcf353ca200c5016": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3b2013bfd8d84752aa0c40acf184cee3", "style": "IPY_MODEL_1083a98e09b84cc5a1a16af16a39d742"}}, "3b2013bfd8d84752aa0c40acf184cee3": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "1083a98e09b84cc5a1a16af16a39d742": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "b54e4f9e1a484effbb34de642fb0fa37": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_3c68669750c34a3cbd5e69b2af1a6993", "IPY_MODEL_7e6704e553c84d91aeff8f78ce378ed6", "IPY_MODEL_dce2430cb8ae4ef79f37d426f418c892"], "layout": "IPY_MODEL_859aa3526d8049b4b1ef96302b319d99"}}, "3c68669750c34a3cbd5e69b2af1a6993": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_d479f2ff0bdf4c2e883696f1f27877f1", "style": "IPY_MODEL_4ac98e14db4c4d86870354e546235abd", "value": "<h5><b>Additional Outputs</b></h5>"}}, "d479f2ff0bdf4c2e883696f1f27877f1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "4ac98e14db4c4d86870354e546235abd": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "7e6704e553c84d91aeff8f78ce378ed6": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6c29ba4f1ed2484ba6f57f8192cd72a1", "style": "IPY_MODEL_af236d4d92754743ade57b73157d9be7", "value": "<style type=\"text/css\">\n#T_21510_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_21510_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_21510_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_21510_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_21510_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_21510_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >Metric</th>\n      <th class=\"col_heading level0 col1\" >Class</th>\n      <th class=\"col_heading level0 col2\" >Class Name</th>\n      <th class=\"col_heading level0 col3\" >Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_21510_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n      <td id=\"T_21510_row0_col0\" class=\"data row0 col0\" >Precision</td>\n      <td id=\"T_21510_row0_col1\" class=\"data row0 col1\" >0</td>\n      <td id=\"T_21510_row0_col2\" class=\"data row0 col2\" >0</td>\n      <td id=\"T_21510_row0_col3\" class=\"data row0 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n      <td id=\"T_21510_row1_col0\" class=\"data row1 col0\" >Precision</td>\n      <td id=\"T_21510_row1_col1\" class=\"data row1 col1\" >1</td>\n      <td id=\"T_21510_row1_col2\" class=\"data row1 col2\" >1</td>\n      <td id=\"T_21510_row1_col3\" class=\"data row1 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n      <td id=\"T_21510_row2_col0\" class=\"data row2 col0\" >Precision</td>\n      <td id=\"T_21510_row2_col1\" class=\"data row2 col1\" >2</td>\n      <td id=\"T_21510_row2_col2\" class=\"data row2 col2\" >2</td>\n      <td id=\"T_21510_row2_col3\" class=\"data row2 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n      <td id=\"T_21510_row3_col0\" class=\"data row3 col0\" >Precision</td>\n      <td id=\"T_21510_row3_col1\" class=\"data row3 col1\" >3</td>\n      <td id=\"T_21510_row3_col2\" class=\"data row3 col2\" >3</td>\n      <td id=\"T_21510_row3_col3\" class=\"data row3 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n      <td id=\"T_21510_row4_col0\" class=\"data row4 col0\" >Precision</td>\n      <td id=\"T_21510_row4_col1\" class=\"data row4 col1\" >4</td>\n      <td id=\"T_21510_row4_col2\" class=\"data row4 col2\" >4</td>\n      <td id=\"T_21510_row4_col3\" class=\"data row4 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n      <td id=\"T_21510_row5_col0\" class=\"data row5 col0\" >Precision</td>\n      <td id=\"T_21510_row5_col1\" class=\"data row5 col1\" >5</td>\n      <td id=\"T_21510_row5_col2\" class=\"data row5 col2\" >5</td>\n      <td id=\"T_21510_row5_col3\" class=\"data row5 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n      <td id=\"T_21510_row6_col0\" class=\"data row6 col0\" >Precision</td>\n      <td id=\"T_21510_row6_col1\" class=\"data row6 col1\" >6</td>\n      <td id=\"T_21510_row6_col2\" class=\"data row6 col2\" >6</td>\n      <td id=\"T_21510_row6_col3\" class=\"data row6 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n      <td id=\"T_21510_row7_col0\" class=\"data row7 col0\" >Precision</td>\n      <td id=\"T_21510_row7_col1\" class=\"data row7 col1\" >7</td>\n      <td id=\"T_21510_row7_col2\" class=\"data row7 col2\" >7</td>\n      <td id=\"T_21510_row7_col3\" class=\"data row7 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n      <td id=\"T_21510_row8_col0\" class=\"data row8 col0\" >Precision</td>\n      <td id=\"T_21510_row8_col1\" class=\"data row8 col1\" >8</td>\n      <td id=\"T_21510_row8_col2\" class=\"data row8 col2\" >8</td>\n      <td id=\"T_21510_row8_col3\" class=\"data row8 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n      <td id=\"T_21510_row9_col0\" class=\"data row9 col0\" >Precision</td>\n      <td id=\"T_21510_row9_col1\" class=\"data row9 col1\" >9</td>\n      <td id=\"T_21510_row9_col2\" class=\"data row9 col2\" >9</td>\n      <td id=\"T_21510_row9_col3\" class=\"data row9 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n      <td id=\"T_21510_row10_col0\" class=\"data row10 col0\" >Recall</td>\n      <td id=\"T_21510_row10_col1\" class=\"data row10 col1\" >0</td>\n      <td id=\"T_21510_row10_col2\" class=\"data row10 col2\" >0</td>\n      <td id=\"T_21510_row10_col3\" class=\"data row10 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n      <td id=\"T_21510_row11_col0\" class=\"data row11 col0\" >Recall</td>\n      <td id=\"T_21510_row11_col1\" class=\"data row11 col1\" >1</td>\n      <td id=\"T_21510_row11_col2\" class=\"data row11 col2\" >1</td>\n      <td id=\"T_21510_row11_col3\" class=\"data row11 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n      <td id=\"T_21510_row12_col0\" class=\"data row12 col0\" >Recall</td>\n      <td id=\"T_21510_row12_col1\" class=\"data row12 col1\" >2</td>\n      <td id=\"T_21510_row12_col2\" class=\"data row12 col2\" >2</td>\n      <td id=\"T_21510_row12_col3\" class=\"data row12 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n      <td id=\"T_21510_row13_col0\" class=\"data row13 col0\" >Recall</td>\n      <td id=\"T_21510_row13_col1\" class=\"data row13 col1\" >3</td>\n      <td id=\"T_21510_row13_col2\" class=\"data row13 col2\" >3</td>\n      <td id=\"T_21510_row13_col3\" class=\"data row13 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n      <td id=\"T_21510_row14_col0\" class=\"data row14 col0\" >Recall</td>\n      <td id=\"T_21510_row14_col1\" class=\"data row14 col1\" >4</td>\n      <td id=\"T_21510_row14_col2\" class=\"data row14 col2\" >4</td>\n      <td id=\"T_21510_row14_col3\" class=\"data row14 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row15\" class=\"row_heading level0 row15\" >15</th>\n      <td id=\"T_21510_row15_col0\" class=\"data row15 col0\" >Recall</td>\n      <td id=\"T_21510_row15_col1\" class=\"data row15 col1\" >5</td>\n      <td id=\"T_21510_row15_col2\" class=\"data row15 col2\" >5</td>\n      <td id=\"T_21510_row15_col3\" class=\"data row15 col3\" >0.97</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row16\" class=\"row_heading level0 row16\" >16</th>\n      <td id=\"T_21510_row16_col0\" class=\"data row16 col0\" >Recall</td>\n      <td id=\"T_21510_row16_col1\" class=\"data row16 col1\" >6</td>\n      <td id=\"T_21510_row16_col2\" class=\"data row16 col2\" >6</td>\n      <td id=\"T_21510_row16_col3\" class=\"data row16 col3\" >1.00</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row17\" class=\"row_heading level0 row17\" >17</th>\n      <td id=\"T_21510_row17_col0\" class=\"data row17 col0\" >Recall</td>\n      <td id=\"T_21510_row17_col1\" class=\"data row17 col1\" >7</td>\n      <td id=\"T_21510_row17_col2\" class=\"data row17 col2\" >7</td>\n      <td id=\"T_21510_row17_col3\" class=\"data row17 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row18\" class=\"row_heading level0 row18\" >18</th>\n      <td id=\"T_21510_row18_col0\" class=\"data row18 col0\" >Recall</td>\n      <td id=\"T_21510_row18_col1\" class=\"data row18 col1\" >8</td>\n      <td id=\"T_21510_row18_col2\" class=\"data row18 col2\" >8</td>\n      <td id=\"T_21510_row18_col3\" class=\"data row18 col3\" >0.97</td>\n    </tr>\n    <tr>\n      <th id=\"T_21510_level0_row19\" class=\"row_heading level0 row19\" >19</th>\n      <td id=\"T_21510_row19_col0\" class=\"data row19 col0\" >Recall</td>\n      <td id=\"T_21510_row19_col1\" class=\"data row19 col1\" >9</td>\n      <td id=\"T_21510_row19_col2\" class=\"data row19 col2\" >9</td>\n      <td id=\"T_21510_row19_col3\" class=\"data row19 col3\" >0.97</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "6c29ba4f1ed2484ba6f57f8192cd72a1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "af236d4d92754743ade57b73157d9be7": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "dce2430cb8ae4ef79f37d426f418c892": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_665bfcf0cf164fddac7b94f788e38cfb", "style": "IPY_MODEL_94e9be34e13945c6ada87115505aa271", "value": "<div><p style=\"font-size:0.9em;line-height:1;\"><i>Note - data sampling: Data is sampled from the original dataset, running on 10000 samples out of 60000. Sample size can be controlled with the \"n_samples\" parameter.</i></p></div>"}}, "665bfcf0cf164fddac7b94f788e38cfb": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "94e9be34e13945c6ada87115505aa271": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "859aa3526d8049b4b1ef96302b319d99": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "7610e780ed3f49e198f3a5654f6f7ed9": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "f2ccfcb4bb3743819213d73b91100516"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 52-55

If you have a GPU, you can speed up this check by passing it as an argument to .run() as device=<your GPU>

To display the results in an IDE like PyCharm, you can use the following code:

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: default


    #  result.show_in_window()







.. GENERATED FROM PYTHON SOURCE LINES 58-59

The result will be displayed in a new window.

.. GENERATED FROM PYTHON SOURCE LINES 61-62

Now we will run a check with a metric different from the defaults- F-1.

.. GENERATED FROM PYTHON SOURCE LINES 62-68

.. code-block:: default

    from ignite.metrics import Fbeta

    check = SingleDatasetPerformance(scorers={'f1': Fbeta(1)})
    result = check.run(train_ds, mnist_model)
    result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |##########                                                                                                                                                   | 10/157 [Time: 00:00]
    Ingesting Batches:
    |####################                                                                                                                                         | 20/157 [Time: 00:00]
    Ingesting Batches:
    |##############################                                                                                                                               | 30/157 [Time: 00:00]
    Ingesting Batches:
    |########################################                                                                                                                     | 40/157 [Time: 00:00]
    Ingesting Batches:
    |##################################################                                                                                                           | 50/157 [Time: 00:00]
    Ingesting Batches:
    |############################################################                                                                                                 | 60/157 [Time: 00:00]
    Ingesting Batches:
    |#####################################################################                                                                                        | 69/157 [Time: 00:00]
    Ingesting Batches:
    |##############################################################################                                                                               | 78/157 [Time: 00:00]
    Ingesting Batches:
    |#######################################################################################                                                                      | 87/157 [Time: 00:00]
    Ingesting Batches:
    |#################################################################################################                                                            | 97/157 [Time: 00:01]
    Ingesting Batches:
    |###########################################################################################################                                                  | 107/157 [Time: 00:01]
    Ingesting Batches:
    |####################################################################################################################9                                        | 117/157 [Time: 00:01]
    Ingesting Batches:
    |###############################################################################################################################                              | 127/157 [Time: 00:01]
    Ingesting Batches:
    |#########################################################################################################################################                    | 137/157 [Time: 00:01]
    Ingesting Batches:
    |###################################################################################################################################################          | 147/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"ff46535c26524a06b7bd0767140e769b": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_d8d63315c0434a3b947181f9ca150a95", "IPY_MODEL_108676f18956431a83640f033d647f2d", "IPY_MODEL_52c13b3a181245178600df8801118470", "IPY_MODEL_bfa5498dc49442b6941bf13c8ecc3fb7"], "layout": "IPY_MODEL_57c5a715b2b74536b664e4e3440a331b"}}, "d8d63315c0434a3b947181f9ca150a95": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_d0726194dd0e41bb84990c2676dc8559", "style": "IPY_MODEL_a7abfef5d6c8427c849aa671a4849140", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "d0726194dd0e41bb84990c2676dc8559": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a7abfef5d6c8427c849aa671a4849140": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "108676f18956431a83640f033d647f2d": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_732d284b35d94680bf3d633d7c21e676", "style": "IPY_MODEL_a9ce77d638f042469037773da7132851", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "732d284b35d94680bf3d633d7c21e676": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a9ce77d638f042469037773da7132851": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "52c13b3a181245178600df8801118470": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_f40280fd9730430a9e1eca230beb2243", "style": "IPY_MODEL_c571824ba10442d3afd55897594b81f0"}}, "f40280fd9730430a9e1eca230beb2243": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "c571824ba10442d3afd55897594b81f0": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "bfa5498dc49442b6941bf13c8ecc3fb7": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_435e83f5e5ae4c1984f504526304bb22", "IPY_MODEL_74b435ca72a04456a010a6cd977c2715", "IPY_MODEL_6d7a61907982489d94020d0693cff925"], "layout": "IPY_MODEL_fe034d2cc61e4085ba486708c4e1479d"}}, "435e83f5e5ae4c1984f504526304bb22": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_8b2bd3d1973c4a5b9381b5cbc7ba4894", "style": "IPY_MODEL_9821ec8cd7f7479ea17526286dd4b1fb", "value": "<h5><b>Additional Outputs</b></h5>"}}, "8b2bd3d1973c4a5b9381b5cbc7ba4894": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9821ec8cd7f7479ea17526286dd4b1fb": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "74b435ca72a04456a010a6cd977c2715": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_ada18ad457f04aa7a40fdc7f0d85458b", "style": "IPY_MODEL_088889ab3f7044669a938e65bfeaf379", "value": "<style type=\"text/css\">\n#T_4d311_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_4d311_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_4d311_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_4d311_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_4d311_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_4d311_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >Metric</th>\n      <th class=\"col_heading level0 col1\" >Class</th>\n      <th class=\"col_heading level0 col2\" >Class Name</th>\n      <th class=\"col_heading level0 col3\" >Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_4d311_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n      <td id=\"T_4d311_row0_col0\" class=\"data row0 col0\" >f1</td>\n      <td id=\"T_4d311_row0_col1\" class=\"data row0 col1\" ><NA></td>\n      <td id=\"T_4d311_row0_col2\" class=\"data row0 col2\" ><NA></td>\n      <td id=\"T_4d311_row0_col3\" class=\"data row0 col3\" >0.98</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "ada18ad457f04aa7a40fdc7f0d85458b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "088889ab3f7044669a938e65bfeaf379": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "6d7a61907982489d94020d0693cff925": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_7f5a55121d124563b3ff9b02ceb5264e", "style": "IPY_MODEL_55b4f716c4b8475bbc832e50ab6abdc5", "value": "<div><p style=\"font-size:0.9em;line-height:1;\"><i>Note - data sampling: Data is sampled from the original dataset, running on 10000 samples out of 60000. Sample size can be controlled with the \"n_samples\" parameter.</i></p></div>"}}, "7f5a55121d124563b3ff9b02ceb5264e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "55b4f716c4b8475bbc832e50ab6abdc5": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "fe034d2cc61e4085ba486708c4e1479d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "57c5a715b2b74536b664e4e3440a331b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "ff46535c26524a06b7bd0767140e769b"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 69-74

Define a Condition
==================
We can define a condition to validate that our model performance score is above or below a certain threshold.
The condition is defined as a function that takes the results of the check as input and
returns a ConditionResult object.

.. GENERATED FROM PYTHON SOURCE LINES 74-80

.. code-block:: default


    check = SingleDatasetPerformance()
    check.add_condition_greater_than(0.5)
    result = check.run(train_ds, mnist_model)
    result.show(show_additional_outputs=False)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |###########                                                                                                                                                  | 11/157 [Time: 00:00]
    Ingesting Batches:
    |######################                                                                                                                                       | 22/157 [Time: 00:00]
    Ingesting Batches:
    |#################################                                                                                                                            | 33/157 [Time: 00:00]
    Ingesting Batches:
    |###########################################                                                                                                                  | 43/157 [Time: 00:00]
    Ingesting Batches:
    |#####################################################                                                                                                        | 53/157 [Time: 00:00]
    Ingesting Batches:
    |###############################################################                                                                                              | 63/157 [Time: 00:00]
    Ingesting Batches:
    |########################################################################                                                                                     | 72/157 [Time: 00:00]
    Ingesting Batches:
    |##################################################################################                                                                           | 82/157 [Time: 00:00]
    Ingesting Batches:
    |###########################################################################################                                                                  | 91/157 [Time: 00:01]
    Ingesting Batches:
    |####################################################################################################                                                         | 100/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################                                                | 109/157 [Time: 00:01]
    Ingesting Batches:
    |#######################################################################################################################                                      | 119/157 [Time: 00:01]
    Ingesting Batches:
    |#################################################################################################################################                            | 129/157 [Time: 00:01]
    Ingesting Batches:
    |############################################################################################################################################                 | 140/157 [Time: 00:01]
    Ingesting Batches:
    |######################################################################################################################################################       | 150/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"58dcdb44421f46028ab154e04a3e0bb3": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_cc6d9cf52b3f43ef8b0c04b9d36b681d", "IPY_MODEL_6b7fa3f160c146fdb5560f8eeabdd4f4", "IPY_MODEL_cf65bcd289b44ecc9acdc4d1e6ece4d0"], "layout": "IPY_MODEL_17d89861bd8f4b41a86c97d7d898b5f0"}}, "cc6d9cf52b3f43ef8b0c04b9d36b681d": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3cd958384f50492c91e7099582988ee9", "style": "IPY_MODEL_4e919b81d64545dc944b808d79a1fc22", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "3cd958384f50492c91e7099582988ee9": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "4e919b81d64545dc944b808d79a1fc22": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "6b7fa3f160c146fdb5560f8eeabdd4f4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_7bd0f76941c944c6a6033a458cb5c966", "style": "IPY_MODEL_6cf1328fd5ac426d964715ff93f3ff18", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "7bd0f76941c944c6a6033a458cb5c966": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "6cf1328fd5ac426d964715ff93f3ff18": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "cf65bcd289b44ecc9acdc4d1e6ece4d0": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_f9d179e49fec4a8ebb46e43ae80b32dc", "style": "IPY_MODEL_bee11b407cc049818f19cf42b01cbfa4", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_83042_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_83042_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_83042_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_83042_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_83042_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_83042_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_83042_row0_col0\" class=\"data row0 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_83042_row0_col1\" class=\"data row0 col1\" >Score is greater than 0.5 for classes: all</td>\n      <td id=\"T_83042_row0_col2\" class=\"data row0 col2\" >Passed for all of the mertics.</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "f9d179e49fec4a8ebb46e43ae80b32dc": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "bee11b407cc049818f19cf42b01cbfa4": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "17d89861bd8f4b41a86c97d7d898b5f0": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "58dcdb44421f46028ab154e04a3e0bb3"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 81-83

We can also define a condition on a specific metric (or a subset of the metrics) that was passed to the check and a
specific class, instead of testing all the metrics and all the classes which is the default mode.

.. GENERATED FROM PYTHON SOURCE LINES 83-88

.. code-block:: default


    check = SingleDatasetPerformance()
    check.add_condition_greater_than(0.8, metrics=['Precision'], class_mode='3')
    result = check.run(train_ds, mnist_model)
    result.show(show_additional_outputs=False)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |##########                                                                                                                                                   | 10/157 [Time: 00:00]
    Ingesting Batches:
    |#####################                                                                                                                                        | 21/157 [Time: 00:00]
    Ingesting Batches:
    |###############################                                                                                                                              | 31/157 [Time: 00:00]
    Ingesting Batches:
    |#########################################                                                                                                                    | 41/157 [Time: 00:00]
    Ingesting Batches:
    |###################################################                                                                                                          | 51/157 [Time: 00:00]
    Ingesting Batches:
    |############################################################                                                                                                 | 60/157 [Time: 00:00]
    Ingesting Batches:
    |#####################################################################                                                                                        | 69/157 [Time: 00:00]
    Ingesting Batches:
    |################################################################################                                                                             | 80/157 [Time: 00:00]
    Ingesting Batches:
    |##########################################################################################                                                                   | 90/157 [Time: 00:00]
    Ingesting Batches:
    |####################################################################################################                                                         | 100/157 [Time: 00:01]
    Ingesting Batches:
    |##############################################################################################################                                               | 110/157 [Time: 00:01]
    Ingesting Batches:
    |########################################################################################################################                                     | 120/157 [Time: 00:01]
    Ingesting Batches:
    |##################################################################################################################################                           | 130/157 [Time: 00:01]
    Ingesting Batches:
    |############################################################################################################################################                 | 140/157 [Time: 00:01]
    Ingesting Batches:
    |######################################################################################################################################################       | 150/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"611e4b0ab5ad45debb18ed650b715bf0": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_d2c7aafa512747b1bba0f82e875ff246", "IPY_MODEL_ba30a8f605aa4ce692b22a57873455de", "IPY_MODEL_dabff13934b04988acee4c96ebd74df9"], "layout": "IPY_MODEL_9038cf645651404fb5e99311e48c30c4"}}, "d2c7aafa512747b1bba0f82e875ff246": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_2def1b889bae47688a12c68ce76f6164", "style": "IPY_MODEL_a9e94dc502d24e6380acecdfb84bc262", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "2def1b889bae47688a12c68ce76f6164": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a9e94dc502d24e6380acecdfb84bc262": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "ba30a8f605aa4ce692b22a57873455de": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_4af5dcc464b34f42b48413fa01d3ba48", "style": "IPY_MODEL_01e4f36fc3994f79bc14b5d8590554c1", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "4af5dcc464b34f42b48413fa01d3ba48": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "01e4f36fc3994f79bc14b5d8590554c1": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "dabff13934b04988acee4c96ebd74df9": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_5d336eebd49b4c9b9554f57f2f744cab", "style": "IPY_MODEL_81a72f9be03c4acc8709ac31b393de9d", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_515dd_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_515dd_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_515dd_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_515dd_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_515dd_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_515dd_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_515dd_row0_col0\" class=\"data row0 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_515dd_row0_col1\" class=\"data row0 col1\" >Score is greater than 0.8 for classes: 3</td>\n      <td id=\"T_515dd_row0_col2\" class=\"data row0 col2\" >Passed for all of the mertics.</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "5d336eebd49b4c9b9554f57f2f744cab": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "81a72f9be03c4acc8709ac31b393de9d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "9038cf645651404fb5e99311e48c30c4": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "611e4b0ab5ad45debb18ed650b715bf0"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  7.099 seconds)


.. _sphx_glr_download_checks_gallery_vision_model_evaluation_plot_single_dataset_performance.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_single_dataset_performance.py <plot_single_dataset_performance.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_single_dataset_performance.ipynb <plot_single_dataset_performance.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
