
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "checks_gallery/vision/model_evaluation/plot_single_dataset_performance.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_checks_gallery_vision_model_evaluation_plot_single_dataset_performance.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_checks_gallery_vision_model_evaluation_plot_single_dataset_performance.py:


.. _plot_vision_single_dataset_performance:

Single Dataset Performance
*********************************

This notebooks provides an overview for using and understanding single dataset performance check.

**Structure:**

* `What Is the Purpose of the Check? <#what-is-the-purpose-of-the-check>`__
* `Generate data an model <#generate-data-and-model>`__
* `Run the check <#run-the-check>`__
* `Define a condition <#define-a-condition>`__

What Is the Purpose of the Check?
=================================
This check returns the results from a dict of metrics, in the format metric name: scorer, calculated for the
given model dataset. The scorer can be an ignite.Metric or Sklearn scorer.
Use this check to evaluate the performance on a single vision dataset such as a test set.

.. GENERATED FROM PYTHON SOURCE LINES 25-27

Generate data and model
-----------------------

.. GENERATED FROM PYTHON SOURCE LINES 27-31

.. code-block:: default


    from deepchecks.vision.checks import SingleDatasetPerformance
    from deepchecks.vision.datasets.classification import mnist








.. GENERATED FROM PYTHON SOURCE LINES 32-37

.. code-block:: default



    mnist_model = mnist.load_model()
    train_ds = mnist.load_dataset(train=True, object_type='VisionData')








.. GENERATED FROM PYTHON SOURCE LINES 38-45

Run the check
-------------
We will run the check with the model defined above.

The check will use the default classification metrics - `Precision
<https://pytorch.org/ignite/generated/ignite.metrics.precision.Precision.html#ignite.metrics.precision.Precision>`__.
and `Recall <https://pytorch.org/ignite/generated/ignite.metrics.recall.Recall.html#ignite.metrics.recall.Recall>`__.

.. GENERATED FROM PYTHON SOURCE LINES 45-51

.. code-block:: default



    check = SingleDatasetPerformance()
    result = check.run(train_ds, mnist_model)
    result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |##########                                                                                                                                                   | 10/157 [Time: 00:00]
    Ingesting Batches:
    |####################                                                                                                                                         | 20/157 [Time: 00:00]
    Ingesting Batches:
    |##############################                                                                                                                               | 30/157 [Time: 00:00]
    Ingesting Batches:
    |########################################                                                                                                                     | 40/157 [Time: 00:00]
    Ingesting Batches:
    |##################################################                                                                                                           | 50/157 [Time: 00:00]
    Ingesting Batches:
    |#############################################################                                                                                                | 61/157 [Time: 00:00]
    Ingesting Batches:
    |#######################################################################                                                                                      | 71/157 [Time: 00:00]
    Ingesting Batches:
    |#################################################################################                                                                            | 81/157 [Time: 00:00]
    Ingesting Batches:
    |###########################################################################################                                                                  | 91/157 [Time: 00:00]
    Ingesting Batches:
    |#####################################################################################################                                                        | 101/157 [Time: 00:01]
    Ingesting Batches:
    |###############################################################################################################9                                             | 112/157 [Time: 00:01]
    Ingesting Batches:
    |##########################################################################################################################                                   | 122/157 [Time: 00:01]
    Ingesting Batches:
    |####################################################################################################################################                         | 132/157 [Time: 00:01]
    Ingesting Batches:
    |##############################################################################################################################################               | 142/157 [Time: 00:01]
    Ingesting Batches:
    |########################################################################################################################################################     | 152/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"a0e4c7153d014c1c8708189d3cd08c87": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_e96f0fae86e349d3879c235c84b4913f", "IPY_MODEL_d535ca997eb14d59bdfb599de867b3da", "IPY_MODEL_19680b3d58074805b7bcf6d3d21c189c", "IPY_MODEL_93078ef2f43a425b9a14a3b759d85251"], "layout": "IPY_MODEL_1b0bc0c78af4449bbd491fde437d8593"}}, "e96f0fae86e349d3879c235c84b4913f": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_048f6ee6bdde4416b0374cb002bcf279", "style": "IPY_MODEL_d13e3f901d96418ea971af6cd82ab7fd", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "048f6ee6bdde4416b0374cb002bcf279": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d13e3f901d96418ea971af6cd82ab7fd": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "d535ca997eb14d59bdfb599de867b3da": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_7f18e8f8f0894cef9d8f717857cfaae8", "style": "IPY_MODEL_3c3ea73717224f04a7c613752f05ee6a", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "7f18e8f8f0894cef9d8f717857cfaae8": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "3c3ea73717224f04a7c613752f05ee6a": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "19680b3d58074805b7bcf6d3d21c189c": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_736238708dd8481781dbf4ddd9313019", "style": "IPY_MODEL_5ce1448b53f84919b8782caffe81ab46"}}, "736238708dd8481781dbf4ddd9313019": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "5ce1448b53f84919b8782caffe81ab46": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "93078ef2f43a425b9a14a3b759d85251": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_50ab12783f744ccea3d87f490ced53b9", "IPY_MODEL_1f5ba370ea7b413c97ec9fa1bb527d74", "IPY_MODEL_8a85c47e133149de91c25ebcef5f48d6"], "layout": "IPY_MODEL_843c0b8519334ee09dd5ec487dc8e372"}}, "50ab12783f744ccea3d87f490ced53b9": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_d725d379c253408a80d621de3ae7145a", "style": "IPY_MODEL_5de5c50231e04e66852c5e9ffdfa112d", "value": "<h5><b>Additional Outputs</b></h5>"}}, "d725d379c253408a80d621de3ae7145a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "5de5c50231e04e66852c5e9ffdfa112d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "1f5ba370ea7b413c97ec9fa1bb527d74": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_44b13f248b9f46408f5c5f5a797b386a", "style": "IPY_MODEL_91dab0beeec54ceead04fda810c53d06", "value": "<style type=\"text/css\">\n#T_6ad1c_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_6ad1c_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_6ad1c_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_6ad1c_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_6ad1c_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_6ad1c_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >Metric</th>\n      <th class=\"col_heading level0 col1\" >Class</th>\n      <th class=\"col_heading level0 col2\" >Class Name</th>\n      <th class=\"col_heading level0 col3\" >Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_6ad1c_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n      <td id=\"T_6ad1c_row0_col0\" class=\"data row0 col0\" >Precision</td>\n      <td id=\"T_6ad1c_row0_col1\" class=\"data row0 col1\" >0</td>\n      <td id=\"T_6ad1c_row0_col2\" class=\"data row0 col2\" >0</td>\n      <td id=\"T_6ad1c_row0_col3\" class=\"data row0 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n      <td id=\"T_6ad1c_row1_col0\" class=\"data row1 col0\" >Precision</td>\n      <td id=\"T_6ad1c_row1_col1\" class=\"data row1 col1\" >1</td>\n      <td id=\"T_6ad1c_row1_col2\" class=\"data row1 col2\" >1</td>\n      <td id=\"T_6ad1c_row1_col3\" class=\"data row1 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n      <td id=\"T_6ad1c_row2_col0\" class=\"data row2 col0\" >Precision</td>\n      <td id=\"T_6ad1c_row2_col1\" class=\"data row2 col1\" >2</td>\n      <td id=\"T_6ad1c_row2_col2\" class=\"data row2 col2\" >2</td>\n      <td id=\"T_6ad1c_row2_col3\" class=\"data row2 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n      <td id=\"T_6ad1c_row3_col0\" class=\"data row3 col0\" >Precision</td>\n      <td id=\"T_6ad1c_row3_col1\" class=\"data row3 col1\" >3</td>\n      <td id=\"T_6ad1c_row3_col2\" class=\"data row3 col2\" >3</td>\n      <td id=\"T_6ad1c_row3_col3\" class=\"data row3 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n      <td id=\"T_6ad1c_row4_col0\" class=\"data row4 col0\" >Precision</td>\n      <td id=\"T_6ad1c_row4_col1\" class=\"data row4 col1\" >4</td>\n      <td id=\"T_6ad1c_row4_col2\" class=\"data row4 col2\" >4</td>\n      <td id=\"T_6ad1c_row4_col3\" class=\"data row4 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n      <td id=\"T_6ad1c_row5_col0\" class=\"data row5 col0\" >Precision</td>\n      <td id=\"T_6ad1c_row5_col1\" class=\"data row5 col1\" >5</td>\n      <td id=\"T_6ad1c_row5_col2\" class=\"data row5 col2\" >5</td>\n      <td id=\"T_6ad1c_row5_col3\" class=\"data row5 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n      <td id=\"T_6ad1c_row6_col0\" class=\"data row6 col0\" >Precision</td>\n      <td id=\"T_6ad1c_row6_col1\" class=\"data row6 col1\" >6</td>\n      <td id=\"T_6ad1c_row6_col2\" class=\"data row6 col2\" >6</td>\n      <td id=\"T_6ad1c_row6_col3\" class=\"data row6 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n      <td id=\"T_6ad1c_row7_col0\" class=\"data row7 col0\" >Precision</td>\n      <td id=\"T_6ad1c_row7_col1\" class=\"data row7 col1\" >7</td>\n      <td id=\"T_6ad1c_row7_col2\" class=\"data row7 col2\" >7</td>\n      <td id=\"T_6ad1c_row7_col3\" class=\"data row7 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n      <td id=\"T_6ad1c_row8_col0\" class=\"data row8 col0\" >Precision</td>\n      <td id=\"T_6ad1c_row8_col1\" class=\"data row8 col1\" >8</td>\n      <td id=\"T_6ad1c_row8_col2\" class=\"data row8 col2\" >8</td>\n      <td id=\"T_6ad1c_row8_col3\" class=\"data row8 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n      <td id=\"T_6ad1c_row9_col0\" class=\"data row9 col0\" >Precision</td>\n      <td id=\"T_6ad1c_row9_col1\" class=\"data row9 col1\" >9</td>\n      <td id=\"T_6ad1c_row9_col2\" class=\"data row9 col2\" >9</td>\n      <td id=\"T_6ad1c_row9_col3\" class=\"data row9 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n      <td id=\"T_6ad1c_row10_col0\" class=\"data row10 col0\" >Recall</td>\n      <td id=\"T_6ad1c_row10_col1\" class=\"data row10 col1\" >0</td>\n      <td id=\"T_6ad1c_row10_col2\" class=\"data row10 col2\" >0</td>\n      <td id=\"T_6ad1c_row10_col3\" class=\"data row10 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n      <td id=\"T_6ad1c_row11_col0\" class=\"data row11 col0\" >Recall</td>\n      <td id=\"T_6ad1c_row11_col1\" class=\"data row11 col1\" >1</td>\n      <td id=\"T_6ad1c_row11_col2\" class=\"data row11 col2\" >1</td>\n      <td id=\"T_6ad1c_row11_col3\" class=\"data row11 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n      <td id=\"T_6ad1c_row12_col0\" class=\"data row12 col0\" >Recall</td>\n      <td id=\"T_6ad1c_row12_col1\" class=\"data row12 col1\" >2</td>\n      <td id=\"T_6ad1c_row12_col2\" class=\"data row12 col2\" >2</td>\n      <td id=\"T_6ad1c_row12_col3\" class=\"data row12 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n      <td id=\"T_6ad1c_row13_col0\" class=\"data row13 col0\" >Recall</td>\n      <td id=\"T_6ad1c_row13_col1\" class=\"data row13 col1\" >3</td>\n      <td id=\"T_6ad1c_row13_col2\" class=\"data row13 col2\" >3</td>\n      <td id=\"T_6ad1c_row13_col3\" class=\"data row13 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n      <td id=\"T_6ad1c_row14_col0\" class=\"data row14 col0\" >Recall</td>\n      <td id=\"T_6ad1c_row14_col1\" class=\"data row14 col1\" >4</td>\n      <td id=\"T_6ad1c_row14_col2\" class=\"data row14 col2\" >4</td>\n      <td id=\"T_6ad1c_row14_col3\" class=\"data row14 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row15\" class=\"row_heading level0 row15\" >15</th>\n      <td id=\"T_6ad1c_row15_col0\" class=\"data row15 col0\" >Recall</td>\n      <td id=\"T_6ad1c_row15_col1\" class=\"data row15 col1\" >5</td>\n      <td id=\"T_6ad1c_row15_col2\" class=\"data row15 col2\" >5</td>\n      <td id=\"T_6ad1c_row15_col3\" class=\"data row15 col3\" >0.97</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row16\" class=\"row_heading level0 row16\" >16</th>\n      <td id=\"T_6ad1c_row16_col0\" class=\"data row16 col0\" >Recall</td>\n      <td id=\"T_6ad1c_row16_col1\" class=\"data row16 col1\" >6</td>\n      <td id=\"T_6ad1c_row16_col2\" class=\"data row16 col2\" >6</td>\n      <td id=\"T_6ad1c_row16_col3\" class=\"data row16 col3\" >1.00</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row17\" class=\"row_heading level0 row17\" >17</th>\n      <td id=\"T_6ad1c_row17_col0\" class=\"data row17 col0\" >Recall</td>\n      <td id=\"T_6ad1c_row17_col1\" class=\"data row17 col1\" >7</td>\n      <td id=\"T_6ad1c_row17_col2\" class=\"data row17 col2\" >7</td>\n      <td id=\"T_6ad1c_row17_col3\" class=\"data row17 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row18\" class=\"row_heading level0 row18\" >18</th>\n      <td id=\"T_6ad1c_row18_col0\" class=\"data row18 col0\" >Recall</td>\n      <td id=\"T_6ad1c_row18_col1\" class=\"data row18 col1\" >8</td>\n      <td id=\"T_6ad1c_row18_col2\" class=\"data row18 col2\" >8</td>\n      <td id=\"T_6ad1c_row18_col3\" class=\"data row18 col3\" >0.97</td>\n    </tr>\n    <tr>\n      <th id=\"T_6ad1c_level0_row19\" class=\"row_heading level0 row19\" >19</th>\n      <td id=\"T_6ad1c_row19_col0\" class=\"data row19 col0\" >Recall</td>\n      <td id=\"T_6ad1c_row19_col1\" class=\"data row19 col1\" >9</td>\n      <td id=\"T_6ad1c_row19_col2\" class=\"data row19 col2\" >9</td>\n      <td id=\"T_6ad1c_row19_col3\" class=\"data row19 col3\" >0.96</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "44b13f248b9f46408f5c5f5a797b386a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "91dab0beeec54ceead04fda810c53d06": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "8a85c47e133149de91c25ebcef5f48d6": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_e10936ab72c14e65a7602ffc215967f2", "style": "IPY_MODEL_8d9e38e8474e454eb599ced11e8708a3", "value": "<div><p style=\"font-size:0.9em;line-height:1;\"><i>Note - data sampling: Data is sampled from the original dataset, running on 10000 samples out of 60000. Sample size can be controlled with the \"n_samples\" parameter.</i></p></div>"}}, "e10936ab72c14e65a7602ffc215967f2": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "8d9e38e8474e454eb599ced11e8708a3": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "843c0b8519334ee09dd5ec487dc8e372": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "1b0bc0c78af4449bbd491fde437d8593": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "a0e4c7153d014c1c8708189d3cd08c87"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 52-55

If you have a GPU, you can speed up this check by passing it as an argument to .run() as device=<your GPU>

To display the results in an IDE like PyCharm, you can use the following code:

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: default


    #  result.show_in_window()







.. GENERATED FROM PYTHON SOURCE LINES 58-59

The result will be displayed in a new window.

.. GENERATED FROM PYTHON SOURCE LINES 61-62

Now we will run a check with a metric different from the defaults- F-1.

.. GENERATED FROM PYTHON SOURCE LINES 62-68

.. code-block:: default

    from ignite.metrics import Fbeta

    check = SingleDatasetPerformance(scorers={'f1': Fbeta(1)})
    result = check.run(train_ds, mnist_model)
    result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |##########                                                                                                                                                   | 10/157 [Time: 00:00]
    Ingesting Batches:
    |####################                                                                                                                                         | 20/157 [Time: 00:00]
    Ingesting Batches:
    |##############################                                                                                                                               | 30/157 [Time: 00:00]
    Ingesting Batches:
    |########################################                                                                                                                     | 40/157 [Time: 00:00]
    Ingesting Batches:
    |##################################################                                                                                                           | 50/157 [Time: 00:00]
    Ingesting Batches:
    |############################################################                                                                                                 | 60/157 [Time: 00:00]
    Ingesting Batches:
    |######################################################################                                                                                       | 70/157 [Time: 00:00]
    Ingesting Batches:
    |################################################################################                                                                             | 80/157 [Time: 00:00]
    Ingesting Batches:
    |##########################################################################################                                                                   | 90/157 [Time: 00:00]
    Ingesting Batches:
    |####################################################################################################                                                         | 100/157 [Time: 00:01]
    Ingesting Batches:
    |##############################################################################################################                                               | 110/157 [Time: 00:01]
    Ingesting Batches:
    |########################################################################################################################                                     | 120/157 [Time: 00:01]
    Ingesting Batches:
    |##################################################################################################################################                           | 130/157 [Time: 00:01]
    Ingesting Batches:
    |############################################################################################################################################                 | 140/157 [Time: 00:01]
    Ingesting Batches:
    |######################################################################################################################################################       | 150/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"d9468ff2949c4915abaffbd438a29afe": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_7b7801826fcf41ea9c185124dbdd626e", "IPY_MODEL_2a3fbfc4b3a24d44979eb45d6a25e6fa", "IPY_MODEL_1a96e82be1744c16b69554b9525093e2", "IPY_MODEL_8ed9317d26a44014b63f6aeb62a267a8"], "layout": "IPY_MODEL_11e66023687f4513b7f7bed9675b15bf"}}, "7b7801826fcf41ea9c185124dbdd626e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_182b424e39b5463f8b56cb10296c2e74", "style": "IPY_MODEL_a4b11e32655c46c6b2a9707b2d24102d", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "182b424e39b5463f8b56cb10296c2e74": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a4b11e32655c46c6b2a9707b2d24102d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "2a3fbfc4b3a24d44979eb45d6a25e6fa": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_25de384c5edb44d0a422a74984495377", "style": "IPY_MODEL_cada1f2bb9324676a8f3137f7a5cc16d", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "25de384c5edb44d0a422a74984495377": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "cada1f2bb9324676a8f3137f7a5cc16d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "1a96e82be1744c16b69554b9525093e2": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6d64a1cdb3bd4e878a8d20b4afb9231c", "style": "IPY_MODEL_5ee4a52c3dc14ce794f11443e07e86d0"}}, "6d64a1cdb3bd4e878a8d20b4afb9231c": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "5ee4a52c3dc14ce794f11443e07e86d0": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "8ed9317d26a44014b63f6aeb62a267a8": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_52a2176336e6434da189a00ebc98bbec", "IPY_MODEL_b834bb8c015f4b47a14be9ba8ef0cb8c", "IPY_MODEL_1845df34968e40a29b30d97c0f739cde"], "layout": "IPY_MODEL_661c51f78f4d41808cac537b42721a0b"}}, "52a2176336e6434da189a00ebc98bbec": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_90ccb411d37b4b608893074afcf73dab", "style": "IPY_MODEL_935383fbff384fe0823471bbfc6d55d2", "value": "<h5><b>Additional Outputs</b></h5>"}}, "90ccb411d37b4b608893074afcf73dab": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "935383fbff384fe0823471bbfc6d55d2": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "b834bb8c015f4b47a14be9ba8ef0cb8c": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c3a358f75a8444248b78235aa178f4f2", "style": "IPY_MODEL_9c242e53dc06438aaaa0139415d7609d", "value": "<style type=\"text/css\">\n#T_51ac0_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_51ac0_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_51ac0_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_51ac0_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_51ac0_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_51ac0_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >Metric</th>\n      <th class=\"col_heading level0 col1\" >Class</th>\n      <th class=\"col_heading level0 col2\" >Class Name</th>\n      <th class=\"col_heading level0 col3\" >Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_51ac0_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n      <td id=\"T_51ac0_row0_col0\" class=\"data row0 col0\" >f1</td>\n      <td id=\"T_51ac0_row0_col1\" class=\"data row0 col1\" ><NA></td>\n      <td id=\"T_51ac0_row0_col2\" class=\"data row0 col2\" ><NA></td>\n      <td id=\"T_51ac0_row0_col3\" class=\"data row0 col3\" >0.98</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "c3a358f75a8444248b78235aa178f4f2": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9c242e53dc06438aaaa0139415d7609d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "1845df34968e40a29b30d97c0f739cde": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_aaa903a69a584053b66eaaa338fb9378", "style": "IPY_MODEL_82474447242d45ffa38e27b9972f3366", "value": "<div><p style=\"font-size:0.9em;line-height:1;\"><i>Note - data sampling: Data is sampled from the original dataset, running on 10000 samples out of 60000. Sample size can be controlled with the \"n_samples\" parameter.</i></p></div>"}}, "aaa903a69a584053b66eaaa338fb9378": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "82474447242d45ffa38e27b9972f3366": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "661c51f78f4d41808cac537b42721a0b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "11e66023687f4513b7f7bed9675b15bf": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "d9468ff2949c4915abaffbd438a29afe"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 69-74

Define a Condition
==================
We can define a condition to validate that our model performance score is above or below a certain threshold.
The condition is defined as a function that takes the results of the check as input and
returns a ConditionResult object.

.. GENERATED FROM PYTHON SOURCE LINES 74-80

.. code-block:: default


    check = SingleDatasetPerformance()
    check.add_condition_greater_than(0.5)
    result = check.run(train_ds, mnist_model)
    result.show(show_additional_outputs=False)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |##########                                                                                                                                                   | 10/157 [Time: 00:00]
    Ingesting Batches:
    |####################                                                                                                                                         | 20/157 [Time: 00:00]
    Ingesting Batches:
    |##############################                                                                                                                               | 30/157 [Time: 00:00]
    Ingesting Batches:
    |########################################                                                                                                                     | 40/157 [Time: 00:00]
    Ingesting Batches:
    |###################################################                                                                                                          | 51/157 [Time: 00:00]
    Ingesting Batches:
    |##############################################################                                                                                               | 62/157 [Time: 00:00]
    Ingesting Batches:
    |########################################################################                                                                                     | 72/157 [Time: 00:00]
    Ingesting Batches:
    |##################################################################################                                                                           | 82/157 [Time: 00:00]
    Ingesting Batches:
    |############################################################################################                                                                 | 92/157 [Time: 00:00]
    Ingesting Batches:
    |######################################################################################################                                                       | 102/157 [Time: 00:01]
    Ingesting Batches:
    |###############################################################################################################9                                             | 112/157 [Time: 00:01]
    Ingesting Batches:
    |###########################################################################################################################                                  | 123/157 [Time: 00:01]
    Ingesting Batches:
    |#####################################################################################################################################                        | 133/157 [Time: 00:01]
    Ingesting Batches:
    |###############################################################################################################################################              | 143/157 [Time: 00:01]
    Ingesting Batches:
    |##########################################################################################################################################################   | 154/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"9991bb07a6ad40b5b25e28095d892870": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_e7c2a3ba05ae4daaa2a2171d63ef27dd", "IPY_MODEL_96c3549ea0e1445b844e97ab85af8553", "IPY_MODEL_b1172a39ed3948419e7afbcde61f70a9"], "layout": "IPY_MODEL_b8b18bb044134f829747b1983136d18f"}}, "e7c2a3ba05ae4daaa2a2171d63ef27dd": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_532e8d3d3ed84dec99a9dd2eb0182668", "style": "IPY_MODEL_967d585d6c11451584d5bcd926d66872", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "532e8d3d3ed84dec99a9dd2eb0182668": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "967d585d6c11451584d5bcd926d66872": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "96c3549ea0e1445b844e97ab85af8553": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_fdb10f624264463d8117c0d574f9bbbf", "style": "IPY_MODEL_2c060464fb4c4d9fbad4b5bebdf7ebeb", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "fdb10f624264463d8117c0d574f9bbbf": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "2c060464fb4c4d9fbad4b5bebdf7ebeb": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "b1172a39ed3948419e7afbcde61f70a9": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_75f7212291e444a4a9a9b2f006a1ab59", "style": "IPY_MODEL_df6ceac735ee4e87b9c347c022e1862a", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_66104_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_66104_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_66104_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_66104_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_66104_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_66104_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_66104_row0_col0\" class=\"data row0 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_66104_row0_col1\" class=\"data row0 col1\" >Score is greater than 0.5 for classes: all</td>\n      <td id=\"T_66104_row0_col2\" class=\"data row0 col2\" >Passed for all of the metrics.</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "75f7212291e444a4a9a9b2f006a1ab59": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "df6ceac735ee4e87b9c347c022e1862a": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "b8b18bb044134f829747b1983136d18f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "9991bb07a6ad40b5b25e28095d892870"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 81-83

We can also define a condition on a specific metric (or a subset of the metrics) that was passed to the check and a
specific class, instead of testing all the metrics and all the classes which is the default mode.

.. GENERATED FROM PYTHON SOURCE LINES 83-88

.. code-block:: default


    check = SingleDatasetPerformance()
    check.add_condition_greater_than(0.8, metrics=['Precision'], class_mode='3')
    result = check.run(train_ds, mnist_model)
    result.show(show_additional_outputs=False)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |##########                                                                                                                                                   | 10/157 [Time: 00:00]
    Ingesting Batches:
    |#####################                                                                                                                                        | 21/157 [Time: 00:00]
    Ingesting Batches:
    |################################                                                                                                                             | 32/157 [Time: 00:00]
    Ingesting Batches:
    |##########################################                                                                                                                   | 42/157 [Time: 00:00]
    Ingesting Batches:
    |####################################################                                                                                                         | 52/157 [Time: 00:00]
    Ingesting Batches:
    |##############################################################                                                                                               | 62/157 [Time: 00:00]
    Ingesting Batches:
    |########################################################################                                                                                     | 72/157 [Time: 00:00]
    Ingesting Batches:
    |##################################################################################                                                                           | 82/157 [Time: 00:00]
    Ingesting Batches:
    |############################################################################################                                                                 | 92/157 [Time: 00:00]
    Ingesting Batches:
    |######################################################################################################                                                       | 102/157 [Time: 00:01]
    Ingesting Batches:
    |###############################################################################################################9                                             | 112/157 [Time: 00:01]
    Ingesting Batches:
    |##########################################################################################################################                                   | 122/157 [Time: 00:01]
    Ingesting Batches:
    |#####################################################################################################################################                        | 133/157 [Time: 00:01]
    Ingesting Batches:
    |###############################################################################################################################################              | 143/157 [Time: 00:01]
    Ingesting Batches:
    |##########################################################################################################################################################   | 154/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"4f2f9da5bfd44148b2bfacec219e1383": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_50b028158c8446f89de94c63a584b4c1", "IPY_MODEL_6224f74b2bf54bd19d31d5b42a67d5f5", "IPY_MODEL_6165d1c5a9f24391800618ca0839432b"], "layout": "IPY_MODEL_072fa9b7b2e145f58ae1f2e3bdd7aa71"}}, "50b028158c8446f89de94c63a584b4c1": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_d1a7f214af534757a0abdf96f7f06f88", "style": "IPY_MODEL_d6de7c03c968440abe625cde3583944a", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "d1a7f214af534757a0abdf96f7f06f88": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d6de7c03c968440abe625cde3583944a": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "6224f74b2bf54bd19d31d5b42a67d5f5": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_1a585cd3e1fc4e46b2625fb2f3463124", "style": "IPY_MODEL_6ffc1f7df6834ccc855765ac08d8be1e", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "1a585cd3e1fc4e46b2625fb2f3463124": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "6ffc1f7df6834ccc855765ac08d8be1e": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "6165d1c5a9f24391800618ca0839432b": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_54d55ad5e538427c89aaa0845e0a0d9e", "style": "IPY_MODEL_4e36d906499a4e09980dcfd05d2f9546", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_1642c_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_1642c_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_1642c_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_1642c_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_1642c_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_1642c_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_1642c_row0_col0\" class=\"data row0 col0\" ><div style=\"color: firebrick;text-align: center;font-weight:bold\">\u2048</div></td>\n      <td id=\"T_1642c_row0_col1\" class=\"data row0 col1\" >Score is greater than 0.8 for classes: 3</td>\n      <td id=\"T_1642c_row0_col2\" class=\"data row0 col2\" >Exception in condition: KeyError: '3'</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "54d55ad5e538427c89aaa0845e0a0d9e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "4e36d906499a4e09980dcfd05d2f9546": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "072fa9b7b2e145f58ae1f2e3bdd7aa71": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "4f2f9da5bfd44148b2bfacec219e1383"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  6.866 seconds)


.. _sphx_glr_download_checks_gallery_vision_model_evaluation_plot_single_dataset_performance.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_single_dataset_performance.py <plot_single_dataset_performance.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_single_dataset_performance.ipynb <plot_single_dataset_performance.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
