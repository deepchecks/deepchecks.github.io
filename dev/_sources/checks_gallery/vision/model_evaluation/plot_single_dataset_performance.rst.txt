
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "checks_gallery/vision/model_evaluation/plot_single_dataset_performance.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_checks_gallery_vision_model_evaluation_plot_single_dataset_performance.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_checks_gallery_vision_model_evaluation_plot_single_dataset_performance.py:


.. _plot_vision_single_dataset_performance:

Single Dataset Performance
*********************************

This notebooks provides an overview for using and understanding single dataset performance check.

**Structure:**

* `What Is the Purpose of the Check? <#what-is-the-purpose-of-the-check>`__
* `Generate data an model <#generate-data-and-model>`__
* `Run the check <#run-the-check>`__
* `Define a condition <#define-a-condition>`__

What Is the Purpose of the Check?
=================================
This check returns the results from a dict of metrics, in the format metric name: scorer, calculated for the
given model dataset. The scorer can be an ignite.Metric or Sklearn scorer.
Use this check to evaluate the performance on a single vision dataset such as a test set.

.. GENERATED FROM PYTHON SOURCE LINES 25-27

Generate data and model
-----------------------

.. GENERATED FROM PYTHON SOURCE LINES 27-31

.. code-block:: default


    from deepchecks.vision.checks import SingleDatasetPerformance
    from deepchecks.vision.datasets.classification import mnist








.. GENERATED FROM PYTHON SOURCE LINES 32-37

.. code-block:: default



    mnist_model = mnist.load_model()
    train_ds = mnist.load_dataset(train=True, object_type='VisionData')








.. GENERATED FROM PYTHON SOURCE LINES 38-45

Run the check
-------------
We will run the check with the model defined above.

The check will use the default classification metrics - `Precision
<https://pytorch.org/ignite/generated/ignite.metrics.precision.Precision.html#ignite.metrics.precision.Precision>`__.
and `Recall <https://pytorch.org/ignite/generated/ignite.metrics.recall.Recall.html#ignite.metrics.recall.Recall>`__.

.. GENERATED FROM PYTHON SOURCE LINES 45-51

.. code-block:: default



    check = SingleDatasetPerformance()
    result = check.run(train_ds, mnist_model)
    result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |##########                                                                                                                                                   | 10/157 [Time: 00:00]
    Ingesting Batches:
    |####################                                                                                                                                         | 20/157 [Time: 00:00]
    Ingesting Batches:
    |##############################                                                                                                                               | 30/157 [Time: 00:00]
    Ingesting Batches:
    |#######################################                                                                                                                      | 39/157 [Time: 00:00]
    Ingesting Batches:
    |################################################                                                                                                             | 48/157 [Time: 00:00]
    Ingesting Batches:
    |########################################################9                                                                                                    | 57/157 [Time: 00:00]
    Ingesting Batches:
    |###################################################################                                                                                          | 67/157 [Time: 00:00]
    Ingesting Batches:
    |############################################################################                                                                                 | 76/157 [Time: 00:00]
    Ingesting Batches:
    |######################################################################################                                                                       | 86/157 [Time: 00:00]
    Ingesting Batches:
    |################################################################################################                                                             | 96/157 [Time: 00:01]
    Ingesting Batches:
    |##########################################################################################################                                                   | 106/157 [Time: 00:01]
    Ingesting Batches:
    |###################################################################################################################9                                         | 116/157 [Time: 00:01]
    Ingesting Batches:
    |##############################################################################################################################                               | 126/157 [Time: 00:01]
    Ingesting Batches:
    |#########################################################################################################################################                    | 137/157 [Time: 00:01]
    Ingesting Batches:
    |####################################################################################################################################################         | 148/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"3e7a41c6f87a4f20acdb09572f51da50": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_55bc857792b34703b68908ea95476d00", "IPY_MODEL_8df4db2719c34d3680611ac0e456d3fd", "IPY_MODEL_56343139327f473dad657eb3f44af4cf", "IPY_MODEL_aa99f1f080704ceeb1c0c83ef463d8bf"], "layout": "IPY_MODEL_b4e5ea78d26e4b1fb145ffbcbb35d171"}}, "55bc857792b34703b68908ea95476d00": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_b076e35f5da24c2894016f3cdc4aa28a", "style": "IPY_MODEL_1b6bf50dec9b46d8b19ccb3e71999cce", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "b076e35f5da24c2894016f3cdc4aa28a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "1b6bf50dec9b46d8b19ccb3e71999cce": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "8df4db2719c34d3680611ac0e456d3fd": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_1758891af6a74feeb28cd47bb1ccb066", "style": "IPY_MODEL_81e667e8ad934ea99dfb0457efb708d6", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "1758891af6a74feeb28cd47bb1ccb066": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "81e667e8ad934ea99dfb0457efb708d6": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "56343139327f473dad657eb3f44af4cf": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_e64c83872c9644e3867ceea12a2dae35", "style": "IPY_MODEL_5c9771c0ca4d4269baf663c3594c86ad"}}, "e64c83872c9644e3867ceea12a2dae35": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "5c9771c0ca4d4269baf663c3594c86ad": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "aa99f1f080704ceeb1c0c83ef463d8bf": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_43b32afd3d434d81a3ab3227a22b8e0c", "IPY_MODEL_8b3ec3a103254202b37d5790dda1ae2a", "IPY_MODEL_610598fb3dd548fc8326b749cb32838e"], "layout": "IPY_MODEL_14ad71aa6b5b43f0ae7d32e1a4eff3ac"}}, "43b32afd3d434d81a3ab3227a22b8e0c": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_b4153d56d19e4860837e17ad8b4652df", "style": "IPY_MODEL_5085c4ca93714964b5c8d73674ae7cdf", "value": "<h5><b>Additional Outputs</b></h5>"}}, "b4153d56d19e4860837e17ad8b4652df": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "5085c4ca93714964b5c8d73674ae7cdf": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "8b3ec3a103254202b37d5790dda1ae2a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_78fb991bdee849119f6fa876bd223abc", "style": "IPY_MODEL_951b0348ee8e438da6138264327afc44", "value": "<style type=\"text/css\">\n#T_a04bb_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a04bb_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a04bb_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a04bb_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a04bb_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_a04bb_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >Metric</th>\n      <th class=\"col_heading level0 col1\" >Class</th>\n      <th class=\"col_heading level0 col2\" >Class Name</th>\n      <th class=\"col_heading level0 col3\" >Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_a04bb_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n      <td id=\"T_a04bb_row0_col0\" class=\"data row0 col0\" >Precision</td>\n      <td id=\"T_a04bb_row0_col1\" class=\"data row0 col1\" >0</td>\n      <td id=\"T_a04bb_row0_col2\" class=\"data row0 col2\" >0</td>\n      <td id=\"T_a04bb_row0_col3\" class=\"data row0 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n      <td id=\"T_a04bb_row1_col0\" class=\"data row1 col0\" >Precision</td>\n      <td id=\"T_a04bb_row1_col1\" class=\"data row1 col1\" >1</td>\n      <td id=\"T_a04bb_row1_col2\" class=\"data row1 col2\" >1</td>\n      <td id=\"T_a04bb_row1_col3\" class=\"data row1 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n      <td id=\"T_a04bb_row2_col0\" class=\"data row2 col0\" >Precision</td>\n      <td id=\"T_a04bb_row2_col1\" class=\"data row2 col1\" >2</td>\n      <td id=\"T_a04bb_row2_col2\" class=\"data row2 col2\" >2</td>\n      <td id=\"T_a04bb_row2_col3\" class=\"data row2 col3\" >0.97</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n      <td id=\"T_a04bb_row3_col0\" class=\"data row3 col0\" >Precision</td>\n      <td id=\"T_a04bb_row3_col1\" class=\"data row3 col1\" >3</td>\n      <td id=\"T_a04bb_row3_col2\" class=\"data row3 col2\" >3</td>\n      <td id=\"T_a04bb_row3_col3\" class=\"data row3 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n      <td id=\"T_a04bb_row4_col0\" class=\"data row4 col0\" >Precision</td>\n      <td id=\"T_a04bb_row4_col1\" class=\"data row4 col1\" >4</td>\n      <td id=\"T_a04bb_row4_col2\" class=\"data row4 col2\" >4</td>\n      <td id=\"T_a04bb_row4_col3\" class=\"data row4 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n      <td id=\"T_a04bb_row5_col0\" class=\"data row5 col0\" >Precision</td>\n      <td id=\"T_a04bb_row5_col1\" class=\"data row5 col1\" >5</td>\n      <td id=\"T_a04bb_row5_col2\" class=\"data row5 col2\" >5</td>\n      <td id=\"T_a04bb_row5_col3\" class=\"data row5 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n      <td id=\"T_a04bb_row6_col0\" class=\"data row6 col0\" >Precision</td>\n      <td id=\"T_a04bb_row6_col1\" class=\"data row6 col1\" >6</td>\n      <td id=\"T_a04bb_row6_col2\" class=\"data row6 col2\" >6</td>\n      <td id=\"T_a04bb_row6_col3\" class=\"data row6 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n      <td id=\"T_a04bb_row7_col0\" class=\"data row7 col0\" >Precision</td>\n      <td id=\"T_a04bb_row7_col1\" class=\"data row7 col1\" >7</td>\n      <td id=\"T_a04bb_row7_col2\" class=\"data row7 col2\" >7</td>\n      <td id=\"T_a04bb_row7_col3\" class=\"data row7 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n      <td id=\"T_a04bb_row8_col0\" class=\"data row8 col0\" >Precision</td>\n      <td id=\"T_a04bb_row8_col1\" class=\"data row8 col1\" >8</td>\n      <td id=\"T_a04bb_row8_col2\" class=\"data row8 col2\" >8</td>\n      <td id=\"T_a04bb_row8_col3\" class=\"data row8 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n      <td id=\"T_a04bb_row9_col0\" class=\"data row9 col0\" >Precision</td>\n      <td id=\"T_a04bb_row9_col1\" class=\"data row9 col1\" >9</td>\n      <td id=\"T_a04bb_row9_col2\" class=\"data row9 col2\" >9</td>\n      <td id=\"T_a04bb_row9_col3\" class=\"data row9 col3\" >0.97</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n      <td id=\"T_a04bb_row10_col0\" class=\"data row10 col0\" >Recall</td>\n      <td id=\"T_a04bb_row10_col1\" class=\"data row10 col1\" >0</td>\n      <td id=\"T_a04bb_row10_col2\" class=\"data row10 col2\" >0</td>\n      <td id=\"T_a04bb_row10_col3\" class=\"data row10 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n      <td id=\"T_a04bb_row11_col0\" class=\"data row11 col0\" >Recall</td>\n      <td id=\"T_a04bb_row11_col1\" class=\"data row11 col1\" >1</td>\n      <td id=\"T_a04bb_row11_col2\" class=\"data row11 col2\" >1</td>\n      <td id=\"T_a04bb_row11_col3\" class=\"data row11 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n      <td id=\"T_a04bb_row12_col0\" class=\"data row12 col0\" >Recall</td>\n      <td id=\"T_a04bb_row12_col1\" class=\"data row12 col1\" >2</td>\n      <td id=\"T_a04bb_row12_col2\" class=\"data row12 col2\" >2</td>\n      <td id=\"T_a04bb_row12_col3\" class=\"data row12 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n      <td id=\"T_a04bb_row13_col0\" class=\"data row13 col0\" >Recall</td>\n      <td id=\"T_a04bb_row13_col1\" class=\"data row13 col1\" >3</td>\n      <td id=\"T_a04bb_row13_col2\" class=\"data row13 col2\" >3</td>\n      <td id=\"T_a04bb_row13_col3\" class=\"data row13 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n      <td id=\"T_a04bb_row14_col0\" class=\"data row14 col0\" >Recall</td>\n      <td id=\"T_a04bb_row14_col1\" class=\"data row14 col1\" >4</td>\n      <td id=\"T_a04bb_row14_col2\" class=\"data row14 col2\" >4</td>\n      <td id=\"T_a04bb_row14_col3\" class=\"data row14 col3\" >0.98</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row15\" class=\"row_heading level0 row15\" >15</th>\n      <td id=\"T_a04bb_row15_col0\" class=\"data row15 col0\" >Recall</td>\n      <td id=\"T_a04bb_row15_col1\" class=\"data row15 col1\" >5</td>\n      <td id=\"T_a04bb_row15_col2\" class=\"data row15 col2\" >5</td>\n      <td id=\"T_a04bb_row15_col3\" class=\"data row15 col3\" >0.96</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row16\" class=\"row_heading level0 row16\" >16</th>\n      <td id=\"T_a04bb_row16_col0\" class=\"data row16 col0\" >Recall</td>\n      <td id=\"T_a04bb_row16_col1\" class=\"data row16 col1\" >6</td>\n      <td id=\"T_a04bb_row16_col2\" class=\"data row16 col2\" >6</td>\n      <td id=\"T_a04bb_row16_col3\" class=\"data row16 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row17\" class=\"row_heading level0 row17\" >17</th>\n      <td id=\"T_a04bb_row17_col0\" class=\"data row17 col0\" >Recall</td>\n      <td id=\"T_a04bb_row17_col1\" class=\"data row17 col1\" >7</td>\n      <td id=\"T_a04bb_row17_col2\" class=\"data row17 col2\" >7</td>\n      <td id=\"T_a04bb_row17_col3\" class=\"data row17 col3\" >0.99</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row18\" class=\"row_heading level0 row18\" >18</th>\n      <td id=\"T_a04bb_row18_col0\" class=\"data row18 col0\" >Recall</td>\n      <td id=\"T_a04bb_row18_col1\" class=\"data row18 col1\" >8</td>\n      <td id=\"T_a04bb_row18_col2\" class=\"data row18 col2\" >8</td>\n      <td id=\"T_a04bb_row18_col3\" class=\"data row18 col3\" >0.96</td>\n    </tr>\n    <tr>\n      <th id=\"T_a04bb_level0_row19\" class=\"row_heading level0 row19\" >19</th>\n      <td id=\"T_a04bb_row19_col0\" class=\"data row19 col0\" >Recall</td>\n      <td id=\"T_a04bb_row19_col1\" class=\"data row19 col1\" >9</td>\n      <td id=\"T_a04bb_row19_col2\" class=\"data row19 col2\" >9</td>\n      <td id=\"T_a04bb_row19_col3\" class=\"data row19 col3\" >0.98</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "78fb991bdee849119f6fa876bd223abc": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "951b0348ee8e438da6138264327afc44": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "610598fb3dd548fc8326b749cb32838e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_558d7dabdc0d432ea4e1436fb1147878", "style": "IPY_MODEL_18a77853e3394dee8dbd9ce79c0af505", "value": "<div><p style=\"font-size:0.9em;line-height:1;\"><i>Note - data sampling: Data is sampled from the original dataset, running on 10000 samples out of 60000. Sample size can be controlled with the \"n_samples\" parameter.</i></p></div>"}}, "558d7dabdc0d432ea4e1436fb1147878": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "18a77853e3394dee8dbd9ce79c0af505": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "14ad71aa6b5b43f0ae7d32e1a4eff3ac": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b4e5ea78d26e4b1fb145ffbcbb35d171": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "3e7a41c6f87a4f20acdb09572f51da50"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 52-55

If you have a GPU, you can speed up this check by passing it as an argument to .run() as device=<your GPU>

To display the results in an IDE like PyCharm, you can use the following code:

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: default


    #  result.show_in_window()







.. GENERATED FROM PYTHON SOURCE LINES 58-59

The result will be displayed in a new window.

.. GENERATED FROM PYTHON SOURCE LINES 61-62

Now we will run a check with a metric different from the defaults- F-1.

.. GENERATED FROM PYTHON SOURCE LINES 62-68

.. code-block:: default

    from ignite.metrics import Fbeta

    check = SingleDatasetPerformance(scorers={'f1': Fbeta(1)})
    result = check.run(train_ds, mnist_model)
    result





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |##########                                                                                                                                                   | 10/157 [Time: 00:00]
    Ingesting Batches:
    |####################                                                                                                                                         | 20/157 [Time: 00:00]
    Ingesting Batches:
    |##############################                                                                                                                               | 30/157 [Time: 00:00]
    Ingesting Batches:
    |#########################################                                                                                                                    | 41/157 [Time: 00:00]
    Ingesting Batches:
    |###################################################                                                                                                          | 51/157 [Time: 00:00]
    Ingesting Batches:
    |#############################################################                                                                                                | 61/157 [Time: 00:00]
    Ingesting Batches:
    |#######################################################################                                                                                      | 71/157 [Time: 00:00]
    Ingesting Batches:
    |#################################################################################                                                                            | 81/157 [Time: 00:00]
    Ingesting Batches:
    |###########################################################################################                                                                  | 91/157 [Time: 00:00]
    Ingesting Batches:
    |#####################################################################################################                                                        | 101/157 [Time: 00:01]
    Ingesting Batches:
    |################################################################################################################9                                            | 113/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################                                | 125/157 [Time: 00:01]
    Ingesting Batches:
    |########################################################################################################################################                     | 136/157 [Time: 00:01]
    Ingesting Batches:
    |###################################################################################################################################################          | 147/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"1fc9104b1c964ae285efe73fdb370c25": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_04301427ce8a4a33a61487f967defb32", "IPY_MODEL_3e867dfc964042de96a3e3fd53ef494a", "IPY_MODEL_8f23a14c6c0642d3957062a95d5a71e0", "IPY_MODEL_acdc23b433c349609dd915e5cbe927a7"], "layout": "IPY_MODEL_c8215b7a5133416cb12cb2d3c0f6e769"}}, "04301427ce8a4a33a61487f967defb32": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_75e24396e6a9400c85968967d6f9e651", "style": "IPY_MODEL_9681ebb477424714a2487f7fcb04f978", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "75e24396e6a9400c85968967d6f9e651": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9681ebb477424714a2487f7fcb04f978": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "3e867dfc964042de96a3e3fd53ef494a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_cdf0542d54544ef9a44068acc0ede614", "style": "IPY_MODEL_8df1047f13d5446dbf77ae1b468193f3", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "cdf0542d54544ef9a44068acc0ede614": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "8df1047f13d5446dbf77ae1b468193f3": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "8f23a14c6c0642d3957062a95d5a71e0": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_8ae87c7e775f44ceb95bc6deb0ede1da", "style": "IPY_MODEL_4a5b35086f524fbdb431ccaf2541f131"}}, "8ae87c7e775f44ceb95bc6deb0ede1da": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "4a5b35086f524fbdb431ccaf2541f131": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "acdc23b433c349609dd915e5cbe927a7": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_1b6d6528655f4968b66dee740f375765", "IPY_MODEL_d92be662e7584388b29f4fb6a1b29abd", "IPY_MODEL_79691ea62b2843efa1c701a919421611"], "layout": "IPY_MODEL_b7700d648d6d40c8ba755af8fdb60b11"}}, "1b6d6528655f4968b66dee740f375765": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_0d7c1ac786a7465a9f8bd724db4319c0", "style": "IPY_MODEL_e8c321eeefa04e328da9262052e981b0", "value": "<h5><b>Additional Outputs</b></h5>"}}, "0d7c1ac786a7465a9f8bd724db4319c0": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e8c321eeefa04e328da9262052e981b0": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "d92be662e7584388b29f4fb6a1b29abd": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_9e70921368d344f08fb2086eb2365bfe", "style": "IPY_MODEL_3df16519278d44f0814cb5e594592487", "value": "<style type=\"text/css\">\n#T_3ed2f_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_3ed2f_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_3ed2f_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_3ed2f_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_3ed2f_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_3ed2f_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >Metric</th>\n      <th class=\"col_heading level0 col1\" >Class</th>\n      <th class=\"col_heading level0 col2\" >Class Name</th>\n      <th class=\"col_heading level0 col3\" >Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_3ed2f_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n      <td id=\"T_3ed2f_row0_col0\" class=\"data row0 col0\" >f1</td>\n      <td id=\"T_3ed2f_row0_col1\" class=\"data row0 col1\" ><NA></td>\n      <td id=\"T_3ed2f_row0_col2\" class=\"data row0 col2\" ><NA></td>\n      <td id=\"T_3ed2f_row0_col3\" class=\"data row0 col3\" >0.98</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "9e70921368d344f08fb2086eb2365bfe": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "3df16519278d44f0814cb5e594592487": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "79691ea62b2843efa1c701a919421611": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_d46a0ef09fe74d7c93586bc76f74b0cc", "style": "IPY_MODEL_a7aa07bf1e68469693f1ac1d845b05ca", "value": "<div><p style=\"font-size:0.9em;line-height:1;\"><i>Note - data sampling: Data is sampled from the original dataset, running on 10000 samples out of 60000. Sample size can be controlled with the \"n_samples\" parameter.</i></p></div>"}}, "d46a0ef09fe74d7c93586bc76f74b0cc": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a7aa07bf1e68469693f1ac1d845b05ca": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "b7700d648d6d40c8ba755af8fdb60b11": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "c8215b7a5133416cb12cb2d3c0f6e769": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "1fc9104b1c964ae285efe73fdb370c25"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 69-74

Define a Condition
==================
We can define a condition to validate that our model performance score is above or below a certain threshold.
The condition is defined as a function that takes the results of the check as input and
returns a ConditionResult object.

.. GENERATED FROM PYTHON SOURCE LINES 74-80

.. code-block:: default


    check = SingleDatasetPerformance()
    check.add_condition_greater_than(0.5)
    result = check.run(train_ds, mnist_model)
    result.show(show_additional_outputs=False)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |##########                                                                                                                                                   | 10/157 [Time: 00:00]
    Ingesting Batches:
    |####################                                                                                                                                         | 20/157 [Time: 00:00]
    Ingesting Batches:
    |##############################                                                                                                                               | 30/157 [Time: 00:00]
    Ingesting Batches:
    |########################################                                                                                                                     | 40/157 [Time: 00:00]
    Ingesting Batches:
    |##################################################                                                                                                           | 50/157 [Time: 00:00]
    Ingesting Batches:
    |############################################################                                                                                                 | 60/157 [Time: 00:00]
    Ingesting Batches:
    |######################################################################                                                                                       | 70/157 [Time: 00:00]
    Ingesting Batches:
    |################################################################################                                                                             | 80/157 [Time: 00:00]
    Ingesting Batches:
    |##########################################################################################                                                                   | 90/157 [Time: 00:00]
    Ingesting Batches:
    |####################################################################################################                                                         | 100/157 [Time: 00:01]
    Ingesting Batches:
    |##############################################################################################################                                               | 110/157 [Time: 00:01]
    Ingesting Batches:
    |########################################################################################################################                                     | 120/157 [Time: 00:01]
    Ingesting Batches:
    |##################################################################################################################################                           | 130/157 [Time: 00:01]
    Ingesting Batches:
    |############################################################################################################################################                 | 140/157 [Time: 00:01]
    Ingesting Batches:
    |######################################################################################################################################################       | 150/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"0c185ea13c284682b32c67f0e134c181": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_2365f41aa1824a589ccbd63806348910", "IPY_MODEL_1e8ec86fc551447dbff837244410b0b2", "IPY_MODEL_a2511d39a0d84de19e9e8b9cc26aa612"], "layout": "IPY_MODEL_321dc9b1fbc94cceae657086bd5c5581"}}, "2365f41aa1824a589ccbd63806348910": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_616306557ea54d488f6241e166c58040", "style": "IPY_MODEL_c0d90f730aec43b4b4f7344a526f7ab8", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "616306557ea54d488f6241e166c58040": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "c0d90f730aec43b4b4f7344a526f7ab8": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "1e8ec86fc551447dbff837244410b0b2": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_fdc7f40d392140688f1e42de9268d651", "style": "IPY_MODEL_b563c98b9f1845319dd8ff7276a9545e", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "fdc7f40d392140688f1e42de9268d651": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b563c98b9f1845319dd8ff7276a9545e": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "a2511d39a0d84de19e9e8b9cc26aa612": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_888a5871814b41be954c0ca360221ddc", "style": "IPY_MODEL_ea3ba047b23a4270956b4ea2c284bb07", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_f6609_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_f6609_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_f6609_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_f6609_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_f6609_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_f6609_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_f6609_row0_col0\" class=\"data row0 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_f6609_row0_col1\" class=\"data row0 col1\" >Score is greater than 0.5 for classes: all</td>\n      <td id=\"T_f6609_row0_col2\" class=\"data row0 col2\" >Passed for all of the mertics.</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "888a5871814b41be954c0ca360221ddc": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ea3ba047b23a4270956b4ea2c284bb07": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "321dc9b1fbc94cceae657086bd5c5581": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "0c185ea13c284682b32c67f0e134c181"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 81-83

We can also define a condition on a specific metric (or a subset of the metrics) that was passed to the check and a
specific class, instead of testing all the metrics and all the classes which is the default mode.

.. GENERATED FROM PYTHON SOURCE LINES 83-88

.. code-block:: default


    check = SingleDatasetPerformance()
    check.add_condition_greater_than(0.8, metrics=['Precision'], class_mode='3')
    result = check.run(train_ds, mnist_model)
    result.show(show_additional_outputs=False)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches:
    |##########                                                                                                                                                   | 10/157 [Time: 00:00]
    Ingesting Batches:
    |####################                                                                                                                                         | 20/157 [Time: 00:00]
    Ingesting Batches:
    |##############################                                                                                                                               | 30/157 [Time: 00:00]
    Ingesting Batches:
    |########################################                                                                                                                     | 40/157 [Time: 00:00]
    Ingesting Batches:
    |###################################################                                                                                                          | 51/157 [Time: 00:00]
    Ingesting Batches:
    |#############################################################                                                                                                | 61/157 [Time: 00:00]
    Ingesting Batches:
    |#######################################################################                                                                                      | 71/157 [Time: 00:00]
    Ingesting Batches:
    |#################################################################################                                                                            | 81/157 [Time: 00:00]
    Ingesting Batches:
    |###########################################################################################                                                                  | 91/157 [Time: 00:00]
    Ingesting Batches:
    |#####################################################################################################                                                        | 101/157 [Time: 00:01]
    Ingesting Batches:
    |##############################################################################################################9                                              | 111/157 [Time: 00:01]
    Ingesting Batches:
    |#########################################################################################################################                                    | 121/157 [Time: 00:01]
    Ingesting Batches:
    |###################################################################################################################################                          | 131/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################                | 141/157 [Time: 00:01]
    Ingesting Batches:
    |#######################################################################################################################################################      | 151/157 [Time: 00:01]
    Ingesting Batches:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Computing Check:
    |     | 0/1 [Time: 00:00]

    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                                                                                                                                                            

                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Single Dataset Performance</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"dddc1e2d9a044e29ba6ec5693a5d9c2b": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_33b635af050446c39c2ee2a87a77f04d", "IPY_MODEL_63a3d6a8a4a348a3936ecc1d01d0acdb", "IPY_MODEL_875733ece30c49f7987eb39de556c65d"], "layout": "IPY_MODEL_d5d7d528d7254312bbbacfbf83360c34"}}, "33b635af050446c39c2ee2a87a77f04d": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6fba000d9faf4aa7bea43633ede6b0fe", "style": "IPY_MODEL_7a6f0725386d483a8a97d895a3ff0bf8", "value": "<h4><b>Single Dataset Performance</b></h4>"}}, "6fba000d9faf4aa7bea43633ede6b0fe": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "7a6f0725386d483a8a97d895a3ff0bf8": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "63a3d6a8a4a348a3936ecc1d01d0acdb": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_81d25908f10a481bbc5fd2ae1bcd5a5c", "style": "IPY_MODEL_fe3e7f0245af4478aaf2b7f6ea7f871a", "value": "<p>Calculate performance metrics of a given model on a given dataset. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/model_evaluation/plot_single_dataset_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "81d25908f10a481bbc5fd2ae1bcd5a5c": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "fe3e7f0245af4478aaf2b7f6ea7f871a": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "875733ece30c49f7987eb39de556c65d": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_f9bcf0ee0a574dceb51cd74dda23a93d", "style": "IPY_MODEL_7071d5a9ceb842328b4e05f56f713d8b", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_a8ec5_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a8ec5_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a8ec5_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a8ec5_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a8ec5_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_a8ec5_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_a8ec5_row0_col0\" class=\"data row0 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_a8ec5_row0_col1\" class=\"data row0 col1\" >Score is greater than 0.8 for classes: 3</td>\n      <td id=\"T_a8ec5_row0_col2\" class=\"data row0 col2\" >Passed for all of the mertics.</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "f9bcf0ee0a574dceb51cd74dda23a93d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "7071d5a9ceb842328b4e05f56f713d8b": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "d5d7d528d7254312bbbacfbf83360c34": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "dddc1e2d9a044e29ba6ec5693a5d9c2b"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  6.811 seconds)


.. _sphx_glr_download_checks_gallery_vision_model_evaluation_plot_single_dataset_performance.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_single_dataset_performance.py <plot_single_dataset_performance.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_single_dataset_performance.ipynb <plot_single_dataset_performance.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
