
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "checks_gallery/vision/train_test_validation/plot_property_label_correlation_change.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_checks_gallery_vision_train_test_validation_plot_property_label_correlation_change.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_checks_gallery_vision_train_test_validation_plot_property_label_correlation_change.py:


.. _plot_vision_feature_label_correlation_change:

Property Label Correlation Change
********************************

This notebook provides an overview for using and understanding the "Property Label Correlation Change" check.

**Structure:**

* `What is the purpose of the check? <#what-is-the-purpose-of-the-check>`__
* `Run check on a Classification task <#run-the-check-on-a-classification-task>`__
* `Run check on an Object Detection task <#run-the-check-on-an-object-detection-task>`__
* `Define a condition <#define-a-condition>`__

What is the purpose of the check?
=================================
The check estimates for every image :doc:`image property </user-guide/vision/vision_properties>`
(such as brightness, contrast etc.) its ability to predict the label by itself. This check can help find:

* A potential bias in one or both datasets, that leads to the labels being
  strongly correlated with simple image properties such as color, brightness,
  aspect ratio and more. This is a critical problem, that will likely stay hidden
  without this check (as it won't pop up when comparing model performance on train
  and test).

The check is based on calculating the predictive power score (PPS) of each image
property. For more details you can read here `how the PPS is calculated
<#how-is-the-predictive-power-score-pps-calculated>`__.

What is a problematic result?
-----------------------------

1. Image properties with a high predictive score - can indicate that there is a
   bias in the dataset, as a single property can predict the label successfully,
   using simple classic ML algorithms.

   This means that a deep learning algorithm may accidentally learn these properties
   instead of more accurate complex abstractions. For example, in a classification
   dataset of wolves and dogs photographs, if only wolves are photographed in the
   snow, the brightness of the image may be used to predict the label "wolf" easily.

   In this case, a model might not learn to discern wolf from dog by the animal's
   characteristics, but by using the background color.
2. A high difference between the PPS scores of a certain image property in the
   train and in the test datasets - this is an indication for a drift between
   the relation of the property and the label and a possible bias in one of
   the datasets.

   For example: an object detection dataset that identifies household items.
   In it, a pen would usually create a long and thin rectangle bounding box.
   If in the test dataset the pens would be angled differently, or other object
   are mistakenly identified as pens, the bounding boxes may have a different
   aspect ratio. In this case, the PPS of the train dataset will be high, while
   the PPS of the test dataset would be low, indicating that a bias in the train
   dataset does not appear in the test dataset, and could indicate the model will
   not be able to infer correctly on the test (or any other) dataset due to drift.

How do we calculate for different vision tasks?
-----------------------------------------------

* For classification tasks, this check uses PPS to predict the class by image properties.
* For object detection tasks, this check uses PPS to predict the class of each
  bounding box, by the image properties of that specific bounding box.
  This means that for each image, this check crops all the sub-images defined by bounding
  boxes, and uses them as inputs as though they were regular classification dataset images.

How is the Predictive Power Score (PPS) calculated?
---------------------------------------------------
The properties' predictive score results in a numeric score between 0 (feature has
no predictive power) and 1 (feature can fully predict the label alone).

The process of calculating the PPS is the following:

The properties' predictive score results in a numeric score between 0 (feature has no predictive power) and 1 (feature can fully predict the label alone).

The process of calculating the PPS is the following:

.. GENERATED FROM PYTHON SOURCE LINES 81-105

1. Extract from the data only the label and the feature being tested
2. Drop samples with missing values
3. Keep 5000 (this is configurable parameter) samples from the data
4. Preprocess categorical columns. For the label using `sklearn.LabelEncoder` and for the feature
   using `sklearn.OneHotEncoder`
5. Partition the data with 4-fold cross-validation
6. Train decision tree
7. Compare the trained model's performance with naive model's performance as follows:

Regression: The naive model always predicts the median of the label column,
the metric being used is MAE and the PPS calculation is: :math:`1 - \frac{\text{MAE model}}{\text{MAE naive}}`

Classification: The naive model always predicts the most common class of
the label column, The metric being used is F1 and the PPS calculation is:
:math:`\frac{\text{F1 model} - \text{F1 naive}}{1 - \text{F1 naive}}`

.. note::

   All the PPS parameters can be changed by passing to the check the parameter ``ppscore_params``


For further information about PPS you can visit the `ppscore github <https://github.com/8080labs/ppscore>`__
or the following blog post: `RIP correlation. Introducing the Predictive Power Score
<https://towardsdatascience.com/rip-correlation-introducing-the-predictive-power-score-3d90808b9598>`__

.. GENERATED FROM PYTHON SOURCE LINES 107-109

Run the check on a Classification task
======================================

.. GENERATED FROM PYTHON SOURCE LINES 111-113

Loading data (MNIST)
--------------------

.. GENERATED FROM PYTHON SOURCE LINES 113-121

.. code-block:: default


    import numpy as np
    from deepchecks.vision.checks import PropertyLabelCorrelationChange
    from deepchecks.vision.datasets.classification.mnist import load_dataset

    train_ds = load_dataset(train=True, object_type='VisionData')
    test_ds = load_dataset(train=False, object_type='VisionData')








.. GENERATED FROM PYTHON SOURCE LINES 122-129

Insert bias
-----------
Let's see what happens when we insert bias into the dataset.

Specifically, we're going to change the pixel values of the image depending
on the label (0 to 9) so there is a correlation between brightness of image
and the label (also a small correlation of the index)

.. GENERATED FROM PYTHON SOURCE LINES 129-145

.. code-block:: default


    from deepchecks.vision.utils.transformations import un_normalize_batch

    def mnist_batch_to_images_with_bias_mod(mod):
        def mnist_batch_to_images_with_bias(batch):
            """Create function which inverse the data normalization."""
            tensor = batch[0]
            tensor = tensor.permute(0, 2, 3, 1)
            ret = un_normalize_batch(tensor, (0.1307,), (0.3081,))
            # add some label/index correlation
            for i, label in enumerate(batch[1]):
                if i % mod != 0:
                    ret[i] = np.ones(ret[i].shape) * int(i % 3 + 1) * int(label)

            return ret
        return mnist_batch_to_images_with_bias







.. GENERATED FROM PYTHON SOURCE LINES 146-150

.. code-block:: default


    train_ds.batch_to_images = mnist_batch_to_images_with_bias_mod(9)
    test_ds.batch_to_images = mnist_batch_to_images_with_bias_mod(2)








.. GENERATED FROM PYTHON SOURCE LINES 151-153

Run the check
-------------

.. GENERATED FROM PYTHON SOURCE LINES 153-158

.. code-block:: default


    check = PropertyLabelCorrelationChange()
    result = check.run(train_ds, test_ds)
    result.show()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |                                                                                                                                                             | 0/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |################                                                                                                                                             | 16/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |################################                                                                                                                             | 32/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |################################################                                                                                                             | 48/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |################################################################                                                                                             | 64/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |################################################################################                                                                             | 80/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |################################################################################################                                                             | 96/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |###############################################################################################################9                                             | 112/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |################################################################################################################################                             | 128/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |################################################################################################################################################             | 144/157 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |#############################################################################################################################################################| 157/157 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |          | 0/10 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |##        | 2/10 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |####      | 4/10 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |######    | 6/10 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |########  | 8/10 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |##########| 10/10 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |##########| 10/10 [Time: 00:00]


    Computing Check:
    |     | 0/1 [Time: 00:00]


    Computing Check:
    |#####| 1/1 [Time: 00:01]


    Computing Check:
    |#####| 1/1 [Time: 00:01]                                           
                                                                                                                                                                                                                            

                                                                      


                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Feature Label Correlation Change</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"bc99eb4b3e574902abcd9d1872a1164f": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_5b93adeed0ec441eb2956466bfc9d94e", "IPY_MODEL_9b20a6de1e2e4880b974bd6b470dab05", "IPY_MODEL_1a0a5df2e2d94b289b6940befc32f248", "IPY_MODEL_87f21c6641d74c11a3f233dd02a6db99"], "layout": "IPY_MODEL_8ba23f438d014d79917c5c89c530ff96"}}, "5b93adeed0ec441eb2956466bfc9d94e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_93110a87a59c4cbf8f4f70d25dbc92a9", "style": "IPY_MODEL_54a04cabb0ad447aa2d6f1a0285a1e2d", "value": "<h4><b>Feature Label Correlation Change</b></h4>"}}, "93110a87a59c4cbf8f4f70d25dbc92a9": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "54a04cabb0ad447aa2d6f1a0285a1e2d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "9b20a6de1e2e4880b974bd6b470dab05": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_86eab9707aa842c987099c83866fb0f9", "style": "IPY_MODEL_f439636c81cd4620bddcf3aa11df4aa3", "value": "<p>    Return the Predictive Power Score of image properties, in order to estimate their ability to predict the label. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/train_test_validation/plot_property_label_correlation_change.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "86eab9707aa842c987099c83866fb0f9": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "f439636c81cd4620bddcf3aa11df4aa3": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "1a0a5df2e2d94b289b6940befc32f248": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_08e0c600ea254fc788f4acd6c1f1b4f8", "style": "IPY_MODEL_f5839c8950594c348919486806def301"}}, "08e0c600ea254fc788f4acd6c1f1b4f8": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "f5839c8950594c348919486806def301": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "87f21c6641d74c11a3f233dd02a6db99": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_32975a0d7dd641b0bc78f3890dba3a50", "IPY_MODEL_5464e9e80e7b4b8283c7ca86deb96e06", "IPY_MODEL_c89d66f9967543d0b5d055fad7731da8", "IPY_MODEL_ccef68ebcb9e46768bd8ca19ad584326", "IPY_MODEL_8fc8dc9fdea847cd820d3b8f48689ddd", "IPY_MODEL_7875a7759bdc4cf0a12245492703d026", "IPY_MODEL_6de24db27e0f478c943cd13acc5f1ac4", "IPY_MODEL_a45f1d1753d94987891f20afeb4c6a0f", "IPY_MODEL_18c3d4f9f8614875a996abd6620e41d0", "IPY_MODEL_043312207dde4517acebf032919d42b6", "IPY_MODEL_d341dc40f86849a0bd93d8387471f015", "IPY_MODEL_f48dd3e597524dbfb5e70f511beb2c3b"], "layout": "IPY_MODEL_5c796aed795047049f72b23f3c5f178e"}}, "32975a0d7dd641b0bc78f3890dba3a50": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_ac18ed9541764eb5af6be8487df71f72", "style": "IPY_MODEL_f4fb92f6c56d4018abbc44ed29d4686f", "value": "<h5><b>Additional Outputs</b></h5>"}}, "ac18ed9541764eb5af6be8487df71f72": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "f4fb92f6c56d4018abbc44ed29d4686f": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "5464e9e80e7b4b8283c7ca86deb96e06": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.5.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"marker": {"color": "#00008b"}, "name": "Train", "text": ["<b>0.8</b>", "<b>0.74</b>", "<b>0.8</b>"], "textposition": "outside", "x": ["7", "5", "0"], "y": {"dtype": "float64", "shape": [3]}, "type": "bar", "uid": "744218ed-90f5-4679-9077-ca171c910a1e"}, {"marker": {"color": "#69b3a2"}, "name": "Test", "text": ["<b>0.08</b>", "<b>0.02</b>", "<b>0.21</b>"], "textposition": "outside", "x": ["7", "5", "0"], "y": {"dtype": "float64", "shape": [3]}, "type": "bar", "uid": "f3bc8d39-87f1-4cc5-bc3d-ad3701f56f67"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"barmode": "group", "height": 500, "legend": {"x": 1.0, "y": 1.0}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Brightness: Predictive Power Score (PPS) Per Class"}, "xaxis": {"range": [-3, 5], "title": {"text": "Class"}, "type": "category"}, "yaxis": {"range": [0, 1.05], "title": {"text": "Predictive Power Score (PPS)"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 0, "y", "buffer"], "data": "uo9nisKO6T9J31p11o/nPxsv3SQGgek/"}, {"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "WFVVVVVVtT+gb/mWb/mWPxwn3/yRuMo/"}]}, "c89d66f9967543d0b5d055fad7731da8": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6ec3087d926045a2934c2d0e8d9f59df", "style": "IPY_MODEL_fd8c4403118e4afca0c180aa12c59994", "value": "<div>The Predictive Power Score (PPS) is used to estimate the ability of an image property (such as brightness)to predict the label by itself. (Read more about <a href=https://docs.deepchecks.com/en/stable/checks_gallery/vision/train_test_validation/plot_feature_label_correlation_change.html target=\"_blank\">Predictive Power Score</a>)</div>"}}, "6ec3087d926045a2934c2d0e8d9f59df": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "fd8c4403118e4afca0c180aa12c59994": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "ccef68ebcb9e46768bd8ca19ad584326": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_281b0654aa6b46e3afba0e7697323e08", "style": "IPY_MODEL_77d353010cf2451fad9a498e27592fdf", "value": "<div><u>In the graph above</u>, we should suspect we have problems in our data if:</div>"}}, "281b0654aa6b46e3afba0e7697323e08": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "77d353010cf2451fad9a498e27592fdf": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "8fc8dc9fdea847cd820d3b8f48689ddd": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_8a2b15ca94fc4ddfae78ac35612897a6", "style": "IPY_MODEL_a5d3e4fd213343ee9e38589f39133db1", "value": "<div>1. <b>Train dataset PPS values are high</b>:</div>"}}, "8a2b15ca94fc4ddfae78ac35612897a6": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a5d3e4fd213343ee9e38589f39133db1": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "7875a7759bdc4cf0a12245492703d026": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_34e3caf7236142a7b67544f320ac854b", "style": "IPY_MODEL_978ea38985a4479bb45b9f0f15cb5315", "value": "<div>   A high PPS (close to 1) can mean that there's a bias in the dataset, as a single property can predict   the label successfully, using simple classic ML algorithms</div>"}}, "34e3caf7236142a7b67544f320ac854b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "978ea38985a4479bb45b9f0f15cb5315": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "6de24db27e0f478c943cd13acc5f1ac4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_eeadce80c52547c28098e15eed0795c7", "style": "IPY_MODEL_06a37d874d8b445d97fc03f1479633ed", "value": "<div>2. <b>Large difference between train and test PPS</b> (train PPS is larger):</div>"}}, "eeadce80c52547c28098e15eed0795c7": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "06a37d874d8b445d97fc03f1479633ed": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "a45f1d1753d94987891f20afeb4c6a0f": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_531c3625136f401691e9c27af07df176", "style": "IPY_MODEL_ad73bf5cd63549daaa7fe64c14664c62", "value": "<div>   An even more powerful indication of dataset bias, as an image property that was powerful in train</div>"}}, "531c3625136f401691e9c27af07df176": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ad73bf5cd63549daaa7fe64c14664c62": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "18c3d4f9f8614875a996abd6620e41d0": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_1a6f6dbc59ac4d9f81f4be630a06b56d", "style": "IPY_MODEL_ce7e58fda768450ab56318953a61ecca", "value": "<div>   but not in test can be explained by bias in train that is not relevant to a new dataset.</div>"}}, "1a6f6dbc59ac4d9f81f4be630a06b56d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ce7e58fda768450ab56318953a61ecca": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "043312207dde4517acebf032919d42b6": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_766ec6e6f06345d093e3a5193c9e4b25", "style": "IPY_MODEL_d045cca16b104b6a9c23d1814faff85f", "value": "<div>3. <b>Large difference between test and train PPS</b> (test PPS is larger):</div>"}}, "766ec6e6f06345d093e3a5193c9e4b25": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d045cca16b104b6a9c23d1814faff85f": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "d341dc40f86849a0bd93d8387471f015": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_b7a6cb0bff064c5fbf7332f1aee9f1d8", "style": "IPY_MODEL_dd9ee9419d364947922f3432867c3be2", "value": "<div>   An anomalous value, could indicate drift in test dataset that caused a coincidental correlation to the target label.</div>"}}, "b7a6cb0bff064c5fbf7332f1aee9f1d8": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "dd9ee9419d364947922f3432867c3be2": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "f48dd3e597524dbfb5e70f511beb2c3b": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_deee65aa3c6c4328832e31b48251d685", "style": "IPY_MODEL_a7923a2ca90442a0830248c720baa45b", "value": "<div><p style=\"font-size:0.9em;line-height:1;\"><i>Note - data sampling: Running on 10000 <b>train</b> data samples out of 60000. Sample size can be controlled with the \"n_samples\" parameter.</i></p></div>"}}, "deee65aa3c6c4328832e31b48251d685": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a7923a2ca90442a0830248c720baa45b": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "5c796aed795047049f72b23f3c5f178e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "8ba23f438d014d79917c5c89c530ff96": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "bc99eb4b3e574902abcd9d1872a1164f"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 159-160

To display the results in an IDE like PyCharm, you can use the following code:

.. GENERATED FROM PYTHON SOURCE LINES 160-162

.. code-block:: default


    #  result.show_in_window()







.. GENERATED FROM PYTHON SOURCE LINES 163-164

The result will be displayed in a new window.

.. GENERATED FROM PYTHON SOURCE LINES 166-172

We can see that the check detected the bias we inserted, and that the
brightness property of the image has a high PPS, meaning it can be used to
solely predict the label.

Run the check on an Object Detection task
=========================================

.. GENERATED FROM PYTHON SOURCE LINES 174-176

Loading data (COCO)
--------------------

.. GENERATED FROM PYTHON SOURCE LINES 176-181

.. code-block:: default

    from deepchecks.vision.datasets.detection.coco import load_dataset

    train_ds = load_dataset(train=True, object_type='VisionData')
    test_ds = load_dataset(train=False, object_type='VisionData')








.. GENERATED FROM PYTHON SOURCE LINES 182-189

Insert bias
-----------
Let's now see what happens when we insert bias into the dataset.

Specifically, we're going to change the pixel values of parts of the image
(where the bounding boxes are), so there is a correlation between brightness
of image and the label

.. GENERATED FROM PYTHON SOURCE LINES 189-209

.. code-block:: default


    # Increase the pixel values of all bounding boxes by the labels value:

    def coco_batch_to_images_with_bias_mod(mod):
        def coco_batch_to_images_with_bias(batch):
            import numpy as np
            ret = [np.array(x) for x in batch[0]]
            for i, labels in enumerate(train_ds.batch_to_labels(batch)):
                if i % mod != 0:
                    for label in labels:
                        x, y, w, h = np.array(label[1:]).astype(int)
                        ret[i][y:y+h, x:x+w] = ret[i][y:y+h, x:x+w].clip(min=200) * int(label[0])
            return ret
        return coco_batch_to_images_with_bias


    train_ds.batch_to_images = coco_batch_to_images_with_bias_mod(12)
    test_ds.batch_to_images = coco_batch_to_images_with_bias_mod(2)









.. GENERATED FROM PYTHON SOURCE LINES 210-212

Run the check
-------------

.. GENERATED FROM PYTHON SOURCE LINES 212-217

.. code-block:: default


    check = PropertyLabelCorrelationChange(per_class=False)
    result = check.run(train_ds, test_ds)
    result.show()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |     | 0/2 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |##5  | 1/2 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#####| 2/2 [Time: 00:02]
    Ingesting Batches - Train Dataset:
    |#####| 2/2 [Time: 00:02]

    Ingesting Batches - Test Dataset:
    |     | 0/2 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |##5  | 1/2 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#####| 2/2 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |#####| 2/2 [Time: 00:01]


    Computing Check:
    |     | 0/1 [Time: 00:00]


    Computing Check:
    |#####| 1/1 [Time: 00:00]


    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                

                                                               


                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Feature Label Correlation Change</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"b5ce3c957eaf48eab3f51211b93681b2": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_e180673cf55646989016af9ec5252735", "IPY_MODEL_7545e625c0f24d41a466afa414c297f6", "IPY_MODEL_6022d4f580574ae092ae3681a2ebe1d4", "IPY_MODEL_ccc4e0414d3544e09798ae5f87c834b7"], "layout": "IPY_MODEL_a48836be7b94481ebf5739144c9f375c"}}, "e180673cf55646989016af9ec5252735": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c9e1f62039764222a7111cd65023c230", "style": "IPY_MODEL_91d80a6862bd4555a92d96e1696d51d3", "value": "<h4><b>Feature Label Correlation Change</b></h4>"}}, "c9e1f62039764222a7111cd65023c230": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "91d80a6862bd4555a92d96e1696d51d3": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "7545e625c0f24d41a466afa414c297f6": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3b8dfae4df284078ae73bd021183e10f", "style": "IPY_MODEL_fa54e5c64f4242e5a340bd66e9e61e9f", "value": "<p>    Return the Predictive Power Score of image properties, in order to estimate their ability to predict the label. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/train_test_validation/plot_property_label_correlation_change.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "3b8dfae4df284078ae73bd021183e10f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "fa54e5c64f4242e5a340bd66e9e61e9f": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "6022d4f580574ae092ae3681a2ebe1d4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6f026d65dca549a8b33a04bde310e05a", "style": "IPY_MODEL_a2c914a2067c4f598e81984e4e05763e"}}, "6f026d65dca549a8b33a04bde310e05a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a2c914a2067c4f598e81984e4e05763e": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "ccc4e0414d3544e09798ae5f87c834b7": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_225f0d3bf7834dc694d056cbcbcbf24c", "IPY_MODEL_1bc0312f1f6c4041ac7f3ea847b90ebd", "IPY_MODEL_6161902ae0d74952b527704178084869", "IPY_MODEL_9536788cb0f44ac49730eaa08a322a98", "IPY_MODEL_0695857182644130b47a767f038e982a", "IPY_MODEL_a77283c0b5ed48b7abd6d81af55935aa", "IPY_MODEL_cda1e8892b914f7e9be7b6fb342319d4", "IPY_MODEL_e94db9ecc3f9402192dc5954d82da1b0", "IPY_MODEL_33477999a3df45f3a43057b85eb53366", "IPY_MODEL_4e8e03d6e7e7452d9076190584bb81b2", "IPY_MODEL_17626eca66aa433a967fcca7edd854ef"], "layout": "IPY_MODEL_9ef07bdadc844a69b34938d21412a985"}}, "225f0d3bf7834dc694d056cbcbcbf24c": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_5e533d401e994bc58dea9cdd9d29440c", "style": "IPY_MODEL_4f8c88b89dc443aa97e2527d8400fe4e", "value": "<h5><b>Additional Outputs</b></h5>"}}, "5e533d401e994bc58dea9cdd9d29440c": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "4f8c88b89dc443aa97e2527d8400fe4e": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "1bc0312f1f6c4041ac7f3ea847b90ebd": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.5.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"marker": {"color": "#00008b"}, "name": "Train", "text": ["<b>0.23</b>", "<b>0.14</b>", "<b>0.17</b>"], "textposition": "outside", "x": ["Brightness", "Mean Green Relative Intensity", "Mean Red Relative Intensity"], "y": {"dtype": "float64", "shape": [3]}, "type": "bar", "uid": "9df1618a-f34e-4b78-9c0f-739cd292a927"}, {"marker": {"color": "#69b3a2"}, "name": "Test", "text": ["<b>0.1</b>", "<b>0.06</b>", "<b>0.1</b>"], "textposition": "outside", "x": ["Brightness", "Mean Green Relative Intensity", "Mean Red Relative Intensity"], "y": {"dtype": "float64", "shape": [3]}, "type": "bar", "uid": "5d5689d3-f4da-4c91-bf48-518a057ab5af"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"barmode": "group", "height": 500, "legend": {"x": 1.0, "y": 1.0}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Predictive Power Score (PPS) - Can a feature predict the label by itself?"}, "xaxis": {"range": [-3, 5], "title": {"text": "Column"}, "type": "category"}, "yaxis": {"range": [0, 1.05], "title": {"text": "Predictive Power Score (PPS)"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 0, "y", "buffer"], "data": "xizOPRwBzT8icaZ68JHBP3hJvI5SU8U/"}, {"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "r8xBAJtmuT9vJhIxeEKwPxyXxeHdubk/"}]}, "6161902ae0d74952b527704178084869": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_bb2cf523fde348ceb6d3faddd39906a1", "style": "IPY_MODEL_77c56252d0744589bfe12fc6e44cef59", "value": "<div>The Predictive Power Score (PPS) is used to estimate the ability of an image property (such as brightness)to predict the label by itself. (Read more about <a href=https://docs.deepchecks.com/en/stable/checks_gallery/vision/train_test_validation/plot_feature_label_correlation_change.html target=\"_blank\">Predictive Power Score</a>)</div>"}}, "bb2cf523fde348ceb6d3faddd39906a1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "77c56252d0744589bfe12fc6e44cef59": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "9536788cb0f44ac49730eaa08a322a98": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_61079a821e24400a87a829e5697d4879", "style": "IPY_MODEL_82d26012b368407fbe4594ea7628fa79", "value": "<div><u>In the graph above</u>, we should suspect we have problems in our data if:</div>"}}, "61079a821e24400a87a829e5697d4879": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "82d26012b368407fbe4594ea7628fa79": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "0695857182644130b47a767f038e982a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_60a60a3a58ca4100a4f85dc62aec3190", "style": "IPY_MODEL_18ee7c5978aa440192c5b127e159bc41", "value": "<div>1. <b>Train dataset PPS values are high</b>:</div>"}}, "60a60a3a58ca4100a4f85dc62aec3190": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "18ee7c5978aa440192c5b127e159bc41": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "a77283c0b5ed48b7abd6d81af55935aa": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_ed561db8f1af4bdf9d5580dc4198ace5", "style": "IPY_MODEL_e4e412f3cf2a4a018ed4b4d762e72b3a", "value": "<div>   A high PPS (close to 1) can mean that there's a bias in the dataset, as a single property can predict   the label successfully, using simple classic ML algorithms</div>"}}, "ed561db8f1af4bdf9d5580dc4198ace5": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e4e412f3cf2a4a018ed4b4d762e72b3a": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "cda1e8892b914f7e9be7b6fb342319d4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_1602112f96dc40a98eb21d5ddb9f6685", "style": "IPY_MODEL_a11749b6c4c546588ad8b521a7ee9d6e", "value": "<div>2. <b>Large difference between train and test PPS</b> (train PPS is larger):</div>"}}, "1602112f96dc40a98eb21d5ddb9f6685": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a11749b6c4c546588ad8b521a7ee9d6e": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "e94db9ecc3f9402192dc5954d82da1b0": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_37e0a1ccd8194b35b5535722603b53d8", "style": "IPY_MODEL_9c5456eaf4404605869352f61a85fc64", "value": "<div>   An even more powerful indication of dataset bias, as an image property that was powerful in train</div>"}}, "37e0a1ccd8194b35b5535722603b53d8": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9c5456eaf4404605869352f61a85fc64": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "33477999a3df45f3a43057b85eb53366": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3db1fed3266f4a60882955e5f28a105b", "style": "IPY_MODEL_b9f00b279d114694998bb495862ea21b", "value": "<div>   but not in test can be explained by bias in train that is not relevant to a new dataset.</div>"}}, "3db1fed3266f4a60882955e5f28a105b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b9f00b279d114694998bb495862ea21b": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "4e8e03d6e7e7452d9076190584bb81b2": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_5f16d95b19834305af27a168f5d8b90b", "style": "IPY_MODEL_d1c8935b7b5749a5bb0a550c1ef4b9f7", "value": "<div>3. <b>Large difference between test and train PPS</b> (test PPS is larger):</div>"}}, "5f16d95b19834305af27a168f5d8b90b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d1c8935b7b5749a5bb0a550c1ef4b9f7": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "17626eca66aa433a967fcca7edd854ef": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_5b78e46501be4cb5b66a2b1eb9aae8a3", "style": "IPY_MODEL_77c4f14c811d4a40bec896cdac907409", "value": "<div>   An anomalous value, could indicate drift in test dataset that caused a coincidental correlation to the target label.</div>"}}, "5b78e46501be4cb5b66a2b1eb9aae8a3": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "77c4f14c811d4a40bec896cdac907409": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "9ef07bdadc844a69b34938d21412a985": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a48836be7b94481ebf5739144c9f375c": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "b5ce3c957eaf48eab3f51211b93681b2"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 218-233

We can see that the check detected the bias we inserted, and that the brightness
property of the image has a high PPS, meaning it can be used to solely predict the label.

Define a condition
==================
We can define on our check a condition that will validate that our pps scores aren't
too high. The check has 2 possible built-in conditions:

``add_condition_feature_pps_difference_not_greater_than`` - Validate that the difference in 
the PPS between train and test is not larger than defined amount (default 0.2)

``add_condition_feature_pps_in_train_not_greater_than`` - Validate that the PPS scores on
train dataset are not exceeding a defined amount (default 0.7)

Let's add the conditions, and re-run the check:

.. GENERATED FROM PYTHON SOURCE LINES 233-238

.. code-block:: default


    check = PropertyLabelCorrelationChange(per_class=False).add_condition_property_pps_difference_less_than(0.1) \
            .add_condition_property_pps_in_train_less_than()
    result = check.run(train_dataset=train_ds, test_dataset=test_ds)
    result.show(show_additional_outputs=False)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |     | 0/2 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |##5  | 1/2 [Time: 00:01]
    Ingesting Batches - Train Dataset:
    |#####| 2/2 [Time: 00:02]
    Ingesting Batches - Train Dataset:
    |#####| 2/2 [Time: 00:02]

    Ingesting Batches - Test Dataset:
    |     | 0/2 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |##5  | 1/2 [Time: 00:00]

    Ingesting Batches - Test Dataset:
    |#####| 2/2 [Time: 00:01]

    Ingesting Batches - Test Dataset:
    |#####| 2/2 [Time: 00:01]


    Computing Check:
    |     | 0/1 [Time: 00:00]


    Computing Check:
    |#####| 1/1 [Time: 00:00]


    Computing Check:
    |#####| 1/1 [Time: 00:00]                                           
                                                                

                                                               


                                              

.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Feature Label Correlation Change</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"23b991438af64610974a10ebdafa7cfc": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_8ab9e40932bb47fa8ead1e317da8ae3d", "IPY_MODEL_40cb7d50a6864c7ab434eb9e87e1eb7d", "IPY_MODEL_c4edf8d704fd452c94459219749c351a"], "layout": "IPY_MODEL_725b71f97e554775b08e183517257000"}}, "8ab9e40932bb47fa8ead1e317da8ae3d": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_1112c8ca4d4c4f98b69726dca5875ec0", "style": "IPY_MODEL_70ff021c496a42e39a26b4f3802f3639", "value": "<h4><b>Feature Label Correlation Change</b></h4>"}}, "1112c8ca4d4c4f98b69726dca5875ec0": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "70ff021c496a42e39a26b4f3802f3639": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "40cb7d50a6864c7ab434eb9e87e1eb7d": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_7d0c1e9f160c42f0b6dd6279c87b8e75", "style": "IPY_MODEL_2cd1e3dc62af4a4d9ef3ab98100a4f7d", "value": "<p>    Return the Predictive Power Score of image properties, in order to estimate their ability to predict the label. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/vision/train_test_validation/plot_property_label_correlation_change.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "7d0c1e9f160c42f0b6dd6279c87b8e75": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "2cd1e3dc62af4a4d9ef3ab98100a4f7d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "c4edf8d704fd452c94459219749c351a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_e76034fee4e0443a8f52c27ceb32de6b", "style": "IPY_MODEL_9f00c8d1e00044d7bf11411630fea96e", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_e44a2_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_e44a2_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_e44a2_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_e44a2_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_e44a2_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_e44a2_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_e44a2_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_e44a2_row0_col1\" class=\"data row0 col1\" >Train-Test properties' Predictive Power Score difference is less than 0.1</td>\n      <td id=\"T_e44a2_row0_col2\" class=\"data row0 col2\" >Properties with PPS difference above threshold: {'Brightness': '0.13'}</td>\n    </tr>\n    <tr>\n      <td id=\"T_e44a2_row1_col0\" class=\"data row1 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_e44a2_row1_col1\" class=\"data row1 col1\" >Train properties' Predictive Power Score is less than 0.2</td>\n      <td id=\"T_e44a2_row1_col2\" class=\"data row1 col2\" >Properties in train dataset with PPS above threshold: {'Brightness': '0.23'}</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "e76034fee4e0443a8f52c27ceb32de6b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9f00c8d1e00044d7bf11411630fea96e": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "725b71f97e554775b08e183517257000": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "23b991438af64610974a10ebdafa7cfc"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  12.715 seconds)


.. _sphx_glr_download_checks_gallery_vision_train_test_validation_plot_property_label_correlation_change.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_property_label_correlation_change.py <plot_property_label_correlation_change.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_property_label_correlation_change.ipynb <plot_property_label_correlation_change.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
