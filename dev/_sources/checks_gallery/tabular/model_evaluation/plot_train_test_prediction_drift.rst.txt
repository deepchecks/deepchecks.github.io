
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "checks_gallery/tabular/model_evaluation/plot_train_test_prediction_drift.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_checks_gallery_tabular_model_evaluation_plot_train_test_prediction_drift.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_checks_gallery_tabular_model_evaluation_plot_train_test_prediction_drift.py:


.. _plot_tabular_train_test_prediction_drift:

Train Test Prediction Drift
***************************

This notebook provides an overview for using and understanding the tabular prediction drift check.

**Structure:**

* `What Is Prediction Drift? <#what-is-prediction-drift>`__
* `Generate Data <#generate-data>`__
* `Build Model <#build-model>`__
* `Run check <#run-check>`__

What Is Prediction Drift?
=========================

Drift is simply a change in the distribution of data over time, and it is
also one of the top reasons why machine learning model's performance degrades
over time.

Prediction drift is when drift occurs in the prediction itself.
Calculating prediction drift is especially useful in cases
in which labels are not available for the test dataset, and so a drift in the predictions
is our only indication that a changed has happened in the data that actually affects model
predictions. If labels are available, it's also recommended to run the
:doc:`Label Drift check </checks_gallery/tabular/train_test_validation/plot_train_test_label_drift>`.

For more information on drift, please visit our :doc:`drift guide </user-guide/general/drift_guide>`.

How Deepchecks Detects Prediction Drift
---------------------------------------

This check detects prediction drift by using :ref:`univariate measures <drift_detection_by_univariate_measure>`
on the prediction output.

.. GENERATED FROM PYTHON SOURCE LINES 41-48

.. code-block:: default



    from sklearn.preprocessing import LabelEncoder

    from deepchecks.tabular.checks import TrainTestPredictionDrift
    from deepchecks.tabular.datasets.classification import adult








.. GENERATED FROM PYTHON SOURCE LINES 49-51

Generate data
=============

.. GENERATED FROM PYTHON SOURCE LINES 51-55

.. code-block:: default


    label_name = 'income'
    train_ds, test_ds = adult.load_data()








.. GENERATED FROM PYTHON SOURCE LINES 56-57

Introducing drift:

.. GENERATED FROM PYTHON SOURCE LINES 57-62

.. code-block:: default


    test_ds.data['education-num'] = 13
    test_ds.data['education'] = ' Bachelors'









.. GENERATED FROM PYTHON SOURCE LINES 63-65

Build Model
===========

.. GENERATED FROM PYTHON SOURCE LINES 65-73

.. code-block:: default



    from sklearn.compose import ColumnTransformer
    from sklearn.ensemble import RandomForestClassifier
    from sklearn.impute import SimpleImputer
    from sklearn.pipeline import Pipeline
    from sklearn.preprocessing import OrdinalEncoder








.. GENERATED FROM PYTHON SOURCE LINES 74-92

.. code-block:: default



    numeric_transformer = SimpleImputer()
    categorical_transformer = Pipeline(
        steps=[("imputer", SimpleImputer(strategy="most_frequent")), ("encoder", OrdinalEncoder())]
    )

    train_ds.features
    preprocessor = ColumnTransformer(
        transformers=[
            ("num", numeric_transformer, train_ds.numerical_features),
            ("cat", categorical_transformer, train_ds.cat_features),
        ]
    )

    model = Pipeline(steps=[("preprocessing", preprocessor), ("model", RandomForestClassifier(max_depth=5, n_jobs=-1))])
    model = model.fit(train_ds.data[train_ds.features], train_ds.data[train_ds.label_name])








.. GENERATED FROM PYTHON SOURCE LINES 93-95

Run check
=========

.. GENERATED FROM PYTHON SOURCE LINES 95-100

.. code-block:: default


    check = TrainTestPredictionDrift()
    result = check.run(train_dataset=train_ds, test_dataset=test_ds, model=model)
    result






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Train Test Prediction Drift</title>
        <link rel="icon" type="image/x-icon" href="https://deepchecks.com/wp-content/themes/deepchecks/assets/favicons/favicon.ico">
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"5c20ec6263d24c6e991f31d01d087220": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_3c94a8f6b6c74a86a72f68a8c47f41b0", "IPY_MODEL_4f0abf5022ef413385070920e5a480aa", "IPY_MODEL_4d28cf35748b4636a5f79f9bce6e65bd", "IPY_MODEL_a590baf32f084ad7a4345d954f3c977d"], "layout": "IPY_MODEL_1dfa26cd080e4cfbb73991a9b692d167"}}, "3c94a8f6b6c74a86a72f68a8c47f41b0": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3ce05dac9cd642aa916a43dce3182763", "style": "IPY_MODEL_2ec143ad3fdd4245a4fef162c7a7b6d8", "value": "<h4><b>Train Test Prediction Drift</b></h4>"}}, "3ce05dac9cd642aa916a43dce3182763": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "2ec143ad3fdd4245a4fef162c7a7b6d8": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "4f0abf5022ef413385070920e5a480aa": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_d932395a9f274e739ec534ad5ee9dd71", "style": "IPY_MODEL_3478ad3d170648bc8b42017046894104", "value": "<p>    Calculate prediction drift between train dataset and test dataset, using statistical measures. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/tabular/model_evaluation/plot_train_test_prediction_drift.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "d932395a9f274e739ec534ad5ee9dd71": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "3478ad3d170648bc8b42017046894104": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "4d28cf35748b4636a5f79f9bce6e65bd": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_700ab286e7134e75ae8b242e01d2b65f", "style": "IPY_MODEL_9a45d809964c4ffe81b52895d093b5b1"}}, "700ab286e7134e75ae8b242e01d2b65f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9a45d809964c4ffe81b52895d093b5b1": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "a590baf32f084ad7a4345d954f3c977d": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_e9e6937739c54527beaafd1eb31374fa", "IPY_MODEL_5e69caae52d1488ba733ef155ad99651", "IPY_MODEL_ac1f935a418b473999e4a0713f41b0aa", "IPY_MODEL_f5f5b0c6fdc241349e1fc1b6400c9f46"], "layout": "IPY_MODEL_5bbfa6e8189541fca591c359c4d6b15f"}}, "e9e6937739c54527beaafd1eb31374fa": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_82e0e5c0d3734d1eac85c34cceaf232d", "style": "IPY_MODEL_5c3cca9b39914695a0bc11f1fb5884b9", "value": "<h5><b>Additional Outputs</b></h5>"}}, "82e0e5c0d3734d1eac85c34cceaf232d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "5c3cca9b39914695a0bc11f1fb5884b9": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "5e69caae52d1488ba733ef155ad99651": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_87bcd8e97c2948ccbf7ed0902ed791ac", "style": "IPY_MODEL_64aeb5c04959409fb30aacc5fb325c9a", "value": "<div><span>\n                The Drift score is a measure for the difference between two distributions, in this check - the test\n                and train distributions.<br> The check shows the drift score and distributions for the predicted\n                class probabilities.\n            </span></div>"}}, "87bcd8e97c2948ccbf7ed0902ed791ac": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "64aeb5c04959409fb30aacc5fb325c9a": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "ac1f935a418b473999e4a0713f41b0aa": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_22d4210ba3334532a8cffc4b545e1592", "style": "IPY_MODEL_36caf653cc9c4e808a7ad21ef8425f76", "value": "<div>For discrete distribution plots, showing the top 10 categories with largest difference between train and test.</div>"}}, "22d4210ba3334532a8cffc4b545e1592": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "36caf653cc9c4e808a7ad21ef8425f76": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "f5f5b0c6fdc241349e1fc1b6400c9f46": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"base": 0, "marker": {"color": "#01B8AA"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.1], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "bd38f06e-66d0-4ecb-b425-6f83134c3dd9"}, {"base": 0.1, "marker": {"color": "#F2C80F"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.01756862320001086], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "842f4c0d-0f5a-49d3-b937-d747b1c09bb7"}, {"fill": "tozeroy", "line": {"color": "#00008b", "shape": "spline"}, "name": "Train Dataset", "x": [0.011613721457954189, 0.014766750670471864, 0.01686431524810076, 0.017991815253950893, 0.01982666696075504, 0.02140444593938133, 0.024191359619237723, 0.027620747377295713, 0.02965833116298567, 0.03376519949256223, 0.040822116185330916, 0.04155817116518291, 0.04356489388520839, 0.044570979433694535, 0.046181137866167773, 0.04770064677649708, 0.04770294086801715, 0.04879435677350697, 0.049917226526686426, 0.05026537856302532, 0.05354686291027438, 0.05383867165061395, 0.056494541352297235, 0.05899444195728478, 0.06271969601293777, 0.06567733042487474, 0.06574755057304862, 0.06820939383278772, 0.07488658483867151, 0.08338966509524079, 0.08379216027808012, 0.08721705511539564, 0.09022199376716948, 0.09299765942219058, 0.10152213693316944, 0.10183676998311159, 0.10205914385674351, 0.109633436961078, 0.1140387028732468, 0.11829945427841226, 0.11988137968814308, 0.12082750897703258, 0.12296537564759262, 0.1291300945631392, 0.13646040753813488, 0.13792598939317458, 0.14300507391356201, 0.15597059909820604, 0.156181119952813, 0.15805739586754194, 0.16851491816604314, 0.1740152088032375, 0.18217726271027973, 0.18217726271027973, 0.18644077617748597, 0.192059818508269, 0.19321660902874055, 0.1959715994101984, 0.19837329734238499, 0.20933741286713084, 0.2101044282133005, 0.21201078142112523, 0.22021421594417753, 0.22814903791833197, 0.22971350902135013, 0.23321555769318134, 0.2407062309962132, 0.24334706508741163, 0.24334706508741163, 0.24619364762336343, 0.24784565904286854, 0.2639086089423943, 0.26423825732839495, 0.2672788178815739, 0.2822828670334264, 0.28524504795853245, 0.2995765217558096, 0.3003274767384579, 0.31632477971670997, 0.31837208644348935, 0.31848158752294914, 0.33233786710227714, 0.3347480642602665, 0.3364166961485208, 0.3433539587523071, 0.3462857931304854, 0.35446130585355234, 0.3559462126663046, 0.36292239047943087, 0.3725059155585838, 0.37673985784348757, 0.3875039288202181, 0.3905505252636153, 0.3972035250468576, 0.3987070616260857, 0.4085951349686468, 0.4175370901352266, 0.42663974467367827, 0.44468435437870973, 0.4451631378434761, 0.4499658958953126, 0.4627289640837412, 0.46927860700522445, 0.48077357378877267, 0.4988181834938042, 0.5031977173521001, 0.5168627931988357, 0.5261971776559489, 0.5349074029038671, 0.5407264454749469, 0.5427004547976033, 0.5489964702806893, 0.5507621325142715, 0.5529520126088986, 0.559270303016463, 0.562057818876506, 0.5675219566641049, 0.5684459408230861, 0.57099662231393, 0.5732524388915228, 0.5752142617514452, 0.5856691624716642, 0.5865723306081341, 0.5890412320189615, 0.5957306040550256, 0.6025872156086115, 0.60702629041726, 0.6070658940234397, 0.607085841723993, 0.6103881028767634, 0.6251304514290245, 0.6260964410471607, 0.643175061134056, 0.651927326870762, 0.6612196708390874, 0.6792642805441189, 0.6973088902491504, 0.7153534999541818, 0.7333981096592134, 0.7427897787347754, 0.7514427193642449, 0.7603410448890352, 0.7694873290692763, 0.7875319387743078, 0.801269314696504, 0.8055765484793393, 0.8236211581843708, 0.8407151103587623, 0.8416657678894023, 0.8597103775944337, 0.8777549872994652, 0.8957995970044966], "xaxis": "x2", "y": {"dtype": "float64", "shape": [152]}, "yaxis": "y2", "type": "scatter", "uid": "1420638b-47d5-4cc8-b7b7-9aae12956533"}, {"line": {"color": "#00008b", "dash": "dash"}, "mode": "lines+markers", "name": "Train Mean", "x": [0.2407062309962132, 0.2407062309962132], "xaxis": "x2", "y": [0, 1.2035704966543743], "yaxis": "y2", "type": "scatter", "uid": "f6496114-296c-4277-894b-b108de3920a1"}, {"line": {"color": "#00008b"}, "mode": "lines", "name": "Train Median", "x": [0.18217726271027973, 0.18217726271027973], "xaxis": "x2", "y": [0, 1.3162415062628885], "yaxis": "y2", "type": "scatter", "uid": "3d668d66-a88b-4155-ad8f-a88bcd205601"}, {"fill": "tozeroy", "line": {"color": "#69b3a2", "shape": "spline"}, "name": "Test Dataset", "x": [0.011613721457954189, 0.014766750670471864, 0.01686431524810076, 0.017991815253950893, 0.01982666696075504, 0.02140444593938133, 0.024191359619237723, 0.027620747377295713, 0.02965833116298567, 0.03376519949256223, 0.040822116185330916, 0.04155817116518291, 0.04356489388520839, 0.044570979433694535, 0.046181137866167773, 0.04770064677649708, 0.04770294086801715, 0.04879435677350697, 0.049917226526686426, 0.05026537856302532, 0.05354686291027438, 0.05383867165061395, 0.056494541352297235, 0.05899444195728478, 0.06271969601293777, 0.06567733042487474, 0.06574755057304862, 0.06820939383278772, 0.07488658483867151, 0.08338966509524079, 0.08379216027808012, 0.08721705511539564, 0.09022199376716948, 0.09299765942219058, 0.10152213693316944, 0.10183676998311159, 0.10205914385674351, 0.109633436961078, 0.1140387028732468, 0.11829945427841226, 0.11988137968814308, 0.12082750897703258, 0.12296537564759262, 0.1291300945631392, 0.13646040753813488, 0.13792598939317458, 0.14300507391356201, 0.15597059909820604, 0.156181119952813, 0.15805739586754194, 0.16851491816604314, 0.1740152088032375, 0.18217726271027973, 0.18217726271027973, 0.18644077617748597, 0.192059818508269, 0.19321660902874055, 0.1959715994101984, 0.19837329734238499, 0.20933741286713084, 0.2101044282133005, 0.21201078142112523, 0.22021421594417753, 0.22814903791833197, 0.22971350902135013, 0.23321555769318134, 0.2407062309962132, 0.24334706508741163, 0.24334706508741163, 0.24619364762336343, 0.24784565904286854, 0.2639086089423943, 0.26423825732839495, 0.2672788178815739, 0.2822828670334264, 0.28524504795853245, 0.2995765217558096, 0.3003274767384579, 0.31632477971670997, 0.31837208644348935, 0.31848158752294914, 0.33233786710227714, 0.3347480642602665, 0.3364166961485208, 0.3433539587523071, 0.3462857931304854, 0.35446130585355234, 0.3559462126663046, 0.36292239047943087, 0.3725059155585838, 0.37673985784348757, 0.3875039288202181, 0.3905505252636153, 0.3972035250468576, 0.3987070616260857, 0.4085951349686468, 0.4175370901352266, 0.42663974467367827, 0.44468435437870973, 0.4451631378434761, 0.4499658958953126, 0.4627289640837412, 0.46927860700522445, 0.48077357378877267, 0.4988181834938042, 0.5031977173521001, 0.5168627931988357, 0.5261971776559489, 0.5349074029038671, 0.5407264454749469, 0.5427004547976033, 0.5489964702806893, 0.5507621325142715, 0.5529520126088986, 0.559270303016463, 0.562057818876506, 0.5675219566641049, 0.5684459408230861, 0.57099662231393, 0.5732524388915228, 0.5752142617514452, 0.5856691624716642, 0.5865723306081341, 0.5890412320189615, 0.5957306040550256, 0.6025872156086115, 0.60702629041726, 0.6070658940234397, 0.607085841723993, 0.6103881028767634, 0.6251304514290245, 0.6260964410471607, 0.643175061134056, 0.651927326870762, 0.6612196708390874, 0.6792642805441189, 0.6973088902491504, 0.7153534999541818, 0.7333981096592134, 0.7427897787347754, 0.7514427193642449, 0.7603410448890352, 0.7694873290692763, 0.7875319387743078, 0.801269314696504, 0.8055765484793393, 0.8236211581843708, 0.8407151103587623, 0.8416657678894023, 0.8597103775944337, 0.8777549872994652, 0.8957995970044966], "xaxis": "x2", "y": {"dtype": "float64", "shape": [152]}, "yaxis": "y2", "type": "scatter", "uid": "f980f86e-0e04-4e78-9a8a-facabe00a324"}, {"line": {"color": "#69b3a2", "dash": "dash"}, "mode": "lines+markers", "name": "Test Mean", "x": [0.33233786710227714, 0.33233786710227714], "xaxis": "x2", "y": [0, 0.499283101798851], "yaxis": "y2", "type": "scatter", "uid": "db661a74-7df7-4978-ba03-b63cd8105905"}, {"line": {"color": "#69b3a2"}, "mode": "lines", "name": "Test Median", "x": [0.24334706508741163, 0.24334706508741163], "xaxis": "x2", "y": [0, 1.1962137441063434], "yaxis": "y2", "type": "scatter", "uid": "99d8a7d5-43ba-4503-b15d-e3d0538ee78c"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"font": {"size": 16}, "showarrow": false, "text": "Drift Score (Earth Mover's Distance)", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0000000000000002, "yanchor": "bottom", "yref": "paper"}, {"font": {"size": 16}, "showarrow": false, "text": "Distribution Plot", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 0.7200000000000001, "yanchor": "bottom", "yref": "paper"}], "bargroupgap": 0, "height": 400, "legend": {"title": {"text": "Legend"}, "y": 0.6, "yanchor": "top"}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "predicted probabilities for class  <=50K", "x": 0.5, "xanchor": "center"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "dtick": 0.05, "fixedrange": true, "gridcolor": "black", "linecolor": "black", "range": [0, 0.4], "showgrid": false}, "yaxis": {"anchor": "x", "autorange": true, "color": "black", "domain": [0.9200000000000002, 1.0], "fixedrange": true, "rangemode": "normal", "showgrid": false, "showline": false, "showticklabels": false, "zeroline": false}, "xaxis2": {"anchor": "y2", "domain": [0.0, 1.0], "fixedrange": false, "range": [0.014766750670471864, 0.8407151103587623], "title": {"text": "predicted probabilities for class  <=50K"}}, "yaxis2": {"anchor": "x2", "domain": [0.0, 0.7200000000000001], "fixedrange": true, "title": {"text": "Probability Density"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "ViizFYdsAkAv6x1xwgIDQMWxPnyNYgNAh62NaZOUA0CjYyrSrOMDQDHRattPJQRAlcco7ZeTBEAyJejq0BAFQBzy8+5zVQVA3FOeDxTSBUDB+hZrL3sGQMbmvQFviQZA/Jj+rvesBkCbfFx687wGQJYrTgr60wZARfT0NNHmBkArZg7y1+YGQOYUojik8gZA/7D3JUX9BkCRr5NNQQAHQK8e7ewyFQdA5CVeTG8WB0Ak1NgxBh0HQHuVDiylGwdA1sCkSEUMB0CB8XAmEPUGQBjxop1l9AZAFp7EP8DZBkBtzqzv0nIGQI+TDckftgVAQoNoesmrBUAidizTS08FQAYwM+P79wRAKqGW+MyiBECwHDh8fYcDQCNh/yCJfANA3hrJtcZ0A0D8vGGc3GUCQMmsuPnFxAFASH0IAJ4oAUC7kLmv3O4AQBGpaWhtzABAHoU+5gF/AEBT9dEiK0j/P0ZPqaXaV/0/0blGlZ34/D+xmoZldrr7PwincjdZ7fg/FerIj+vi+D+u2pxCwYf4P/QZQ3ijxvY/KqWkBj8C9j8Vl/BAUw/1PxWX8EBTD/U/BL+sa0qm9D/KKkZjQjH0P42Oa1ULHPQ/Z2DMbU3t8z8eqNr2xMjzP2BvAe3lT/M/Xa8xLA5K8z807x4q6DzzP08RyE1sGfM/vwaWv88U8z+GXLvKEBfzP4Mgiw2tH/M/6/kYI9NB8z8pJNa7t1LzPykk1ru3UvM/dVepK6Fn8z+IxuPbBHXzP+4g8vxyI/Q/kK9fp8wn9D9oTI3cN1H0PxV6kTr2OfU/mog4DeJr9T+xdALfkmD2P8OV+V4ObfY/gjeZDh5Y9z8NYTZq4W/3P9mMoiAZcfc/NgqWFW3W9z/4Zkxem9v3P58gDJi63Pc/Ea8yKm3K9z+ndi9q+7b3Pyxxw0sAWvc/yiEOCd5C9z9ZebQzZLz2PzHFHiJdwPU/EthI9eg59T/DDmSyWq3zP/pEWMMVMfM/uaJsGMET8j8YRTnTINHxP+U9NdkkD/A/gGkl9/bn7D+p3rEVVL3pP0s0OjsOOOQ/Er4hbFoX5D/TFzbWZd/iP93HNCjWOuA/smTSudR03j+bhsn3jR3cP/n66xtmQts/5quEptmB2z9L16eJsS3dP9NsZOGp5t4/fxzAN1Rf4D8oQsJL2gLhP3Y+gKYQOuE/iUzEzX/l4T9rnn8vlRPiP081KyoXS+I/fi911HPe4j85iKbfKhjjP9QGoBW0eeM/Xgprs/WH4z+ayfqtsqvjPyC2RTqzxuM/upmqh4Xa4z/iTtY+4AbkPyI2EeyrBeQ/QfsuXjP+4z8ERGPIOsvjP1h1dht0aeM/2XRGcu0S4z8gKnnpExLjPwJ0qzamEeM//fCOLSHG4j8zR0Ib0xXhP3rU1fYn9eA/1yDkjqMN3T+7KyCTtYPaP4KlGUW0+Nc/72Queszl0z/rGGynlE3RP+shmJA6HNA/kqOZuXq4zz9A1f7WxNHPPyQXVKEq9c8/jeZU2DwG0D+yRiHL/wHQP8S7wEFkbc8/AgDBQNV9zj+tOsfcTR7OPzXcP01BMcw/jRbR5hPgyT/zJCpEkrvJPxcjwZMCv8Y/oAoRvuo/wz+y1ngsRsi+Pw=="}, {"encoding": "base64", "path": ["_data", 5, "y", "buffer"], "data": "Q6V56wg+9D+ZR2QoPR/1PwbAVE26s/U/60yCZv4C9j/LldFwCIP2P0L0+iUS8PY/L7HNDuut9z9yt1bJ85H4P+Q2o6oeFvk/wPhHj/sX+j878Y5uf7T7P7p8UCwQ3fs/IWPJuSFJ/D9kGjsQ5H38Pyo/Z0xN0Pw/gVkJkb0b/T+PpV5H2hv9PzjB93icUP0/TlVQEaGF/T/gZG80zpX9P6R7LDQVKP4/a8Zt5Yo0/j8TcbpxxKH+P6n3BJGiAf8/eztPrN6D/z/khe1Dd+D/Pyyu31WM4v8/NX4QcxQUAEBWf5rsFWIAQJ5URIgfpABAF1Fm6V6mAECOHnUqc7YAQJHTw3E4wABALY8A9dLFAEAhnmnASMQAQApi5bm6wwBAvGXKP1HDAEAcWe19FawAQIy45ZozlwBAlFLm+5p+AEAd8+HTe3QAQLwH3CIxbgBA9GOJ31lfAEDeigGzKzAAQAoa2SzI4f8/ab6EVuDG/z8yNLQF/WX/P623nJ3MV/4/jeHmIShT/j8UDMzIayn+P/CXETCJNP0/hEH4hriq/D9NNPIbONH7P0008hs40fs/hAGkdNNY+z9FvB2CcbL6P7fpkF8Oj/o/kVriiCw5+j9a5DMKb+z5P59YBWCEd/g/jTyfewpc+D98WLgr+hb4P2smzkuW4fY/XzXuTRal9T+V5jQv7mT1P4EuJ+R/0/Q/CRzlBnyV8z86Zt8FsSPzPzpm3wWxI/M/NqeoL2io8j9pxX/hqGDyPzRCRLcLVu8/vJJe0iA67z/JMJl5gTruP6r8kLT4kuk/+uKpBcq56D8+2v1hEg7lP5/f53l44uQ/Jn6tWr3X4T84imM7nonhP5P1LKaUheE/6/lqHEH03z8bajFM6ZjfP6JLze1/Yd8/P56yFxW+3j85bTgtcpjePwo8cDItjN4/rF7eV9mX3j/KvY0wiwPfPwCfDvEnDOA/aN7Jtjle4D8/OGqcJGDhPxhCfnCUtOE/dZDhApB84j+3qRewkqziP7HB3pjiAOQ/+cTYKz5Z5T9o5wSJVt7mPyAN0kaqbuo/YTgoi+SJ6j9FmdP12KTrP0QvoAyE8u4/wU0F0nZu8D/O4mSNLUvyPx4uGXLZmfU/qg0VYU1y9j9rZjsH+BL5P2ZPlb9rwvo/1VE+F4ko/D/lJiis9PX8PwdbiYBKNP0/TUciogvf/T/LKMkSsQb+P1zDly6GMv4/qa5E2x6O/j9vpg3dS6X+P6r8qpHDsv4/ln0nrsew/j+LffbT1KT+P0GX/6NRkv4/+KEGdiZ8/j8el6yIC6j9P+Ws8K56jv0/JPRtCvJC/T9j2OnUek78P9eYezWpHPs/hFktKIk8+j9ALXL3czr6P3DjZ0VnOfo/w1m8m+yG+T+bcTqG1BD2P6tT23Y80/U/tnlDSOKA8T+Xq8xpyrXuPwgZE24IcOo/xezEdElf4z+4hY2ZxGvcP4WTSjcFwNU/mGmbcH0A0j9lpt6kgufQP5+TX4jwRNA/b80ZfbHMzz/QMLS0iHjPPwGyPPGSjM8/K4j5uF3Pzz81F3TCx97PPwE7Y+xVxc8/pwGak17Zzj899vKbqcTOP2WBqTT2lcw/eJ6803E3yT+gADIEu/HEPw=="}]}, "5bbfa6e8189541fca591c359c4d6b15f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "1dfa26cd080e4cfbb73991a9b692d167": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "5c20ec6263d24c6e991f31d01d087220"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 101-104

The prediction drift check can also calculate drift on the predicted classes rather than the probabilities. This is
the default behavior for multiclass tasks. To force this behavior for binary tasks, set the ``drift_mode`` parameter
to ``prediction``.

.. GENERATED FROM PYTHON SOURCE LINES 104-108

.. code-block:: default


    check = TrainTestPredictionDrift(drift_mode='prediction')
    result = check.run(train_dataset=train_ds, test_dataset=test_ds, model=model)
    result





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Train Test Prediction Drift</title>
        <link rel="icon" type="image/x-icon" href="https://deepchecks.com/wp-content/themes/deepchecks/assets/favicons/favicon.ico">
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"b9fe36cf31ab4a72ac783e1e63bee309": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_fb64fc23a8f84384b82f44cb3b1692c7", "IPY_MODEL_cbe3f0c95a9f47b08c11458f0cfbea06", "IPY_MODEL_96694e5221604e968abda720eb1e8691", "IPY_MODEL_3a6d3af1b1b540a18c5e93b61e78c6d9"], "layout": "IPY_MODEL_c628372a1c0e48c6aeb46aa1eafe8df2"}}, "fb64fc23a8f84384b82f44cb3b1692c7": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_33f2c201105b47a19cbc84fc3cbd7951", "style": "IPY_MODEL_605bbd13a91b426996becb8a6ad03035", "value": "<h4><b>Train Test Prediction Drift</b></h4>"}}, "33f2c201105b47a19cbc84fc3cbd7951": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "605bbd13a91b426996becb8a6ad03035": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "cbe3f0c95a9f47b08c11458f0cfbea06": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_73c03caa5a314ace983f27f13eb45530", "style": "IPY_MODEL_65f1a87dc60d499f86ad283df980ba0c", "value": "<p>    Calculate prediction drift between train dataset and test dataset, using statistical measures. <a href=\"https://docs.deepchecks.com/stable/checks_gallery/tabular/model_evaluation/plot_train_test_prediction_drift.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "73c03caa5a314ace983f27f13eb45530": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "65f1a87dc60d499f86ad283df980ba0c": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "96694e5221604e968abda720eb1e8691": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_0fbab066333b484bbf03a7d2d03e420f", "style": "IPY_MODEL_09aa590656b746b1ba4c1c3c7aba9849"}}, "0fbab066333b484bbf03a7d2d03e420f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "09aa590656b746b1ba4c1c3c7aba9849": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "3a6d3af1b1b540a18c5e93b61e78c6d9": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_8ab33ad71ff04d1a92b0094d986bd83e", "IPY_MODEL_811efe4f82034e438a1d4f4f82312b6a", "IPY_MODEL_0473c5d81a1a48b19ada78662dbf904a", "IPY_MODEL_57142b7850a64c4abcbf215a04cb5da7"], "layout": "IPY_MODEL_eeea8d7edd1c4cc0851a04c300983c59"}}, "8ab33ad71ff04d1a92b0094d986bd83e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6f7d16cc93d445e488899d1584eed569", "style": "IPY_MODEL_11b90d0b9b004c2f9095023ac3a9e5c4", "value": "<h5><b>Additional Outputs</b></h5>"}}, "6f7d16cc93d445e488899d1584eed569": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "11b90d0b9b004c2f9095023ac3a9e5c4": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "811efe4f82034e438a1d4f4f82312b6a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_d8167152443547fea29116489ab81288", "style": "IPY_MODEL_02a6f5eccbbe4f4bad270480fda2dcb4", "value": "<div><span>\n                The Drift score is a measure for the difference between two distributions, in this check - the test\n                and train distributions.<br> The check shows the drift score and distributions for the predicted\n                classes.\n            </span></div>"}}, "d8167152443547fea29116489ab81288": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "02a6f5eccbbe4f4bad270480fda2dcb4": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "0473c5d81a1a48b19ada78662dbf904a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_632980ca20cc40e382e0a9723eeb4e77", "style": "IPY_MODEL_b9f1cc65e829451687ef1b26cf9a1d9f", "value": "<div>For discrete distribution plots, showing the top 10 categories with largest difference between train and test.</div>"}}, "632980ca20cc40e382e0a9723eeb4e77": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b9f1cc65e829451687ef1b26cf9a1d9f": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "57142b7850a64c4abcbf215a04cb5da7": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"base": 0, "marker": {"color": "#01B8AA"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.1], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "59772dd2-480d-4591-8916-fe0186373af7"}, {"base": 0.1, "marker": {"color": "#F2C80F"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.1], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "0f191377-7ac6-44f9-8ea7-13c096ec49db"}, {"base": 0.2, "marker": {"color": "#FE9666"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.04391983167915309], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "59edf91c-3e3c-408f-b4b1-cfbe885d7675"}, {"marker": {"color": "#00008b"}, "name": "Train Dataset", "x": [" <=50K", " >50K"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [2]}, "yaxis": "y2", "type": "bar", "uid": "59941c55-52b6-4bbe-971b-46a1f05e991d"}, {"marker": {"color": "#69b3a2"}, "name": "Test Dataset", "x": [" <=50K", " >50K"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [2]}, "yaxis": "y2", "type": "bar", "uid": "d0c23be4-ec40-457b-a3fd-1ff202020027"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"font": {"size": 16}, "showarrow": false, "text": "Drift Score (Cramer's V)", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0000000000000002, "yanchor": "bottom", "yref": "paper"}, {"font": {"size": 16}, "showarrow": false, "text": "Distribution Plot", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 0.7200000000000001, "yanchor": "bottom", "yref": "paper"}], "bargroupgap": 0, "height": 400, "legend": {"title": {"text": "Legend"}, "y": 0.6, "yanchor": "top"}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "model predictions", "x": 0.5, "xanchor": "center"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "dtick": 0.05, "fixedrange": true, "gridcolor": "black", "linecolor": "black", "range": [0, 0.4], "showgrid": false}, "yaxis": {"anchor": "x", "autorange": true, "color": "black", "domain": [0.9200000000000002, 1.0], "fixedrange": true, "rangemode": "normal", "showgrid": false, "showline": false, "showticklabels": false, "zeroline": false}, "xaxis2": {"anchor": "y2", "domain": [0.0, 1.0], "range": [-3, 4], "type": "category"}, "yaxis2": {"anchor": "x2", "autorange": true, "domain": [0.0, 0.7200000000000001], "fixedrange": true, "rangemode": "normal", "title": {"text": "Frequency"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 3, "y", "buffer"], "data": "Ag97nBFA6z/3wxOOuf/CPw=="}, {"encoding": "base64", "path": ["_data", 4, "y", "buffer"], "data": "NJXHo9Bj5D+Y1XC4XjjXPw=="}]}, "eeea8d7edd1c4cc0851a04c300983c59": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "c628372a1c0e48c6aeb46aa1eafe8df2": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "b9fe36cf31ab4a72ac783e1e63bee309"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  6.977 seconds)


.. _sphx_glr_download_checks_gallery_tabular_model_evaluation_plot_train_test_prediction_drift.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_train_test_prediction_drift.py <plot_train_test_prediction_drift.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_train_test_prediction_drift.ipynb <plot_train_test_prediction_drift.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
