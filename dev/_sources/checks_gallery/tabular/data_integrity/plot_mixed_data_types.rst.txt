
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "checks_gallery/tabular/data_integrity/plot_mixed_data_types.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_checks_gallery_tabular_data_integrity_plot_mixed_data_types.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_checks_gallery_tabular_data_integrity_plot_mixed_data_types.py:


.. _plot_tabular_mixed_data_types:

Mixed Data Types
****************

This notebooks provides an overview for using and understanding the mixed data types check.

**Structure:**

* `What are Mixed Data Types? <#what-are-mixed-data-types>`__
* `Run the Check <#run-the-check>`__
* `Define a Condition <#define-a-condition>`__

What are Mixed Data Types?
==========================
Mixed data types is when a column contains both string values and numeric values (either as numeric type or
as string like "42.90"). This may indicate a problem in the data collection pipeline, or represent a
problem situation for the model's training.

This checks searches for columns with a mix of strings and numeric values and returns them and their respective ratios.

Run the Check
=============
We will run the check on the adult dataset which can be downloaded from the
`UCI machine learning repository <http://archive.ics.uci.edu/ml>`_ and is also available in
`deepchecks.tabular.datasets`, and introduce to it some data type mixing in order to show the check's result.

.. GENERATED FROM PYTHON SOURCE LINES 30-63

.. code-block:: default


    import pandas as pd
    import numpy as np
    from deepchecks.tabular.datasets.classification import adult

    # Prepare functions to insert mixed data types

    def insert_new_values_types(col: pd.Series, ratio_to_replace: float, values_list):
        col = col.to_numpy().astype(object)
        indices_to_replace = np.random.choice(range(len(col)), int(len(col) * ratio_to_replace), replace=False)
        new_values = np.random.choice(values_list, len(indices_to_replace))
        col[indices_to_replace] = new_values
        return col


    def insert_string_types(col: pd.Series, ratio_to_replace):
        return insert_new_values_types(col, ratio_to_replace, ['a', 'b', 'c'])


    def insert_numeric_string_types(col: pd.Series, ratio_to_replace):
        return insert_new_values_types(col, ratio_to_replace, ['1.0', '1', '10394.33'])


    def insert_number_types(col: pd.Series, ratio_to_replace):
        return insert_new_values_types(col, ratio_to_replace, [66, 99.9])


    # Load dataset and insert some data type mixing
    adult_df, _ = adult.load_data(as_train_test=True, data_format='Dataframe')
    adult_df['workclass'] = insert_numeric_string_types(adult_df['workclass'], ratio_to_replace=0.01)
    adult_df['education'] = insert_number_types(adult_df['education'], ratio_to_replace=0.1)
    adult_df['age'] = insert_string_types(adult_df['age'], ratio_to_replace=0.5)








.. GENERATED FROM PYTHON SOURCE LINES 64-73

.. code-block:: default


    from deepchecks.tabular import Dataset
    from deepchecks.tabular.checks import MixedDataTypes

    adult_dataset = Dataset(adult_df, cat_features=['workclass', 'education'])
    check = MixedDataTypes()
    result = check.run(adult_dataset)
    result






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Mixed Data Types</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
        <script>
            (!window.navigator.onLine ? alert('needs internet connection') : '');
        </script>
    </head>
    <body>
    
    <script src="" crossorigin="anonymous"></script>
    <script type="application/vnd.jupyter.widget-state+json">
    {
      "version_major": 2,
      "version_minor": 0,
      "state": {
        "2deae7cc170f40df9bf2476d15d85c14": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "rendered_html",
              "jp-RenderedHTMLCommon",
              "jp-RenderedHTML",
              "jp-OutputArea-output"
            ],
            "children": [
              "IPY_MODEL_1c7ec4805ca242a0b0f9b60bf805b050",
              "IPY_MODEL_04bb51cf5d08484bbecf82f1854c014f",
              "IPY_MODEL_68349416b325496fabba6ec4a9631b66",
              "IPY_MODEL_15c705e513fd440c90511cbe2d42e22a"
            ],
            "layout": "IPY_MODEL_f106894a7d194866bf5a74120499c0ed"
          }
        },
        "1c7ec4805ca242a0b0f9b60bf805b050": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_7f547de20b8d4c38a0e5e430a0d34dde",
            "style": "IPY_MODEL_88ad72e766764a13bf5cc6cfef222047",
            "value": "<h4><b>Mixed Data Types</b></h4>"
          }
        },
        "7f547de20b8d4c38a0e5e430a0d34dde": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "88ad72e766764a13bf5cc6cfef222047": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "04bb51cf5d08484bbecf82f1854c014f": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_306981701fe6493a9041bae5a5bc3e6e",
            "style": "IPY_MODEL_b34c98379f0a48baba5c8ebdf44ec2b3",
            "value": "<p>Detect columns which contain a mix of numerical and string values.</p>"
          }
        },
        "306981701fe6493a9041bae5a5bc3e6e": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "b34c98379f0a48baba5c8ebdf44ec2b3": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "68349416b325496fabba6ec4a9631b66": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_639f6e7704564135bb2e9ad5f5fb2adb",
            "style": "IPY_MODEL_14e794a76b0044eeb40c69a4a9ad9130"
          }
        },
        "639f6e7704564135bb2e9ad5f5fb2adb": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "14e794a76b0044eeb40c69a4a9ad9130": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "15c705e513fd440c90511cbe2d42e22a": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "children": [
              "IPY_MODEL_6b5267669d0d467daebc66d4bd26b4a2",
              "IPY_MODEL_bc5e43d8bf184f8d92f23bfd65158b12",
              "IPY_MODEL_70cbf2c4b3314b428a559eb4b82d5010"
            ],
            "layout": "IPY_MODEL_c5fda42db03d426a8ad6794028267e54"
          }
        },
        "6b5267669d0d467daebc66d4bd26b4a2": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_06b434866c3849cd9851b505dd3c56aa",
            "style": "IPY_MODEL_1eeb779b6ab0442fa607251466184d97",
            "value": "<h5><b>Additional Outputs</b></h5>"
          }
        },
        "06b434866c3849cd9851b505dd3c56aa": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "1eeb779b6ab0442fa607251466184d97": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "bc5e43d8bf184f8d92f23bfd65158b12": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_d371ed7dd69c41c89638a09553373722",
            "style": "IPY_MODEL_35a186876dc841da94efeb52aed14a74",
            "value": "<div>* showing only the top 10 columns, you can change it using n_top_columns param</div>"
          }
        },
        "d371ed7dd69c41c89638a09553373722": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "35a186876dc841da94efeb52aed14a74": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "70cbf2c4b3314b428a559eb4b82d5010": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_7d28f2c94f8941de97c48a036840233f",
            "style": "IPY_MODEL_08796312cc96452e8e8d4609ebc0ca9d",
            "value": "<style type=\"text/css\">\n#T_a0992_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a0992_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a0992_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a0992_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a0992_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_a0992_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >age</th>\n      <th class=\"col_heading level0 col1\" >workclass</th>\n      <th class=\"col_heading level0 col2\" >education</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_a0992_level0_row0\" class=\"row_heading level0 row0\" >Strings</th>\n      <td id=\"T_a0992_row0_col0\" class=\"data row0 col0\" >50%</td>\n      <td id=\"T_a0992_row0_col1\" class=\"data row0 col1\" >99%</td>\n      <td id=\"T_a0992_row0_col2\" class=\"data row0 col2\" >90%</td>\n    </tr>\n    <tr>\n      <th id=\"T_a0992_level0_row1\" class=\"row_heading level0 row1\" >Numbers</th>\n      <td id=\"T_a0992_row1_col0\" class=\"data row1 col0\" >50%</td>\n      <td id=\"T_a0992_row1_col1\" class=\"data row1 col1\" >1%</td>\n      <td id=\"T_a0992_row1_col2\" class=\"data row1 col2\" >10%</td>\n    </tr>\n    <tr>\n      <th id=\"T_a0992_level0_row2\" class=\"row_heading level0 row2\" >Strings examples</th>\n      <td id=\"T_a0992_row2_col0\" class=\"data row2 col0\" >['a', 'c', 'b']</td>\n      <td id=\"T_a0992_row2_col1\" class=\"data row2 col1\" >[' Private', ' State-gov', ' Self-emp-not-i...']</td>\n      <td id=\"T_a0992_row2_col2\" class=\"data row2 col2\" >[' 11th', ' HS-grad', ' Bachelors']</td>\n    </tr>\n    <tr>\n      <th id=\"T_a0992_level0_row3\" class=\"row_heading level0 row3\" >Numbers examples</th>\n      <td id=\"T_a0992_row3_col0\" class=\"data row3 col0\" >[50, 52, 39]</td>\n      <td id=\"T_a0992_row3_col1\" class=\"data row3 col1\" >[1, 1, 10,394.33]</td>\n      <td id=\"T_a0992_row3_col2\" class=\"data row3 col2\" >[66, 99.9]</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "7d28f2c94f8941de97c48a036840233f": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "08796312cc96452e8e8d4609ebc0ca9d": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "c5fda42db03d426a8ad6794028267e54": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "f106894a7d194866bf5a74120499c0ed": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        }
      }
    }
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "2deae7cc170f40df9bf2476d15d85c14"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 74-81

Define a Condition
==================
We can define a condition that enforces the ratio of the "rare type" (the less common type, either numeric or string)
is not in a given range. The range represents the dangerous zone, when the ratio is lower than the lower bound, then
it's presumably a contamination but a negligible one, and when the ratio is higher than the upper bound, then it's
presumably supposed to contain both numbers and string values. So when the ratio is inside the range there is a real
chance that the rarer data type may represent a problem to model training and inference.

.. GENERATED FROM PYTHON SOURCE LINES 81-85

.. code-block:: default


    check = MixedDataTypes().add_condition_rare_type_ratio_not_in_range((0.01, 0.2))
    result = check.run(adult_dataset)
    result.show(show_additional_outputs=False)





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Mixed Data Types</title>
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
        <script>
            (!window.navigator.onLine ? alert('needs internet connection') : '');
        </script>
    </head>
    <body>
    
    <script src="" crossorigin="anonymous"></script>
    <script type="application/vnd.jupyter.widget-state+json">
    {
      "version_major": 2,
      "version_minor": 0,
      "state": {
        "729b799c1d2a48fc946af01b2aba0c54": {
          "model_name": "VBoxModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [
              "rendered_html",
              "jp-RenderedHTMLCommon",
              "jp-RenderedHTML",
              "jp-OutputArea-output"
            ],
            "children": [
              "IPY_MODEL_0ab344da9af943e5babfae62d3fb70b2",
              "IPY_MODEL_fc02392916d943d4899b0f0b6dd8de19",
              "IPY_MODEL_54f32c83a4f945a5b70a58a3692ae663"
            ],
            "layout": "IPY_MODEL_3b5bb23c60c0431fa439054c8d02cc27"
          }
        },
        "0ab344da9af943e5babfae62d3fb70b2": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_483af81408eb42b2a8910e74d1964d0b",
            "style": "IPY_MODEL_c8d7e09f06ab4f209aa7de5599a7c9ca",
            "value": "<h4><b>Mixed Data Types</b></h4>"
          }
        },
        "483af81408eb42b2a8910e74d1964d0b": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "c8d7e09f06ab4f209aa7de5599a7c9ca": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "fc02392916d943d4899b0f0b6dd8de19": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_d817cab2b3314a63801ca04afafc52d9",
            "style": "IPY_MODEL_fa9c1f1b37914239b3cc84774d621b35",
            "value": "<p>Detect columns which contain a mix of numerical and string values.</p>"
          }
        },
        "d817cab2b3314a63801ca04afafc52d9": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "fa9c1f1b37914239b3cc84774d621b35": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "54f32c83a4f945a5b70a58a3692ae663": {
          "model_name": "HTMLModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "layout": "IPY_MODEL_06212ddbdee44521aa6ec379694c74d9",
            "style": "IPY_MODEL_bc5052f2e3ad44e0a1706e897ea24570",
            "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_2bcc7_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_2bcc7_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_2bcc7_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_2bcc7_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_2bcc7_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_2bcc7_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_2bcc7_row0_col0\" class=\"data row0 col0\" ><div style=\"color: orange;text-align: center;font-weight:bold\">!</div></td>\n      <td id=\"T_2bcc7_row0_col1\" class=\"data row0 col1\" >Rare data types in column are either more than 20% or less than 1% of the data</td>\n      <td id=\"T_2bcc7_row0_col2\" class=\"data row0 col2\" >Found 1 out of 15 columns with non-negligible quantities of samples with a different data type from the majority of samples: ['education']</td>\n    </tr>\n  </tbody>\n</table>\n"
          }
        },
        "06212ddbdee44521aa6ec379694c74d9": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        },
        "bc5052f2e3ad44e0a1706e897ea24570": {
          "model_name": "DescriptionStyleModel",
          "model_module": "@jupyter-widgets/controls",
          "model_module_version": "1.5.0",
          "state": {}
        },
        "3b5bb23c60c0431fa439054c8d02cc27": {
          "model_name": "LayoutModel",
          "model_module": "@jupyter-widgets/base",
          "model_module_version": "1.2.0",
          "state": {}
        }
      }
    }
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "729b799c1d2a48fc946af01b2aba0c54"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  5.127 seconds)


.. _sphx_glr_download_checks_gallery_tabular_data_integrity_plot_mixed_data_types.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_mixed_data_types.py <plot_mixed_data_types.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_mixed_data_types.ipynb <plot_mixed_data_types.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
