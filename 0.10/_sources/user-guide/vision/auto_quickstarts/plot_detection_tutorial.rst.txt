
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "user-guide/vision/auto_quickstarts/plot_detection_tutorial.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_user-guide_vision_auto_quickstarts_plot_detection_tutorial.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_user-guide_vision_auto_quickstarts_plot_detection_tutorial.py:


.. _vision_detection_tutorial:

==========================
Object Detection Tutorial
==========================

In this tutorial, you will learn how to validate your **object detection model** using deepchecks test suites.
You can read more about the different checks and suites for computer vision use cases at the
:doc:`examples section  </checks_gallery/vision/index>`

If you just want to see the output of this tutorial, jump to the :ref:`observing the results <vision_segmentation_tutorial__observing_the_result>` section.

An object detection tasks usually consist of two parts:

- Object Localization, where the model predicts the location of an object in the image,
- Object Classification, where the model predicts the class of the detected object.

The common output of an object detection model is a list of bounding boxes around the objects, and
their classes.

.. code-block:: bash

    # Before we start, if you don't have deepchecks vision package installed yet, run:
    import sys
    !{sys.executable} -m pip install "deepchecks[vision]" --quiet --upgrade # --user

    # or install using pip from your python environment

.. GENERATED FROM PYTHON SOURCE LINES 32-34

Defining the data and model
===========================

.. GENERATED FROM PYTHON SOURCE LINES 34-56

.. code-block:: default


    # Importing the required packages
    import os
    import urllib.request
    import xml.etree.ElementTree as ET
    import zipfile
    from functools import partial

    import albumentations as A
    import matplotlib.pyplot as plt
    import numpy as np
    import torch
    import torchvision
    from albumentations.pytorch import ToTensorV2
    from PIL import Image
    from torch import nn
    from torch.utils.data import DataLoader, Dataset
    from torchvision.models.detection import _utils as det_utils
    from torchvision.models.detection.ssdlite import SSDLiteClassificationHead

    from deepchecks.vision.detection_data import DetectionData








.. GENERATED FROM PYTHON SOURCE LINES 57-68

Load Data
~~~~~~~~~
The model in this tutorial is used to detect tomatoes in images. The model is trained on a dataset consisted of
895 images of tomatoes, with bounding box annotations provided in PASCAL VOC format.
All annotations belong to a single class: tomato.

.. note::
    The dataset is available at the following link:
    https://www.kaggle.com/andrewmvd/tomato-detection

    We thank the authors of the dataset for providing the dataset.

.. GENERATED FROM PYTHON SOURCE LINES 68-141

.. code-block:: default


    url = 'https://figshare.com/ndownloader/files/34488599'
    urllib.request.urlretrieve(url, 'tomato-detection.zip')

    with zipfile.ZipFile('tomato-detection.zip', 'r') as zip_ref:
        zip_ref.extractall('.')

    class TomatoDataset(Dataset):
        def __init__(self, root, transforms):
            self.root = root
            self.transforms = transforms

            self.images = list(sorted(os.listdir(os.path.join(root, 'images'))))
            self.annotations = list(sorted(os.listdir(os.path.join(root, 'annotations'))))

        def __getitem__(self, idx):
            img_path = os.path.join(self.root, "images", self.images[idx])
            ann_path = os.path.join(self.root, "annotations", self.annotations[idx])
            img = Image.open(img_path).convert("RGB")
            bboxes = []
            labels = []
            with open(ann_path, 'r') as f:
                tree = ET.parse(f)
                root = tree.getroot()
                size = root.find('size')
                w = int(size.find('width').text)
                h = int(size.find('height').text)

                for obj in root.iter('object'):
                    difficult = obj.find('difficult').text
                    if int(difficult) == 1:
                        continue
                    cls_id = 1
                    xmlbox = obj.find('bndbox')
                    b = [float(xmlbox.find('xmin').text), float(xmlbox.find('ymin').text), float(xmlbox.find('xmax').text),
                            float(xmlbox.find('ymax').text)]
                    bboxes.append(b)
                    labels.append(cls_id)

            bboxes = torch.as_tensor(np.array(bboxes), dtype=torch.float32)
            labels = torch.as_tensor(np.array(labels), dtype=torch.int64)

            if self.transforms is not None:
                res = self.transforms(image=np.array(img), bboxes=bboxes, class_labels=labels)

            target = {
                'boxes': [torch.Tensor(x) for x in res['bboxes']],
                'labels': res['class_labels']
            }

            img = res['image']

            return img, target

        def __len__(self):
            return len(self.images)

    data_transforms = A.Compose([
        A.Resize(height=256, width=256),
        A.CenterCrop(height=224, width=224),
        A.Normalize(mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225)),
        ToTensorV2(),
    ], bbox_params=A.BboxParams(format='pascal_voc', label_fields=['class_labels']))

    dataset = TomatoDataset(root=os.path.join(os.path.curdir, 'tomato-detection/data'),
                            transforms=data_transforms)
    train_set, test_set = torch.utils.data.random_split(dataset,
                                                        [int(len(dataset)*0.9), len(dataset)-int(len(dataset)*0.9)],
                                                        generator=torch.Generator().manual_seed(42))
    test_set.transforms = A.Compose([ToTensorV2()])
    train_loader = DataLoader(train_set, batch_size=64, collate_fn=(lambda batch: tuple(zip(*batch))))
    test_loader = DataLoader(test_set, batch_size=64, collate_fn=(lambda batch: tuple(zip(*batch))))








.. GENERATED FROM PYTHON SOURCE LINES 142-145

Visualize a Few Images
~~~~~~~~~~~~~~~~~~~~~~
Let's visualize a few training images so as to understand the data augmentation.

.. GENERATED FROM PYTHON SOURCE LINES 145-180

.. code-block:: default


    def prepare(inp):
        """Imshow for Tensor."""
        inp = inp.numpy().transpose((1, 2, 0))
        mean = np.array([0.485, 0.456, 0.406])
        std = np.array([0.229, 0.224, 0.225])
        inp = std * inp + mean
        inp = np.clip(inp, 0, 1) * 255
        inp = inp.transpose((2,0,1))
        return torch.tensor(inp, dtype=torch.uint8)

    import torchvision.transforms.functional as F


    def show(imgs):
        if not isinstance(imgs, list):
            imgs = [imgs]
        fig, axs = plt.subplots(ncols=len(imgs), squeeze=False, figsize=(20,20))
        for i, img in enumerate(imgs):
            img = img.detach()
            img = F.to_pil_image(img)
            axs[0, i].imshow(np.asarray(img))
            axs[0, i].set(xticklabels=[], yticklabels=[], xticks=[], yticks=[])

    from torchvision.utils import draw_bounding_boxes

    data = next(iter(train_loader))
    inp, targets = data[0][:4], data[1][:4]


    result = [draw_bounding_boxes(prepare(inp[i]), torch.stack(targets[i]['boxes']),
                                  colors=['yellow'] * torch.stack(targets[i]['boxes']).shape[0], width=5)
              for i in range(len(targets))]
    show(result)




.. image-sg:: /user-guide/vision/auto_quickstarts/images/sphx_glr_plot_detection_tutorial_001.png
   :alt: plot detection tutorial
   :srcset: /user-guide/vision/auto_quickstarts/images/sphx_glr_plot_detection_tutorial_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 181-192

.. image :: /_static/images/tutorials/tomatoes.png
    :alt: Tomatoes with bbox

Downloading a Pre-trained Model
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In this tutorial, we will download a pre-trained SSDlite model and a MobileNetV3 Large backbone
from the official PyTorch repository. For more details, please refer to the
`official documentation <https://pytorch.org/vision/stable/generated/torchvision.models.detection.ssdlite320_mobilenet_v3_large.html#torchvision.models.detection.ssdlite320_mobilenet_v3_large>`_.

After downloading the model, we will fine-tune it for our particular classes. We will do it by replacing the pre-trained
head with a new one that matches our needs.

.. GENERATED FROM PYTHON SOURCE LINES 192-204

.. code-block:: default


    device = torch.device("cuda") if torch.cuda.is_available() else torch.device("cpu")

    model = torchvision.models.detection.ssdlite320_mobilenet_v3_large(pretrained=True)

    in_channels = det_utils.retrieve_out_channels(model.backbone, (320, 320))
    num_anchors = model.anchor_generator.num_anchors_per_location()
    norm_layer = partial(nn.BatchNorm2d, eps=0.001, momentum=0.03)

    model.head.classification_head = SSDLiteClassificationHead(in_channels, num_anchors, 2, norm_layer)
    model.to(device)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Downloading: "https://download.pytorch.org/models/ssdlite320_mobilenet_v3_large_coco-a79551df.pth" to /home/runner/.cache/torch/hub/checkpoints/ssdlite320_mobilenet_v3_large_coco-a79551df.pth
      0%|          | 0.00/13.4M [00:00<?, ?B/s]      0%|          | 56.0k/13.4M [00:00<00:29, 476kB/s]      2%|2         | 312k/13.4M [00:00<00:09, 1.47MB/s]      9%|9         | 1.27M/13.4M [00:00<00:02, 4.84MB/s]     38%|###8      | 5.16M/13.4M [00:00<00:00, 16.6MB/s]     91%|######### | 12.2M/13.4M [00:00<00:00, 35.1MB/s]    100%|##########| 13.4M/13.4M [00:00<00:00, 22.7MB/s]

    SSD(
      (backbone): SSDLiteFeatureExtractorMobileNet(
        (features): Sequential(
          (0): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (1): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): Hardswish()
            )
            (1): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=16, bias=False)
                  (1): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (1): ConvNormActivation(
                  (0): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(16, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (2): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(16, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (1): ConvNormActivation(
                  (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
                  (1): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (2): ConvNormActivation(
                  (0): Conv2d(64, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(24, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (3): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(24, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(72, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (1): ConvNormActivation(
                  (0): Conv2d(72, 72, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=72, bias=False)
                  (1): BatchNorm2d(72, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (2): ConvNormActivation(
                  (0): Conv2d(72, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(24, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (4): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(24, 72, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(72, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (1): ConvNormActivation(
                  (0): Conv2d(72, 72, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=72, bias=False)
                  (1): BatchNorm2d(72, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (2): SqueezeExcitation(
                  (avgpool): AdaptiveAvgPool2d(output_size=1)
                  (fc1): Conv2d(72, 24, kernel_size=(1, 1), stride=(1, 1))
                  (fc2): Conv2d(24, 72, kernel_size=(1, 1), stride=(1, 1))
                  (activation): ReLU()
                  (scale_activation): Hardsigmoid()
                )
                (3): ConvNormActivation(
                  (0): Conv2d(72, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(40, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (5): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(40, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(120, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (1): ConvNormActivation(
                  (0): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
                  (1): BatchNorm2d(120, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (2): SqueezeExcitation(
                  (avgpool): AdaptiveAvgPool2d(output_size=1)
                  (fc1): Conv2d(120, 32, kernel_size=(1, 1), stride=(1, 1))
                  (fc2): Conv2d(32, 120, kernel_size=(1, 1), stride=(1, 1))
                  (activation): ReLU()
                  (scale_activation): Hardsigmoid()
                )
                (3): ConvNormActivation(
                  (0): Conv2d(120, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(40, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (6): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(40, 120, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(120, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (1): ConvNormActivation(
                  (0): Conv2d(120, 120, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=120, bias=False)
                  (1): BatchNorm2d(120, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (2): SqueezeExcitation(
                  (avgpool): AdaptiveAvgPool2d(output_size=1)
                  (fc1): Conv2d(120, 32, kernel_size=(1, 1), stride=(1, 1))
                  (fc2): Conv2d(32, 120, kernel_size=(1, 1), stride=(1, 1))
                  (activation): ReLU()
                  (scale_activation): Hardsigmoid()
                )
                (3): ConvNormActivation(
                  (0): Conv2d(120, 40, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(40, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (7): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(40, 240, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(240, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (1): ConvNormActivation(
                  (0): Conv2d(240, 240, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=240, bias=False)
                  (1): BatchNorm2d(240, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (2): ConvNormActivation(
                  (0): Conv2d(240, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (8): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(80, 200, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(200, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (1): ConvNormActivation(
                  (0): Conv2d(200, 200, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=200, bias=False)
                  (1): BatchNorm2d(200, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (2): ConvNormActivation(
                  (0): Conv2d(200, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (9): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(80, 184, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(184, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (1): ConvNormActivation(
                  (0): Conv2d(184, 184, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=184, bias=False)
                  (1): BatchNorm2d(184, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (2): ConvNormActivation(
                  (0): Conv2d(184, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (10): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(80, 184, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(184, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (1): ConvNormActivation(
                  (0): Conv2d(184, 184, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=184, bias=False)
                  (1): BatchNorm2d(184, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (2): ConvNormActivation(
                  (0): Conv2d(184, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (11): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (1): ConvNormActivation(
                  (0): Conv2d(480, 480, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=480, bias=False)
                  (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (2): SqueezeExcitation(
                  (avgpool): AdaptiveAvgPool2d(output_size=1)
                  (fc1): Conv2d(480, 120, kernel_size=(1, 1), stride=(1, 1))
                  (fc2): Conv2d(120, 480, kernel_size=(1, 1), stride=(1, 1))
                  (activation): ReLU()
                  (scale_activation): Hardsigmoid()
                )
                (3): ConvNormActivation(
                  (0): Conv2d(480, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(112, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (12): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(112, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(672, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (1): ConvNormActivation(
                  (0): Conv2d(672, 672, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=672, bias=False)
                  (1): BatchNorm2d(672, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (2): SqueezeExcitation(
                  (avgpool): AdaptiveAvgPool2d(output_size=1)
                  (fc1): Conv2d(672, 168, kernel_size=(1, 1), stride=(1, 1))
                  (fc2): Conv2d(168, 672, kernel_size=(1, 1), stride=(1, 1))
                  (activation): ReLU()
                  (scale_activation): Hardsigmoid()
                )
                (3): ConvNormActivation(
                  (0): Conv2d(672, 112, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(112, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (13): ConvNormActivation(
              (0): Conv2d(112, 672, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(672, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): Hardswish()
            )
          )
          (1): Sequential(
            (0): Sequential(
              (1): ConvNormActivation(
                (0): Conv2d(672, 672, kernel_size=(5, 5), stride=(2, 2), padding=(2, 2), groups=672, bias=False)
                (1): BatchNorm2d(672, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): Hardswish()
              )
              (2): SqueezeExcitation(
                (avgpool): AdaptiveAvgPool2d(output_size=1)
                (fc1): Conv2d(672, 168, kernel_size=(1, 1), stride=(1, 1))
                (fc2): Conv2d(168, 672, kernel_size=(1, 1), stride=(1, 1))
                (activation): ReLU()
                (scale_activation): Hardsigmoid()
              )
              (3): ConvNormActivation(
                (0): Conv2d(672, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (1): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              )
            )
            (1): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (1): ConvNormActivation(
                  (0): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=480, bias=False)
                  (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (2): SqueezeExcitation(
                  (avgpool): AdaptiveAvgPool2d(output_size=1)
                  (fc1): Conv2d(480, 120, kernel_size=(1, 1), stride=(1, 1))
                  (fc2): Conv2d(120, 480, kernel_size=(1, 1), stride=(1, 1))
                  (activation): ReLU()
                  (scale_activation): Hardsigmoid()
                )
                (3): ConvNormActivation(
                  (0): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (2): InvertedResidual(
              (block): Sequential(
                (0): ConvNormActivation(
                  (0): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (1): ConvNormActivation(
                  (0): Conv2d(480, 480, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=480, bias=False)
                  (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                  (2): Hardswish()
                )
                (2): SqueezeExcitation(
                  (avgpool): AdaptiveAvgPool2d(output_size=1)
                  (fc1): Conv2d(480, 120, kernel_size=(1, 1), stride=(1, 1))
                  (fc2): Conv2d(120, 480, kernel_size=(1, 1), stride=(1, 1))
                  (activation): ReLU()
                  (scale_activation): Hardsigmoid()
                )
                (3): ConvNormActivation(
                  (0): Conv2d(480, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
                  (1): BatchNorm2d(80, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                )
              )
            )
            (3): ConvNormActivation(
              (0): Conv2d(80, 480, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): Hardswish()
            )
          )
        )
        (extra): ModuleList(
          (0): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(480, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)
              (1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
            (2): ConvNormActivation(
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
          )
          (1): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (1): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
            (2): ConvNormActivation(
              (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
          )
          (2): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (1): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
            (2): ConvNormActivation(
              (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
          )
          (3): Sequential(
            (0): ConvNormActivation(
              (0): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
            (1): ConvNormActivation(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=64, bias=False)
              (1): BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
            (2): ConvNormActivation(
              (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
              (2): ReLU6(inplace=True)
            )
          )
        )
      )
      (anchor_generator): DefaultBoxGenerator(aspect_ratios=[[2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3]], clip=True, scales=[0.2, 0.35, 0.5, 0.65, 0.8, 0.95, 1.0], steps=None)
      (head): SSDLiteHead(
        (classification_head): SSDLiteClassificationHead(
          (module_list): ModuleList(
            (0): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(672, 672, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=672, bias=False)
                (1): BatchNorm2d(672, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(672, 12, kernel_size=(1, 1), stride=(1, 1))
            )
            (1): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(480, 480, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=480, bias=False)
                (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(480, 12, kernel_size=(1, 1), stride=(1, 1))
            )
            (2): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512, bias=False)
                (1): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(512, 12, kernel_size=(1, 1), stride=(1, 1))
            )
            (3): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
                (1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
            )
            (4): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
                (1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
            )
            (5): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                (1): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(128, 12, kernel_size=(1, 1), stride=(1, 1))
            )
          )
        )
        (regression_head): SSDLiteRegressionHead(
          (module_list): ModuleList(
            (0): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(672, 672, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=672, bias=False)
                (1): BatchNorm2d(672, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(672, 24, kernel_size=(1, 1), stride=(1, 1))
            )
            (1): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(480, 480, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=480, bias=False)
                (1): BatchNorm2d(480, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(480, 24, kernel_size=(1, 1), stride=(1, 1))
            )
            (2): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512, bias=False)
                (1): BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(512, 24, kernel_size=(1, 1), stride=(1, 1))
            )
            (3): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
                (1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(256, 24, kernel_size=(1, 1), stride=(1, 1))
            )
            (4): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256, bias=False)
                (1): BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(256, 24, kernel_size=(1, 1), stride=(1, 1))
            )
            (5): Sequential(
              (0): ConvNormActivation(
                (0): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128, bias=False)
                (1): BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True)
                (2): ReLU6(inplace=True)
              )
              (1): Conv2d(128, 24, kernel_size=(1, 1), stride=(1, 1))
            )
          )
        )
      )
      (transform): GeneralizedRCNNTransform(
          Normalize(mean=[0.5, 0.5, 0.5], std=[0.5, 0.5, 0.5])
          Resize(min_size=(320,), max_size=320, mode='bilinear')
      )
    )



.. GENERATED FROM PYTHON SOURCE LINES 205-208

Loading Pre-trained Weights
~~~~~~~~~~~~~~~~~~~~~~~~~~~
For this tutorial we will not include the training code itself, but will download and load pre-trained weights.

.. GENERATED FROM PYTHON SOURCE LINES 208-212

.. code-block:: default


    model.load_state_dict(torch.load('tomato-detection/ssd_model.pth'))
    _ = model.eval()








.. GENERATED FROM PYTHON SOURCE LINES 213-221

Validating the Model With Deepchecks
=====================================
Now, after we have the training data, test data and the model, we can validate the model with
deepchecks test suites.

Visualize the Data Loader and the Model Outputs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
First we'll make sure we are familiar with the data loader and the model outputs.

.. GENERATED FROM PYTHON SOURCE LINES 221-233

.. code-block:: default


    batch = next(iter(train_loader))

    print("Batch type is: ", type(batch))
    print("First element is: ", type(batch[0]), "with len of ", len(batch[0]))
    print("Example output of an image shape from the dataloader ", batch[0][0].shape)
    print("Image values", batch[0][0])
    print("-"*80)

    print("Second element is: ", type(batch[1]), "with len of ", len(batch[1]))
    print("Example output of a label from the dataloader ", batch[1][0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Batch type is:  <class 'tuple'>
    First element is:  <class 'tuple'> with len of  64
    Example output of an image shape from the dataloader  torch.Size([3, 224, 224])
    Image values tensor([[[-1.79253, -1.82678, -1.82678,  ...,  1.39267,  1.34130,  1.32417],
             [-1.72403, -1.79253, -1.80966,  ...,  1.35842,  1.32417,  1.34130],
             [-1.75828, -1.74116, -1.70691,  ...,  1.32417,  1.34130,  1.35842],
             ...,
             [-1.84391, -1.82678, -1.75828,  ...,  0.62206,  0.19394, -0.35405],
             [-1.80966, -1.79253, -1.72403,  ...,  0.81043,  0.72481,  0.34806],
             [-1.79253, -1.84391, -1.75828,  ...,  0.81043,  0.82755,  0.69056]],

            [[-1.38796, -1.45798, -1.45798,  ...,  1.51821,  1.46569,  1.46569],
             [-1.38796, -1.47549, -1.52801,  ...,  1.50070,  1.46569,  1.48319],
             [-1.42297, -1.47549, -1.49300,  ...,  1.46569,  1.50070,  1.50070],
             ...,
             [-1.70308, -1.68557, -1.61555,  ...,  0.67787,  0.22269, -0.33753],
             [-1.68557, -1.66807, -1.58053,  ...,  0.87045,  0.74790,  0.38025],
             [-1.68557, -1.70308, -1.61555,  ...,  0.87045,  0.85294,  0.71289]],

            [[-1.57786, -1.61272, -1.61272,  ...,  1.66397,  1.61168,  1.59425],
             [-1.54301, -1.59529, -1.64758,  ...,  1.62911,  1.59425,  1.59425],
             [-1.59529, -1.59529, -1.61272,  ...,  1.59425,  1.61168,  1.62911],
             ...,
             [-1.63015, -1.59529, -1.52558,  ...,  0.46135,  0.02562, -0.53211],
             [-1.59529, -1.54301, -1.47329,  ...,  0.72279,  0.61821,  0.21734],
             [-1.59529, -1.59529, -1.50815,  ...,  0.72279,  0.72279,  0.56593]]])
    --------------------------------------------------------------------------------
    Second element is:  <class 'tuple'> with len of  64
    Example output of a label from the dataloader  {'boxes': [tensor([  0.00000,  75.13600,  39.68000, 165.75999]), tensor([ 0.00000,  0.00000, 94.08000, 93.56800])], 'labels': [tensor(1), tensor(1)]}




.. GENERATED FROM PYTHON SOURCE LINES 234-247

Implementing the DetectionData class
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The checks in the package validate the model & data by calculating various quantities over the data, labels and
predictions. In order to do that, those must be in a pre-defined format, according to the task type.
The first step is to implement a class that enables deepchecks to interact with your model and data and transform
them to this pre-defined format, which is set for each task type.
In this tutorial, we will implement the object detection task type by implementing a class that inherits from the
:class:`deepchecks.vision.detection_data.DetectionData` class.

The DetectionData class contains additional data and general methods intended for easy access to relevant metadata
for object detection ML models validation.
To learn more about the expected format please visit the API reference for the
:class:`deepchecks.vision.detection_data.DetectionData` class.

.. GENERATED FROM PYTHON SOURCE LINES 247-320

.. code-block:: default


    from deepchecks.vision.detection_data import DetectionData


    class TomatoData(DetectionData):

        def __init__(self, *args, **kwargs):
            super().__init__(*args, **kwargs)

        def batch_to_images(self, batch):
            """
            Convert a batch of data to images in the expected format. The expected format is an iterable of cv2 images,
            where each image is a numpy array of shape (height, width, channels). The numbers in the array should be in the
            range [0, 255] in a uint8 format.
            """
            inp = torch.stack(list(batch[0])).cpu().detach().numpy().transpose((0, 2, 3, 1))
            mean = [0.485, 0.456, 0.406]
            std = [0.229, 0.224, 0.225]
            # Un-normalize the images
            inp = std * inp + mean
            inp = np.clip(inp, 0, 1)
            return inp * 255

        def batch_to_labels(self, batch):
            """
            Convert a batch of data to labels in the expected format. The expected format is a list of tensors of length N,
            where N is the number of samples. Each tensor element is in a shape of [B, 5], where B is the number of bboxes
            in the image, and each bounding box is in the structure of [class_id, x, y, w, h].
            """
            tensor_annotations = batch[1]
            label = []
            for annotation in tensor_annotations:
                if len(annotation["boxes"]):
                    bbox = torch.stack(annotation["boxes"])
                    # Convert the Pascal VOC xyxy format to xywh format
                    bbox[:, 2:] = bbox[:, 2:] - bbox[:, :2]
                    # The label shape is [class_id, x, y, w, h]
                    label.append(
                        torch.concat([torch.stack(annotation["labels"]).reshape((-1, 1)), bbox], dim=1)
                    )
                else:
                    # If it's an empty image, we need to add an empty label
                    label.append(torch.tensor([]))
            return label

        def infer_on_batch(self, batch, model, device):
            """
            Returns the predictions for a batch of data. The expected format is a list of tensors of shape length N, where N
            is the number of samples. Each tensor element is in a shape of [B, 6], where B is the number of bboxes in the
            predictions, and each bounding box is in the structure of [x, y, w, h, score, class_id].
            """
            nm_thrs = 0.2
            score_thrs = 0.7
            imgs = list(img.to(device) for img in batch[0])
            # Getting the predictions of the model on the batch
            with torch.no_grad():
                preds = model(imgs)
            processed_pred = []
            for pred in preds:
                # Performoing non-maximum suppression on the detections
                keep_boxes = torchvision.ops.nms(pred['boxes'], pred['scores'], nm_thrs)
                score_filter = pred['scores'][keep_boxes] > score_thrs

                # get the filtered result
                test_boxes = pred['boxes'][keep_boxes][score_filter].reshape((-1, 4))
                test_boxes[:, 2:] = test_boxes[:, 2:] - test_boxes[:, :2]  # xyxy to xywh
                test_labels = pred['labels'][keep_boxes][score_filter]
                test_scores = pred['scores'][keep_boxes][score_filter]

                processed_pred.append(
                    torch.concat([test_boxes, test_scores.reshape((-1, 1)), test_labels.reshape((-1, 1))], dim=1))
            return processed_pred








.. GENERATED FROM PYTHON SOURCE LINES 321-322

After defining the task class, we can validate it by running the following code:

.. GENERATED FROM PYTHON SOURCE LINES 322-336

.. code-block:: default


    # We have a single label here, which is the tomato class
    # The label_map is a dictionary that maps the class id to the class name, for display purposes.
    LABEL_MAP = {
        1: 'Tomato'
    }
    training_data = TomatoData(data_loader=train_loader, label_map=LABEL_MAP)
    test_data = TomatoData(data_loader=test_loader, label_map=LABEL_MAP)

    training_data.validate_format(model, device=device)
    test_data.validate_format(model, device=device)

    # And observe the output:





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Deepchecks will try to validate the extractors given...
    torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
    Structure validation
    --------------------
    Label formatter: Pass!
    Prediction formatter: Pass!
    Image formatter: Pass!

    Content validation
    ------------------
    For validating the content within the structure you have to manually observe the classes, image, label and prediction.
    Examples of classes observed in the batch's labels: [[1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1], [1]]
    Visual images & label & prediction: should open in a new window
    *******************************************************************************
    This machine does not support GUI
    The formatted image was saved in:
    /home/runner/work/deepchecks/deepchecks/docs/source/user-guide/vision/quickstarts/deepchecks_formatted_image (4).jpg
    Visual examples of an image with prediction and label data. Label is red, prediction is blue, and deepchecks loves you.
    validate_extractors can be set to skip the image saving or change the save path
    *******************************************************************************
    Deepchecks will try to validate the extractors given...
    Structure validation
    --------------------
    Label formatter: Pass!
    Prediction formatter: Pass!
    Image formatter: Pass!

    Content validation
    ------------------
    For validating the content within the structure you have to manually observe the classes, image, label and prediction.
    Examples of classes observed in the batch's labels: [[1, 1, 1, 1], [1], [1, 1, 1, 1, 1, 1, 1], [1], [1]]
    Visual images & label & prediction: should open in a new window
    *******************************************************************************
    This machine does not support GUI
    The formatted image was saved in:
    /home/runner/work/deepchecks/deepchecks/docs/source/user-guide/vision/quickstarts/deepchecks_formatted_image (5).jpg
    Visual examples of an image with prediction and label data. Label is red, prediction is blue, and deepchecks loves you.
    validate_extractors can be set to skip the image saving or change the save path
    *******************************************************************************

    True



.. GENERATED FROM PYTHON SOURCE LINES 337-341

Running Deepchecks' suite on our data and model!
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Now that we have defined the task class, we can validate the model with the deepchecks' model evaluation suite.
This can be done with this simple few lines of code:

.. GENERATED FROM PYTHON SOURCE LINES 341-347

.. code-block:: default


    from deepchecks.vision.suites import model_evaluation

    suite = model_evaluation()
    result = suite.run(training_data, test_data, model, device=device)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    The ImageSegmentPerformance check is deprecated and will be removed in the 0.11 version. Please use the WeakSegmentsPerformance check instead.
    The ModelErrorAnalysis check is deprecated and will be removed in the 0.11 version. Please use the WeakSegmentsPerformance check instead.
    Validating Input:
    |     | 0/1 [Time: 00:00]    Validating Input:
    |#####| 1/1 [Time: 00:07]    Validating Input:
    |#####| 1/1 [Time: 00:07]
    Ingesting Batches - Train Dataset:
    |             | 0/13 [Time: 00:00]
    Ingesting Batches - Train Dataset:
    |#            | 1/13 [Time: 00:04]
    Ingesting Batches - Train Dataset:
    |##           | 2/13 [Time: 00:08]
    Ingesting Batches - Train Dataset:
    |###          | 3/13 [Time: 00:13]
    Ingesting Batches - Train Dataset:
    |####         | 4/13 [Time: 00:17]
    Ingesting Batches - Train Dataset:
    |#####        | 5/13 [Time: 00:22]
    Ingesting Batches - Train Dataset:
    |######       | 6/13 [Time: 00:27]
    Ingesting Batches - Train Dataset:
    |#######      | 7/13 [Time: 00:31]
    Ingesting Batches - Train Dataset:
    |########     | 8/13 [Time: 00:36]
    Ingesting Batches - Train Dataset:
    |#########    | 9/13 [Time: 00:40]
    Ingesting Batches - Train Dataset:
    |##########   | 10/13 [Time: 00:45]
    Ingesting Batches - Train Dataset:
    |###########  | 11/13 [Time: 00:49]
    Ingesting Batches - Train Dataset:
    |############ | 12/13 [Time: 00:53]
    Ingesting Batches - Train Dataset:
    |#############| 13/13 [Time: 00:56]
    Ingesting Batches - Train Dataset:
    |#############| 13/13 [Time: 00:56]

    Computing Single Dataset Checks - Train Dataset:
    |     | 0/4 [Time: 00:00]

    Computing Single Dataset Checks - Train Dataset:
    |#2   | 1/4 [Time: 00:00, Check=Mean Average Precision Report]

    Computing Single Dataset Checks - Train Dataset:
    |##5  | 2/4 [Time: 00:00, Check=Mean Average Recall Report]   

    Computing Single Dataset Checks - Train Dataset:
    |#####| 4/4 [Time: 00:07, Check=Image Segment Performance] 

    Computing Single Dataset Checks - Train Dataset:
    |#####| 4/4 [Time: 00:07, Check=Image Segment Performance]


    Ingesting Batches - Test Dataset:
    |     | 0/2 [Time: 00:00]


    Ingesting Batches - Test Dataset:
    |##5  | 1/2 [Time: 00:04]


    Ingesting Batches - Test Dataset:
    |#####| 2/2 [Time: 00:06]


    Ingesting Batches - Test Dataset:
    |#####| 2/2 [Time: 00:06]



    Computing Single Dataset Checks - Test Dataset:
    |     | 0/4 [Time: 00:00]



    Computing Single Dataset Checks - Test Dataset:
    |##5  | 2/4 [Time: 00:00, Check=Mean Average Recall Report]



    Computing Single Dataset Checks - Test Dataset:
    |#####| 4/4 [Time: 00:01, Check=Image Segment Performance] 



    Computing Single Dataset Checks - Test Dataset:
    |#####| 4/4 [Time: 00:01, Check=Image Segment Performance]




    Computing Checks:
    |     | 0/4 [Time: 00:00]




    Computing Checks:
    |     | 0/4 [Time: 00:00, Check=Class Performance]




    Computing Checks:
    |#2   | 1/4 [Time: 00:00, Check=Class Performance]




    Computing Checks:
    |#2   | 1/4 [Time: 00:00, Check=Train Test Prediction Drift]




    Computing Checks:
    |##5  | 2/4 [Time: 00:00, Check=Train Test Prediction Drift]




    Computing Checks:
    |##5  | 2/4 [Time: 00:00, Check=Simple Model Comparison]    




    Computing Checks:
    |##5  | 2/4 [Time: 00:00, Check=Model Error Analysis]   Default parameter min_samples_leaf will change in version 2.6.See https://github.com/scikit-learn-contrib/category_encoders/issues/327
    Default parameter smoothing will change in version 2.6.See https://github.com/scikit-learn-contrib/category_encoders/issues/327





    Computing Checks:
    |#####| 4/4 [Time: 00:00, Check=Model Error Analysis]




    Computing Checks:
    |#####| 4/4 [Time: 00:00, Check=Model Error Analysis]                                           
                                                                          

                                                                                                               


                                                               



                                                                                                              




                                                                           



.. GENERATED FROM PYTHON SOURCE LINES 348-353

We also have suites for:
:func:`data integrity <deepchecks.vision.suites.default_suites.data_integrity>`
- validating a single dataset and
:func:`train test validation <deepchecks.vision.suites.default_suites.train_test_validation>` -
validating the dataset split

.. GENERATED FROM PYTHON SOURCE LINES 355-360

.. _observing_the_result:

Observing the results:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The results can be saved as a html file with the following code:

.. GENERATED FROM PYTHON SOURCE LINES 360-363

.. code-block:: default


    result.save_as_html('output.html')





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    'output (3).html'



.. GENERATED FROM PYTHON SOURCE LINES 364-365

Or, if working inside a notebook, the output can be displayed directly by simply printing the result object:

.. GENERATED FROM PYTHON SOURCE LINES 365-367

.. code-block:: default


    result





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <!--
        ~ ----------------------------------------------------------------------------
        ~ Copyright (C) 2021-2022 Deepchecks (https://www.deepchecks.com)
        ~
        ~ This file is part of Deepchecks.
        ~ Deepchecks is distributed under the terms of the GNU Affero General
        ~ Public License (version 3 or later).
        ~ You should have received a copy of the GNU Affero General Public License
        ~ along with Deepchecks.  If not, see <http://www.gnu.org/licenses/>.
        ~ ----------------------------------------------------------------------------
        ~
    -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Model Evaluation Suite</title>
        <link rel="icon" type="image/x-icon" href="https://deepchecks.com/wp-content/themes/deepchecks/assets/favicons/favicon.ico">
        <style>
            body {
                font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
                font-size: 1rem;
                line-height: 1.5;
                color: #212529;
                text-align: left;
                max-width: 1200px;
                margin: auto;
                background-color: white;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt *,
            div.nbinput.container div.input_area pre,
            div.nboutput.container div.output_area pre,
            div.nbinput.container div.input_area .highlight,
            div.nboutput.container div.output_area .highlight {
                border: none;
                padding: 0;
                margin: 0;
                box-shadow: none;
            }

            div.nbinput.container > div[class*=highlight],
            div.nboutput.container > div[class*=highlight] {
                margin: 0;
            }

            div.nbinput.container div.prompt *,
            div.nboutput.container div.prompt * {
                background: none;
            }

            div.nboutput.container div.output_area .highlight,
            div.nboutput.container div.output_area pre {
                background: unset;
            }

            div.nboutput.container div.output_area div.highlight {
                color: unset;  /* override Pygments text color */
            }

            /* avoid gaps between output lines */
            div.nboutput.container div[class*=highlight] pre {
                line-height: normal;
            }

            /* input/output containers */
            div.nbinput.container,
            div.nboutput.container {
                display: -webkit-flex;
                display: flex;
                align-items: flex-start;
                margin: 0;
                width: 100%;
            }
            @media (max-width: 540px) {
                div.nbinput.container,
                div.nboutput.container {
                    flex-direction: column;
                }
            }

            /* input container */
            div.nbinput.container {
                padding-top: 5px;
            }

            /* last container */
            div.nblast.container {
                padding-bottom: 5px;
            }

            /* input prompt */
            div.nbinput.container div.prompt pre {
                color: #307FC1;
            }

            /* output prompt */
            div.nboutput.container div.prompt pre {
                color: #BF5B3D;
            }

            /* all prompts */
            div.nbinput.container div.prompt,
            div.nboutput.container div.prompt {
                width: 4.5ex;
                padding-top: 5px;
                position: relative;
                user-select: none;
            }

            div.nbinput.container div.prompt > div,
            div.nboutput.container div.prompt > div {
                position: absolute;
                right: 0;
                margin-right: 0.3ex;
            }

            @media (max-width: 540px) {
                div.nbinput.container div.prompt,
                div.nboutput.container div.prompt {
                    width: unset;
                    text-align: left;
                    padding: 0.4em;
                }
                div.nboutput.container div.prompt.empty {
                    padding: 0;
                }

                div.nbinput.container div.prompt > div,
                div.nboutput.container div.prompt > div {
                    position: unset;
                }
            }

            /* disable scrollbars on prompts */
            div.nbinput.container div.prompt pre,
            div.nboutput.container div.prompt pre {
                overflow: hidden;
            }

            /* input/output area */
            div.nbinput.container div.input_area,
            div.nboutput.container div.output_area {
                -webkit-flex: 1;
                flex: 1;
                overflow: auto;
            }
            @media (max-width: 540px) {
                div.nbinput.container div.input_area,
                div.nboutput.container div.output_area {
                    width: 100%;
                }
            }

            /* input area */
            div.nbinput.container div.input_area {
                border: 1px solid #e0e0e0;
                border-radius: 2px;
                /*background: #f5f5f5;*/
            }

            /* override MathJax center alignment in output cells */
            div.nboutput.container div[class*=MathJax] {
                text-align: left !important;
            }

            /* override sphinx.ext.imgmath center alignment in output cells */
            div.nboutput.container div.math p {
                text-align: left;
            }

            /* standard error */
            div.nboutput.container div.output_area.stderr {
                background: #fdd;
            }

            /* ANSI colors */
            .ansi-black-fg { color: #3E424D; }
            .ansi-black-bg { background-color: #3E424D; }
            .ansi-black-intense-fg { color: #282C36; }
            .ansi-black-intense-bg { background-color: #282C36; }
            .ansi-red-fg { color: #E75C58; }
            .ansi-red-bg { background-color: #E75C58; }
            .ansi-red-intense-fg { color: #B22B31; }
            .ansi-red-intense-bg { background-color: #B22B31; }
            .ansi-green-fg { color: #00A250; }
            .ansi-green-bg { background-color: #00A250; }
            .ansi-green-intense-fg { color: #007427; }
            .ansi-green-intense-bg { background-color: #007427; }
            .ansi-yellow-fg { color: #DDB62B; }
            .ansi-yellow-bg { background-color: #DDB62B; }
            .ansi-yellow-intense-fg { color: #B27D12; }
            .ansi-yellow-intense-bg { background-color: #B27D12; }
            .ansi-blue-fg { color: #208FFB; }
            .ansi-blue-bg { background-color: #208FFB; }
            .ansi-blue-intense-fg { color: #0065CA; }
            .ansi-blue-intense-bg { background-color: #0065CA; }
            .ansi-magenta-fg { color: #D160C4; }
            .ansi-magenta-bg { background-color: #D160C4; }
            .ansi-magenta-intense-fg { color: #A03196; }
            .ansi-magenta-intense-bg { background-color: #A03196; }
            .ansi-cyan-fg { color: #60C6C8; }
            .ansi-cyan-bg { background-color: #60C6C8; }
            .ansi-cyan-intense-fg { color: #258F8F; }
            .ansi-cyan-intense-bg { background-color: #258F8F; }
            .ansi-white-fg { color: #C5C1B4; }
            .ansi-white-bg { background-color: #C5C1B4; }
            .ansi-white-intense-fg { color: #A1A6B2; }
            .ansi-white-intense-bg { background-color: #A1A6B2; }

            .ansi-default-inverse-fg { color: #FFFFFF; }
            .ansi-default-inverse-bg { background-color: #000000; }

            .ansi-bold { font-weight: bold; }
            .ansi-underline { text-decoration: underline; }


            div.nbinput.container div.input_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight] > pre,
            div.nboutput.container div.output_area div[class*=highlight].math,
            div.nboutput.container div.output_area.rendered_html,
            div.nboutput.container div.output_area > div.output_javascript,
            div.nboutput.container div.output_area:not(.rendered_html) > img{
                padding: 5px;
                margin: 0;
            }

            /* fix copybtn overflow problem in chromium (needed for 'sphinx_copybutton') */
            div.nbinput.container div.input_area > div[class^='highlight'],
            div.nboutput.container div.output_area > div[class^='highlight']{
                overflow-y: hidden;
            }

            /* hide copybtn icon on prompts (needed for 'sphinx_copybutton') */
            .prompt .copybtn {
                display: none;
            }

            /* Some additional styling taken form the Jupyter notebook CSS */
            div.rendered_html table {
            border: none;
            border-collapse: collapse;
            border-spacing: 0;
            color: black;
            font-size: 12px;
            table-layout: fixed;
            }
            div.rendered_html thead {
            border-bottom: 1px solid black;
            vertical-align: bottom;
            }
            div.rendered_html tr,
            div.rendered_html th,
            div.rendered_html td {
            text-align: right;
            vertical-align: middle;
            padding: 0.5em 0.5em;
            line-height: normal;
            white-space: normal;
            max-width: none;
            border: none;
            }
            div.rendered_html th {
            font-weight: bold;
            }
            div.rendered_html tbody tr:nth-child(odd) {
            background: #f5f5f5;
            }
            div.rendered_html tbody tr:hover {
            background: rgba(66, 165, 245, 0.2);
            }
        </style>
    </head>
    <body>
        <script src="https://unpkg.com/@jupyter-widgets/html-manager@^0.20.1/dist/embed.js" crossorigin="anonymous"></script>
    

    <script type="application/vnd.jupyter.widget-state+json">
    {"version_major": 2, "version_minor": 0, "state": {"1bc907aa0f694f4d9f18baa851f20839": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "_titles": {"0": "Model Evaluation Suite"}, "children": ["IPY_MODEL_e0831c1118344c0b841a60950ccc802f"], "layout": "IPY_MODEL_d5a6aac8ac704d9f9ec1fe3b85fc2ee3"}}, "e0831c1118344c0b841a60950ccc802f": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_36a3d557cbc246c7ac59aaf4fd5797f2", "IPY_MODEL_10bb26ba5c9641ef9f76702a748e30bd", "IPY_MODEL_266d19bfedbf4d25944c3d18cd3339b9", "IPY_MODEL_34088831643e4ba7a41bcc09fb7eb80d", "IPY_MODEL_44d82099e19544d7bd3c7301aca05dc0"], "layout": "IPY_MODEL_a8b4318e18964a06a626dc626ce2e6af"}}, "36a3d557cbc246c7ac59aaf4fd5797f2": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c2893f1e06544601b970565eb84775f5", "style": "IPY_MODEL_4d9137f66eb64491ad8383a999fe2aa7", "value": "\n            <h1 id=\"summary_UH17J8QO09VS9KKH4A3YJTU7F\">Model Evaluation Suite</h1>\n            <p>\n                The suite is composed of various checks such as: Train Test Prediction Drift, Simple Model Comparison, Mean Average Precision Report, etc...<br>\n                Each check may contain conditions (which will result in pass / fail / warning / error\n                , represented by \n<span style=\"color: green;display:inline-block\">\u2713</span> /\n<span style=\"color: red;display:inline-block\">\u2716</span> /\n<span style=\"color: orange;font-weight:bold;display:inline-block\">!</span> /\n<span style=\"color: firebrick;font-weight:bold;display:inline-block\">\u2048</span>\n) as well as other outputs such as plots or tables.<br>\n                Suites, checks and conditions can all be modified. Read more about\n                <a href=https://docs.deepchecks.com/en/stable/examples/guides/create_a_custom_suite.html?utm_source=display_output&utm_medium=referral&utm_campaign=suite_link target=\"_blank\">custom suites</a>.\n            </p>\n\n"}}, "c2893f1e06544601b970565eb84775f5": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "4d9137f66eb64491ad8383a999fe2aa7": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "10bb26ba5c9641ef9f76702a748e30bd": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_e5e9bb77bff5440c9067e0fb4c55635b", "IPY_MODEL_c4eb76dacc204e02832fd3bfe05b7389"], "layout": "IPY_MODEL_4cf7c9566e934cebaf2195745efa57de"}}, "e5e9bb77bff5440c9067e0fb4c55635b": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_1defa2e9ab7b4729a8ed00df13d6c804", "style": "IPY_MODEL_3bca7df9b9bd49cfad9c0a00fe2ca771", "value": "<span id=\"summary_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\"></span>"}}, "1defa2e9ab7b4729a8ed00df13d6c804": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "3bca7df9b9bd49cfad9c0a00fe2ca771": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "c4eb76dacc204e02832fd3bfe05b7389": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "_titles": {"0": "Didn't Pass"}, "children": ["IPY_MODEL_b7987d242fd24b80a279c003949914e8"], "layout": "IPY_MODEL_c50834404691442b94fb11f4746bbefd", "selected_index": null}}, "b7987d242fd24b80a279c003949914e8": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_ac6b87782c824c2fbdd99340750e28b9", "IPY_MODEL_c4303ba84772432087df3a4214039d4d", "IPY_MODEL_53787a34f0474b718dd92eb61a52943f", "IPY_MODEL_146d02457bf54bfda41c25a1757ac0e3", "IPY_MODEL_8adc00c4c1f84da693d8ac74b86d2051", "IPY_MODEL_146d02457bf54bfda41c25a1757ac0e3", "IPY_MODEL_f26f957482b1481099df5380af062909", "IPY_MODEL_146d02457bf54bfda41c25a1757ac0e3", "IPY_MODEL_e06a03523df54a82bf4e3b32b54adca6", "IPY_MODEL_146d02457bf54bfda41c25a1757ac0e3", "IPY_MODEL_8a20b5eeff034aacbce6b310c72f70e4"], "layout": "IPY_MODEL_c56abded02d24be781f449e45fc1450f"}}, "ac6b87782c824c2fbdd99340750e28b9": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_64747aac5730470e83c1276f38836705", "style": "IPY_MODEL_c1375c3f962f4d559808fa41d7951943", "value": "<style type=\"text/css\">\n#T_dcf2c_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_dcf2c_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_dcf2c_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_dcf2c_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_dcf2c_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_dcf2c_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Check</th>\n      <th class=\"col_heading level0 col2\" >Condition</th>\n      <th class=\"col_heading level0 col3\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_dcf2c_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_dcf2c_row0_col1\" class=\"data row0 col1\" ><a href=\"#ClassPerformance_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\">Class Performance</a></td>\n      <td id=\"T_dcf2c_row0_col2\" class=\"data row0 col2\" >Train-Test scores relative degradation is less than 0.1</td>\n      <td id=\"T_dcf2c_row0_col3\" class=\"data row0 col3\" >2 scores failed. Found max degradation of 49.42% for metric Average Precision and class Tomato.</td>\n    </tr>\n    <tr>\n      <td id=\"T_dcf2c_row1_col0\" class=\"data row1 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_dcf2c_row1_col1\" class=\"data row1 col1\" ><a href=\"#MeanAveragePrecisionReport-TestDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\">Mean Average Precision Report - Test Dataset</a></td>\n      <td id=\"T_dcf2c_row1_col2\" class=\"data row1 col2\" >mAP score is greater than 0.3</td>\n      <td id=\"T_dcf2c_row1_col3\" class=\"data row1 col3\" >mAP score is: 0.01</td>\n    </tr>\n    <tr>\n      <td id=\"T_dcf2c_row2_col0\" class=\"data row2 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_dcf2c_row2_col1\" class=\"data row2 col1\" ><a href=\"#MeanAveragePrecisionReport-TrainDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\">Mean Average Precision Report - Train Dataset</a></td>\n      <td id=\"T_dcf2c_row2_col2\" class=\"data row2 col2\" >mAP score is greater than 0.3</td>\n      <td id=\"T_dcf2c_row2_col3\" class=\"data row2 col3\" >mAP score is: 0.03</td>\n    </tr>\n    <tr>\n      <td id=\"T_dcf2c_row3_col0\" class=\"data row3 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_dcf2c_row3_col1\" class=\"data row3 col1\" ><a href=\"#ImageSegmentPerformance-TestDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\">Image Segment Performance - Test Dataset</a></td>\n      <td id=\"T_dcf2c_row3_col2\" class=\"data row3 col2\" >Segment's ratio between score to mean is greater than 80%</td>\n      <td id=\"T_dcf2c_row3_col3\" class=\"data row3 col3\" >Properties with failed segments: Brightness: {'Range': '(-inf, 0.33)', 'Metric': 'Average Precision', 'Ratio': 0.11}, Mean Blue Relative Intensity: {'Range': '[0.2, 0.23)', 'Metric': 'Average Precision', 'Ratio': 0.29}, Mean Green Relative Intensity: {'Range': '[0.41, 0.45)', 'Metric': 'Average Reca...</td>\n    </tr>\n    <tr>\n      <td id=\"T_dcf2c_row4_col0\" class=\"data row4 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_dcf2c_row4_col1\" class=\"data row4 col1\" ><a href=\"#ImageSegmentPerformance-TrainDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\">Image Segment Performance - Train Dataset</a></td>\n      <td id=\"T_dcf2c_row4_col2\" class=\"data row4 col2\" >Segment's ratio between score to mean is greater than 80%</td>\n      <td id=\"T_dcf2c_row4_col3\" class=\"data row4 col3\" >Properties with failed segments: Brightness: {'Range': '[0.32, 0.38)', 'Metric': 'Average Recall', 'Ratio': 0.53}, Mean Blue Relative Intensity: {'Range': '(-inf, 0.2)', 'Metric': 'Average Recall', 'Ratio': 0.68}, Mean Green Relative Intensity: {'Range': '[0.45, 0.48)', 'Metric': 'Average Precision'...</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "64747aac5730470e83c1276f38836705": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "c1375c3f962f4d559808fa41d7951943": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "c4303ba84772432087df3a4214039d4d": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3c4e806a771843fabe65fcb6a4228f76", "style": "IPY_MODEL_fa6f7c5a09f74d52895e7696bf1fb783", "value": "<hr style=\"background-color: #eee;border: 0 none;color: #eee;height: 4px;\">"}}, "3c4e806a771843fabe65fcb6a4228f76": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "fa6f7c5a09f74d52895e7696bf1fb783": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "53787a34f0474b718dd92eb61a52943f": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_eb1e3c693cf3432ea08be8c8f7555bbd", "IPY_MODEL_6cc277226b564c47aeb704094ab02182", "IPY_MODEL_87ee577c9f704f43827cc3f7ec9661d1", "IPY_MODEL_e8fd51493f4a42ea962e031cf8f138bf"], "layout": "IPY_MODEL_bd958c6fa38c4ac4ab9a516c87f49ade"}}, "eb1e3c693cf3432ea08be8c8f7555bbd": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_4e2768ae078046e295701c7854c42314", "style": "IPY_MODEL_62f5068b0d12405fb2067718a73ae620", "value": "<h4 id=\"ClassPerformance_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\"><b>Class Performance</b></h4>"}}, "4e2768ae078046e295701c7854c42314": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "62f5068b0d12405fb2067718a73ae620": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "6cc277226b564c47aeb704094ab02182": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_3d271ab64165413dbf2f5249b174cc64", "style": "IPY_MODEL_9a7652ea37ac4f9a95696b7861a146ba", "value": "<p>Summarize given metrics on a dataset and model. <a href=\"https://docs.deepchecks.com/0.10/checks_gallery/vision/model_evaluation/plot_class_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "3d271ab64165413dbf2f5249b174cc64": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9a7652ea37ac4f9a95696b7861a146ba": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "87ee577c9f704f43827cc3f7ec9661d1": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c4658570b1bd4417ae910e6d8d934496", "style": "IPY_MODEL_bd42afcabaa44824bdf8c37f7f753c9d", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_a599e_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a599e_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a599e_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a599e_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_a599e_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_a599e_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_a599e_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_a599e_row0_col1\" class=\"data row0 col1\" >Train-Test scores relative degradation is less than 0.1</td>\n      <td id=\"T_a599e_row0_col2\" class=\"data row0 col2\" >2 scores failed. Found max degradation of 49.42% for metric Average Precision and class Tomato.</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "c4658570b1bd4417ae910e6d8d934496": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "bd42afcabaa44824bdf8c37f7f753c9d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "e8fd51493f4a42ea962e031cf8f138bf": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_336cd5515b1f4b198e9e514688a56ecd", "IPY_MODEL_0cd82e5e035d48b18c4120e46840e97b", "IPY_MODEL_7ada4183644a492c8fef14236a281d35"], "layout": "IPY_MODEL_e0f641e1798441e8a06c1f042fed39cf"}}, "336cd5515b1f4b198e9e514688a56ecd": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_e96482d837664ccca91c0a97c28a9ca8", "style": "IPY_MODEL_edbba515c03a453b897eaaba5826f29d", "value": "<h5><b>Additional Outputs</b></h5>"}}, "e96482d837664ccca91c0a97c28a9ca8": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "edbba515c03a453b897eaaba5826f29d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "0cd82e5e035d48b18c4120e46840e97b": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Train<br>Metric=Average Recall<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Train", "marker": {"color": "#00008b", "pattern": {"shape": ""}}, "name": "Train", "offsetgroup": "Train", "orientation": "v", "showlegend": true, "x": ["Tomato"], "xaxis": "x", "y": {"dtype": "float64", "shape": [1]}, "yaxis": "y", "type": "histogram", "uid": "0ffc0c1b-5b7a-4cfd-8bce-725df0714806"}, {"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Train<br>Metric=Average Precision<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Train", "marker": {"color": "#00008b", "pattern": {"shape": ""}}, "name": "Train", "offsetgroup": "Train", "orientation": "v", "showlegend": false, "x": ["Tomato"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [1]}, "yaxis": "y2", "type": "histogram", "uid": "9047e44b-9515-45e4-8c71-b093739fefa3"}, {"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Test<br>Metric=Average Recall<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Test", "marker": {"color": "#69b3a2", "pattern": {"shape": ""}}, "name": "Test", "offsetgroup": "Test", "orientation": "v", "showlegend": true, "x": ["Tomato"], "xaxis": "x", "y": {"dtype": "float64", "shape": [1]}, "yaxis": "y", "type": "histogram", "uid": "6e62c836-d86b-4a16-a652-6847a6f88abf"}, {"alignmentgroup": "True", "bingroup": "x", "histfunc": "sum", "hovertemplate": "Dataset=Test<br>Metric=Average Precision<br>Class Name=%{x}<br>sum of Value=%{y}<extra></extra>", "legendgroup": "Test", "marker": {"color": "#69b3a2", "pattern": {"shape": ""}}, "name": "Test", "offsetgroup": "Test", "orientation": "v", "showlegend": false, "x": ["Tomato"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [1]}, "yaxis": "y2", "type": "histogram", "uid": "8be51475-33a8-4ff8-a39e-8e5c5c3da640"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"showarrow": false, "text": "Average Recall", "x": 0.2375, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Average Precision", "x": 0.7625, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}], "barmode": "group", "legend": {"title": {"text": "Dataset"}, "tracegroupgap": 0}, "margin": {"t": 60}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "xaxis": {"anchor": "y", "domain": [0.0, 0.475], "title": {"text": "Class"}, "type": "category"}, "yaxis": {"anchor": "x", "domain": [0.0, 1.0], "showticklabels": true, "title": {"text": "Value"}}, "xaxis2": {"anchor": "y2", "domain": [0.525, 1.0], "matches": "x", "title": {"text": "Class"}, "type": "category"}, "yaxis2": {"anchor": "x2", "domain": [0.0, 1.0], "showticklabels": true, "title": {"text": "Value"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 0, "y", "buffer"], "data": "a7nPcI9Srz8="}, {"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "Nr3odJkgnT8="}, {"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "gaoocvZKpj8="}, {"encoding": "base64", "path": ["_data", 3, "y", "buffer"], "data": "XTbPw752jT8="}]}, "7ada4183644a492c8fef14236a281d35": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_27302890f7eb4dcb92121cc98aec890d", "style": "IPY_MODEL_670ee658c09e4e60bc67f55a5dc963cf", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\" style=\"font-size: 14px;\">Go to top</a>"}}, "27302890f7eb4dcb92121cc98aec890d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "670ee658c09e4e60bc67f55a5dc963cf": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "e0f641e1798441e8a06c1f042fed39cf": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "bd958c6fa38c4ac4ab9a516c87f49ade": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "146d02457bf54bfda41c25a1757ac0e3": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_1affeee8d32044b284c93072af514fbf", "style": "IPY_MODEL_e6c204a14f604ef59a563ac0cd4e2a61", "value": "<hr style=\"background-color: #eee;border: 0 none;color: #eee;height: 4px;\">"}}, "1affeee8d32044b284c93072af514fbf": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e6c204a14f604ef59a563ac0cd4e2a61": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "8adc00c4c1f84da693d8ac74b86d2051": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_b8508566976e4da6ba64e0aab727231b", "IPY_MODEL_c2ff65073a0a4ad1b1c1624e1eabd5d3", "IPY_MODEL_42068c73a857488695d28e66ef573b41", "IPY_MODEL_253047c720184cb0ac331fcb94b80293"], "layout": "IPY_MODEL_43a809e7c10e4e0eae220f014ade123c"}}, "b8508566976e4da6ba64e0aab727231b": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_b81a4632995147c280d310731f6a6535", "style": "IPY_MODEL_d07dab324fad4c0baf9042fed459cf23", "value": "<h4 id=\"MeanAveragePrecisionReport-TestDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\"><b>Mean Average Precision Report - Test Dataset</b></h4>"}}, "b81a4632995147c280d310731f6a6535": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d07dab324fad4c0baf9042fed459cf23": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "c2ff65073a0a4ad1b1c1624e1eabd5d3": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c541411d4f1b4ee98f162f09da2a46ef", "style": "IPY_MODEL_bb70c86283cd47f89380f5bd1b7e5b36", "value": "<p>Summarize mean average precision metrics on a dataset and model per IoU and bounding box area. <a href=\"https://docs.deepchecks.com/0.10/checks_gallery/vision/model_evaluation/plot_mean_average_precision_report.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "c541411d4f1b4ee98f162f09da2a46ef": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "bb70c86283cd47f89380f5bd1b7e5b36": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "42068c73a857488695d28e66ef573b41": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_59f5e22cceba4c2a92cbcf2ee76336b5", "style": "IPY_MODEL_7213d175c5ce4473b8a2475015d3273a", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_01382_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_01382_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_01382_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_01382_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_01382_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_01382_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_01382_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_01382_row0_col1\" class=\"data row0 col1\" >mAP score is greater than 0.3</td>\n      <td id=\"T_01382_row0_col2\" class=\"data row0 col2\" >mAP score is: 0.01</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "59f5e22cceba4c2a92cbcf2ee76336b5": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "7213d175c5ce4473b8a2475015d3273a": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "253047c720184cb0ac331fcb94b80293": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_9025b6db0b5f410da7673a3470feb6ca", "IPY_MODEL_ee7e6627ea004d968248073f4337042e", "IPY_MODEL_4cea44f5ce61499ab287346a8f9240a9", "IPY_MODEL_a7ec008fda5647cb86debaaf0396c796"], "layout": "IPY_MODEL_869a146b2c244b1a887952b1aa22e47f"}}, "9025b6db0b5f410da7673a3470feb6ca": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_fc5b396828ed480c857fc60822f91f18", "style": "IPY_MODEL_cbf0ed70d55f42b999f00c23ae27976f", "value": "<h5><b>Additional Outputs</b></h5>"}}, "fc5b396828ed480c857fc60822f91f18": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "cbf0ed70d55f42b999f00c23ae27976f": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "ee7e6627ea004d968248073f4337042e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_8ef743f148034293aa5adf68ada62994", "style": "IPY_MODEL_3d9323e9b1fa445ba02aa8dcb5e498d0", "value": "<style type=\"text/css\">\n#T_ce3d7_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_ce3d7_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_ce3d7_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_ce3d7_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_ce3d7_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_ce3d7_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >mAP@[.50::.95] (avg.%)</th>\n      <th class=\"col_heading level0 col1\" >mAP@.50 (%)</th>\n      <th class=\"col_heading level0 col2\" >mAP@.75 (%)</th>\n    </tr>\n    <tr>\n      <th class=\"index_name level0\" >Area size</th>\n      <th class=\"blank col0\" >&nbsp;</th>\n      <th class=\"blank col1\" >&nbsp;</th>\n      <th class=\"blank col2\" >&nbsp;</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_ce3d7_level0_row0\" class=\"row_heading level0 row0\" >All</th>\n      <td id=\"T_ce3d7_row0_col0\" class=\"data row0 col0\" >0.01</td>\n      <td id=\"T_ce3d7_row0_col1\" class=\"data row0 col1\" >0.05</td>\n      <td id=\"T_ce3d7_row0_col2\" class=\"data row0 col2\" >0.01</td>\n    </tr>\n    <tr>\n      <th id=\"T_ce3d7_level0_row1\" class=\"row_heading level0 row1\" >Small (area < 32^2)</th>\n      <td id=\"T_ce3d7_row1_col0\" class=\"data row1 col0\" >0.00</td>\n      <td id=\"T_ce3d7_row1_col1\" class=\"data row1 col1\" >0.01</td>\n      <td id=\"T_ce3d7_row1_col2\" class=\"data row1 col2\" >0.00</td>\n    </tr>\n    <tr>\n      <th id=\"T_ce3d7_level0_row2\" class=\"row_heading level0 row2\" >Medium (32^2 < area < 96^2)</th>\n      <td id=\"T_ce3d7_row2_col0\" class=\"data row2 col0\" >0.06</td>\n      <td id=\"T_ce3d7_row2_col1\" class=\"data row2 col1\" >0.20</td>\n      <td id=\"T_ce3d7_row2_col2\" class=\"data row2 col2\" >0.02</td>\n    </tr>\n    <tr>\n      <th id=\"T_ce3d7_level0_row3\" class=\"row_heading level0 row3\" >Large (area < 96^2)</th>\n      <td id=\"T_ce3d7_row3_col0\" class=\"data row3 col0\" >0.00</td>\n      <td id=\"T_ce3d7_row3_col1\" class=\"data row3 col1\" >0.00</td>\n      <td id=\"T_ce3d7_row3_col2\" class=\"data row3 col2\" >0.00</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "8ef743f148034293aa5adf68ada62994": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "3d9323e9b1fa445ba02aa8dcb5e498d0": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "4cea44f5ce61499ab287346a8f9240a9": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"hovertemplate": "IoU threshold=%{x}<br>mAP (%)=%{y}<extra></extra>", "legendgroup": "", "line": {"color": "#636efa", "dash": "solid"}, "marker": {"symbol": "circle"}, "mode": "lines", "name": "", "orientation": "v", "showlegend": false, "x": {"dtype": "float64", "shape": [10]}, "xaxis": "x", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y", "type": "scatter", "uid": "5be775b2-8b23-416c-b2e8-fd4c5745463d"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"legend": {"tracegroupgap": 0}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Mean Average Precision over increasing IoU thresholds"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "title": {"text": "IoU threshold"}}, "yaxis": {"anchor": "x", "domain": [0.0, 1.0], "title": {"text": "mAP (%)"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 0, "x", "buffer"], "data": "AAAAAAAA4D+amZmZmZnhPzMzMzMzM+M/zczMzMzM5D9mZmZmZmbmPwAAAAAAAOg/mpmZmZmZ6T8zMzMzMzPrP8zMzMzMzOw/ZmZmZmZm7j8="}, {"encoding": "base64", "path": ["_data", 0, "y", "buffer"], "data": "BgvmbtEZqz+QrX77JeSgPw/SHG8RMZg/FzPxFFFKkD+d5TgXdvSFP90AvT0pBnc/cGmN5aPcWj+g9wM0ODY8PwAAAAAAAAAAAAAAAAAAAAA="}]}, "a7ec008fda5647cb86debaaf0396c796": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_5ec30fadb9444334895931d5ed766d2d", "style": "IPY_MODEL_13a596b0c7c74846a36d35da462b5237", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\" style=\"font-size: 14px;\">Go to top</a>"}}, "5ec30fadb9444334895931d5ed766d2d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "13a596b0c7c74846a36d35da462b5237": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "869a146b2c244b1a887952b1aa22e47f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "43a809e7c10e4e0eae220f014ade123c": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "f26f957482b1481099df5380af062909": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_1129042020fa47e08e0618938ea3b45c", "IPY_MODEL_a5fb20f656c34cbea703351f83ccde6d", "IPY_MODEL_bc6b7eff424f4b64b563b6eeb6b4f737", "IPY_MODEL_d2d9d68cc33c417d9c0ac9a224ee367a"], "layout": "IPY_MODEL_aa634c82a6e94f9dab3ee8e65be2b936"}}, "1129042020fa47e08e0618938ea3b45c": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c4e9b2db08c74775a207adba6a7f27fc", "style": "IPY_MODEL_455b6f87bd334223887b962b31ba2a7b", "value": "<h4 id=\"MeanAveragePrecisionReport-TrainDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\"><b>Mean Average Precision Report - Train Dataset</b></h4>"}}, "c4e9b2db08c74775a207adba6a7f27fc": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "455b6f87bd334223887b962b31ba2a7b": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "a5fb20f656c34cbea703351f83ccde6d": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_12e0f9bd5b004be981ffee9f5e6e4951", "style": "IPY_MODEL_57b7a2683a19452696dbd8b91ec4d46c", "value": "<p>Summarize mean average precision metrics on a dataset and model per IoU and bounding box area. <a href=\"https://docs.deepchecks.com/0.10/checks_gallery/vision/model_evaluation/plot_mean_average_precision_report.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "12e0f9bd5b004be981ffee9f5e6e4951": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "57b7a2683a19452696dbd8b91ec4d46c": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "bc6b7eff424f4b64b563b6eeb6b4f737": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_f8427deaa6b04b40813a2c4428b54775", "style": "IPY_MODEL_09da57b652cc45da8a433245dec96494", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_9a1b1_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_9a1b1_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_9a1b1_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_9a1b1_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_9a1b1_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_9a1b1_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_9a1b1_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_9a1b1_row0_col1\" class=\"data row0 col1\" >mAP score is greater than 0.3</td>\n      <td id=\"T_9a1b1_row0_col2\" class=\"data row0 col2\" >mAP score is: 0.03</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "f8427deaa6b04b40813a2c4428b54775": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "09da57b652cc45da8a433245dec96494": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "d2d9d68cc33c417d9c0ac9a224ee367a": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_ee0ad58e7365474080beb3ee9a43eeda", "IPY_MODEL_fa673c89c82f49c7a1c73d1591b0dd30", "IPY_MODEL_280aca53f55e415f9279b5a2f63d5bfe", "IPY_MODEL_97c3ba14b8544047a38a07674f9f3ed4"], "layout": "IPY_MODEL_45166fc502fb45b6af511aeef3284f0d"}}, "ee0ad58e7365474080beb3ee9a43eeda": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_072620008bd34ec8bbc9cd0314b132d3", "style": "IPY_MODEL_3cb5a83f6a6c446b9df9434e8dfc4a0a", "value": "<h5><b>Additional Outputs</b></h5>"}}, "072620008bd34ec8bbc9cd0314b132d3": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "3cb5a83f6a6c446b9df9434e8dfc4a0a": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "fa673c89c82f49c7a1c73d1591b0dd30": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_9a9a384055ed4a2691a92342b525cd47", "style": "IPY_MODEL_c07be2da962d4ac38e5a5b4e5a510105", "value": "<style type=\"text/css\">\n#T_79769_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_79769_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_79769_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_79769_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_79769_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_79769_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >mAP@[.50::.95] (avg.%)</th>\n      <th class=\"col_heading level0 col1\" >mAP@.50 (%)</th>\n      <th class=\"col_heading level0 col2\" >mAP@.75 (%)</th>\n    </tr>\n    <tr>\n      <th class=\"index_name level0\" >Area size</th>\n      <th class=\"blank col0\" >&nbsp;</th>\n      <th class=\"blank col1\" >&nbsp;</th>\n      <th class=\"blank col2\" >&nbsp;</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_79769_level0_row0\" class=\"row_heading level0 row0\" >All</th>\n      <td id=\"T_79769_row0_col0\" class=\"data row0 col0\" >0.03</td>\n      <td id=\"T_79769_row0_col1\" class=\"data row0 col1\" >0.07</td>\n      <td id=\"T_79769_row0_col2\" class=\"data row0 col2\" >0.02</td>\n    </tr>\n    <tr>\n      <th id=\"T_79769_level0_row1\" class=\"row_heading level0 row1\" >Small (area < 32^2)</th>\n      <td id=\"T_79769_row1_col0\" class=\"data row1 col0\" >0.00</td>\n      <td id=\"T_79769_row1_col1\" class=\"data row1 col1\" >0.00</td>\n      <td id=\"T_79769_row1_col2\" class=\"data row1 col2\" >0.00</td>\n    </tr>\n    <tr>\n      <th id=\"T_79769_level0_row2\" class=\"row_heading level0 row2\" >Medium (32^2 < area < 96^2)</th>\n      <td id=\"T_79769_row2_col0\" class=\"data row2 col0\" >0.10</td>\n      <td id=\"T_79769_row2_col1\" class=\"data row2 col1\" >0.27</td>\n      <td id=\"T_79769_row2_col2\" class=\"data row2 col2\" >0.06</td>\n    </tr>\n    <tr>\n      <th id=\"T_79769_level0_row3\" class=\"row_heading level0 row3\" >Large (area < 96^2)</th>\n      <td id=\"T_79769_row3_col0\" class=\"data row3 col0\" >0.02</td>\n      <td id=\"T_79769_row3_col1\" class=\"data row3 col1\" >0.04</td>\n      <td id=\"T_79769_row3_col2\" class=\"data row3 col2\" >0.02</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "9a9a384055ed4a2691a92342b525cd47": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "c07be2da962d4ac38e5a5b4e5a510105": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "280aca53f55e415f9279b5a2f63d5bfe": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"hovertemplate": "IoU threshold=%{x}<br>mAP (%)=%{y}<extra></extra>", "legendgroup": "", "line": {"color": "#636efa", "dash": "solid"}, "marker": {"symbol": "circle"}, "mode": "lines", "name": "", "orientation": "v", "showlegend": false, "x": {"dtype": "float64", "shape": [10]}, "xaxis": "x", "y": {"dtype": "float64", "shape": [10]}, "yaxis": "y", "type": "scatter", "uid": "0c03afb9-3a8b-401f-80c1-293c6ff4117f"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"legend": {"tracegroupgap": 0}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Mean Average Precision over increasing IoU thresholds"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "title": {"text": "IoU threshold"}}, "yaxis": {"anchor": "x", "domain": [0.0, 1.0], "title": {"text": "mAP (%)"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 0, "x", "buffer"], "data": "AAAAAAAA4D+amZmZmZnhPzMzMzMzM+M/zczMzMzM5D9mZmZmZmbmPwAAAAAAAOg/mpmZmZmZ6T8zMzMzMzPrP8zMzMzMzOw/ZmZmZmZm7j8="}, {"encoding": "base64", "path": ["_data", 0, "y", "buffer"], "data": "BSFOmC5zsT8514rrNLyqP2iHz+I3DqU/v5hhfP1PoD+QNvwyd9uZP3+pzGst+ZM//fA+IwNojj+OtiyKbl+HP/GgbeQr0YQ/+tliZfhGhD8="}]}, "97c3ba14b8544047a38a07674f9f3ed4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c5b04944718d406ba29ad83c05d5eefb", "style": "IPY_MODEL_f4703b1dab7f499688fb7cea19e207d2", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\" style=\"font-size: 14px;\">Go to top</a>"}}, "c5b04944718d406ba29ad83c05d5eefb": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "f4703b1dab7f499688fb7cea19e207d2": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "45166fc502fb45b6af511aeef3284f0d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "aa634c82a6e94f9dab3ee8e65be2b936": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e06a03523df54a82bf4e3b32b54adca6": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_4f103b2313f3496e93877a5e52e6e3e4", "IPY_MODEL_40f25b7048f64fb3890c613818b1ace6", "IPY_MODEL_557b8d33a9764345be05ab7ab71f1beb", "IPY_MODEL_fd892a172867489a8d07512e6bb5321f"], "layout": "IPY_MODEL_e4fa5ef4c75c4026a8399e9b4004efd0"}}, "4f103b2313f3496e93877a5e52e6e3e4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_e4fea1d09e374651b35c250a2e9cf6b0", "style": "IPY_MODEL_e5858b35f0394dea848e61d0713e2649", "value": "<h4 id=\"ImageSegmentPerformance-TestDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\"><b>Image Segment Performance - Test Dataset</b></h4>"}}, "e4fea1d09e374651b35c250a2e9cf6b0": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e5858b35f0394dea848e61d0713e2649": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "40f25b7048f64fb3890c613818b1ace6": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_45d9a6ce64ae4dba8cf8bbcb4939a120", "style": "IPY_MODEL_6f2926132667428fbdebf01beec3727f", "value": "<p>Segment the data by various properties of the image, and compare the performance of the segments. <a href=\"https://docs.deepchecks.com/0.10/checks_gallery/vision/model_evaluation/plot_image_segment_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "45d9a6ce64ae4dba8cf8bbcb4939a120": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "6f2926132667428fbdebf01beec3727f": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "557b8d33a9764345be05ab7ab71f1beb": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_f8fc0dc3ac304a5a8f7a4d8103c2516e", "style": "IPY_MODEL_8f52bdb6a8654d928a735fd99871bb52", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_bc1a2_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_bc1a2_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_bc1a2_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_bc1a2_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_bc1a2_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_bc1a2_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_bc1a2_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_bc1a2_row0_col1\" class=\"data row0 col1\" >Segment's ratio between score to mean is greater than 80%</td>\n      <td id=\"T_bc1a2_row0_col2\" class=\"data row0 col2\" >Properties with failed segments: Brightness: {'Range': '(-inf, 0.33)', 'Metric': 'Average Precision', 'Ratio': 0.11}, Mean Blue Relative Intensity: {'Range': '[0.2, 0.23)', 'Metric': 'Average Precision', 'Ratio': 0.29}, Mean Green Relative Intensity: {'Range': '[0.41, 0.45)', 'Metric': 'Average Recall', 'Ratio': 0.28}, Mean Red Relative Intensity: {'Range': '(-inf, 0.31)', 'Metric': 'Average Precision', 'Ratio': 0.03}, RMS Contrast: {'Range': '[0.16, 0.19)', 'Metric': 'Average Precision', 'Ratio': 0.45}</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "f8fc0dc3ac304a5a8f7a4d8103c2516e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "8f52bdb6a8654d928a735fd99871bb52": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "fd892a172867489a8d07512e6bb5321f": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_628f07359d1d4987bacadf69e9640c9d", "IPY_MODEL_b427096b5d254f74a871ba631dc57514", "IPY_MODEL_20fbecf8ad2947caabb879acda1806cb"], "layout": "IPY_MODEL_fc11eba7832642089008916252071df2"}}, "628f07359d1d4987bacadf69e9640c9d": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_20e306930fac4e7bb576bfccd0dc7eb4", "style": "IPY_MODEL_a7675f35ce26434b9deb8d9ac262195c", "value": "<h5><b>Additional Outputs</b></h5>"}}, "20e306930fac4e7bb576bfccd0dc7eb4": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a7675f35ce26434b9deb8d9ac262195c": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "b427096b5d254f74a871ba631dc57514": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"alignmentgroup": "True", "customdata": [[18], [18], [18], [18], [18]], "hovertemplate": "Metric=Average Precision<br>Property=Brightness<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Average Precision", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Average Precision", "offsetgroup": "Average Precision", "orientation": "v", "showlegend": true, "textposition": "auto", "width": 0.2, "x": ["(-inf, 0.33)", "[0.33, 0.38)", "[0.38, 0.44)", "[0.44, 0.52)", "[0.52, inf)"], "xaxis": "x", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y", "type": "bar", "uid": "b6501ac9-71ea-4c0f-898e-af562aab28fe"}, {"alignmentgroup": "True", "customdata": [[18], [18], [18], [18], [18]], "hovertemplate": "Metric=Average Precision<br>Property=RMS Contrast<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Average Precision", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Average Precision", "offsetgroup": "Average Precision", "orientation": "v", "showlegend": false, "textposition": "auto", "width": 0.2, "x": ["(-inf, 0.13)", "[0.13, 0.16)", "[0.16, 0.19)", "[0.19, 0.23)", "[0.23, inf)"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y2", "type": "bar", "uid": "21055d06-a22b-4a04-8962-a41265c66c1f"}, {"alignmentgroup": "True", "customdata": [[18], [18], [18], [18], [18]], "hovertemplate": "Metric=Average Precision<br>Property=Mean Blue Relative Intensity<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Average Precision", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Average Precision", "offsetgroup": "Average Precision", "orientation": "v", "showlegend": false, "textposition": "auto", "width": 0.2, "x": ["(-inf, 0.2)", "[0.2, 0.23)", "[0.23, 0.26)", "[0.26, 0.29)", "[0.29, inf)"], "xaxis": "x3", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y3", "type": "bar", "uid": "03798e8c-8157-436d-a782-c6f6e4d305b6"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"showarrow": false, "text": "Brightness", "x": 0.14666666666666667, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "RMS Contrast", "x": 0.49, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Mean Blue Relative Intensity", "x": 0.8333333333333333, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Average Precision", "textangle": 90, "x": 0.98, "xanchor": "left", "xref": "paper", "y": 0.5, "yanchor": "middle", "yref": "paper"}], "barmode": "group", "legend": {"title": {"text": "Metric"}, "tracegroupgap": 0}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Metric Score Per Property Value Segment (showing top 3 properties by diffrence in segments)"}, "xaxis": {"anchor": "y", "domain": [0.0, 0.29333333333333333], "type": "category"}, "yaxis": {"anchor": "x", "domain": [0.0, 1.0], "showticklabels": true}, "xaxis2": {"anchor": "y2", "domain": [0.3433333333333333, 0.6366666666666667], "type": "category"}, "yaxis2": {"anchor": "x2", "domain": [0.0, 1.0], "matches": "y", "showticklabels": true}, "xaxis3": {"anchor": "y3", "domain": [0.6866666666666666, 0.98], "type": "category"}, "yaxis3": {"anchor": "x3", "domain": [0.0, 1.0], "matches": "y", "showticklabels": true}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 0, "y", "buffer"], "data": "UOFT4sEBZD+6EJcGS8x1P2gkhY/WApw/UGgMQnwpoz/NSkZvchKmPw=="}, {"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "qjdGlZCXij9xnsMvsMiFP1b//Ih7IIM/ls5SDDJMrT8aPbEx4+6NPw=="}, {"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "SYq3yNbwgD9CQ0U/Qtd/PxDD/6MD8Is/5zzwEx41mT/6j4Ubqhi0Pw=="}]}, "20fbecf8ad2947caabb879acda1806cb": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_36cc30004bd84774b0bf090ace70c300", "style": "IPY_MODEL_36831dd6236143cf9af88a514530bb02", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\" style=\"font-size: 14px;\">Go to top</a>"}}, "36cc30004bd84774b0bf090ace70c300": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "36831dd6236143cf9af88a514530bb02": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "fc11eba7832642089008916252071df2": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e4fa5ef4c75c4026a8399e9b4004efd0": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "8a20b5eeff034aacbce6b310c72f70e4": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_ab9b1938f6b74028bb2c577d6a3fa169", "IPY_MODEL_5d11dd22872042e5b253a29814adca85", "IPY_MODEL_0ac62e96d8844c37b026ed0e984c1229", "IPY_MODEL_27411620eba44103bf206445b8bb4b8f"], "layout": "IPY_MODEL_d37d34c94dfa47d494b40998c7613d68"}}, "ab9b1938f6b74028bb2c577d6a3fa169": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_92923fc9cfb941899306b033c3f12a85", "style": "IPY_MODEL_65246d5c723146e9883e0ed1055397b1", "value": "<h4 id=\"ImageSegmentPerformance-TrainDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\"><b>Image Segment Performance - Train Dataset</b></h4>"}}, "92923fc9cfb941899306b033c3f12a85": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "65246d5c723146e9883e0ed1055397b1": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "5d11dd22872042e5b253a29814adca85": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_512826ea043c47b89a8c47caf808bc0a", "style": "IPY_MODEL_2c5910a19f4843be8ec8d233afc3745c", "value": "<p>Segment the data by various properties of the image, and compare the performance of the segments. <a href=\"https://docs.deepchecks.com/0.10/checks_gallery/vision/model_evaluation/plot_image_segment_performance.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "512826ea043c47b89a8c47caf808bc0a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "2c5910a19f4843be8ec8d233afc3745c": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "0ac62e96d8844c37b026ed0e984c1229": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_a9f2fa2f9ad9438f9850f64f2d81f494", "style": "IPY_MODEL_05431705ad5d4d8e83ef74fa72794d26", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_08581_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_08581_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_08581_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_08581_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_08581_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_08581_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_08581_row0_col0\" class=\"data row0 col0\" ><div style=\"color: red;text-align: center\">\u2716</div></td>\n      <td id=\"T_08581_row0_col1\" class=\"data row0 col1\" >Segment's ratio between score to mean is greater than 80%</td>\n      <td id=\"T_08581_row0_col2\" class=\"data row0 col2\" >Properties with failed segments: Brightness: {'Range': '[0.32, 0.38)', 'Metric': 'Average Recall', 'Ratio': 0.53}, Mean Blue Relative Intensity: {'Range': '(-inf, 0.2)', 'Metric': 'Average Recall', 'Ratio': 0.68}, Mean Green Relative Intensity: {'Range': '[0.45, 0.48)', 'Metric': 'Average Precision', 'Ratio': 0.54}, Mean Red Relative Intensity: {'Range': '(-inf, 0.31)', 'Metric': 'Average Recall', 'Ratio': 0.71}, RMS Contrast: {'Range': '[0.17, 0.2)', 'Metric': 'Average Precision', 'Ratio': 0.64}</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "a9f2fa2f9ad9438f9850f64f2d81f494": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "05431705ad5d4d8e83ef74fa72794d26": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "27411620eba44103bf206445b8bb4b8f": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_d409e7a558194af1a85175b11e566942", "IPY_MODEL_99bf8372361f4ea38b9501dd6f4be76a", "IPY_MODEL_a29fd3afedbf4735a0afc3f332f46089"], "layout": "IPY_MODEL_f75dc0dee6674740bad21655adfa0fed"}}, "d409e7a558194af1a85175b11e566942": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_b853d1f1daa9421abae69f88db690ce5", "style": "IPY_MODEL_171244a384bf43a8bc4c36ce187fc8d3", "value": "<h5><b>Additional Outputs</b></h5>"}}, "b853d1f1daa9421abae69f88db690ce5": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "171244a384bf43a8bc4c36ce187fc8d3": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "99bf8372361f4ea38b9501dd6f4be76a": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"alignmentgroup": "True", "customdata": [[161], [161], [161], [161], [161]], "hovertemplate": "Metric=Average Precision<br>Property=RMS Contrast<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Average Precision", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Average Precision", "offsetgroup": "Average Precision", "orientation": "v", "showlegend": true, "textposition": "auto", "width": 0.2, "x": ["(-inf, 0.13)", "[0.13, 0.17)", "[0.17, 0.2)", "[0.2, 0.22)", "[0.22, inf)"], "xaxis": "x", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y", "type": "bar", "uid": "ba63ad74-4f2a-46cd-af67-bea8ccb2aa51"}, {"alignmentgroup": "True", "customdata": [[161], [161], [161], [161], [161]], "hovertemplate": "Metric=Average Precision<br>Property=Mean Red Relative Intensity<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Average Precision", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Average Precision", "offsetgroup": "Average Precision", "orientation": "v", "showlegend": false, "textposition": "auto", "width": 0.2, "x": ["(-inf, 0.31)", "[0.31, 0.33)", "[0.33, 0.34)", "[0.34, 0.36)", "[0.36, inf)"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y2", "type": "bar", "uid": "d462f50e-5932-45bf-b778-54bb06db15ec"}, {"alignmentgroup": "True", "customdata": [[161], [161], [161], [161], [161]], "hovertemplate": "Metric=Average Precision<br>Property=Mean Green Relative Intensity<br>Range=%{x}<br>Value=%{y}<br>Number of samples=%{customdata[0]}<extra></extra>", "legendgroup": "Average Precision", "marker": {"color": "rgb(102, 197, 204)", "pattern": {"shape": ""}}, "name": "Average Precision", "offsetgroup": "Average Precision", "orientation": "v", "showlegend": false, "textposition": "auto", "width": 0.2, "x": ["(-inf, 0.36)", "[0.36, 0.41)", "[0.41, 0.45)", "[0.45, 0.48)", "[0.48, inf)"], "xaxis": "x3", "y": {"dtype": "float64", "shape": [5]}, "yaxis": "y3", "type": "bar", "uid": "8a45a201-7caa-4776-9684-da3d378b2711"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"showarrow": false, "text": "RMS Contrast", "x": 0.14666666666666667, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Mean Red Relative Intensity", "x": 0.49, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Mean Green Relative Intensity", "x": 0.8333333333333333, "xanchor": "center", "xref": "paper", "y": 1.0, "yanchor": "bottom", "yref": "paper"}, {"showarrow": false, "text": "Average Precision", "textangle": 90, "x": 0.98, "xanchor": "left", "xref": "paper", "y": 0.5, "yanchor": "middle", "yref": "paper"}], "barmode": "group", "legend": {"title": {"text": "Metric"}, "tracegroupgap": 0}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Metric Score Per Property Value Segment (showing top 3 properties by diffrence in segments)"}, "xaxis": {"anchor": "y", "domain": [0.0, 0.29333333333333333], "type": "category"}, "yaxis": {"anchor": "x", "domain": [0.0, 1.0], "showticklabels": true}, "xaxis2": {"anchor": "y2", "domain": [0.3433333333333333, 0.6366666666666667], "type": "category"}, "yaxis2": {"anchor": "x2", "domain": [0.0, 1.0], "matches": "y", "showticklabels": true}, "xaxis3": {"anchor": "y3", "domain": [0.6866666666666666, 0.98], "type": "category"}, "yaxis3": {"anchor": "x3", "domain": [0.0, 1.0], "matches": "y", "showticklabels": true}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 0, "y", "buffer"], "data": "JXRcXuJalz+r47LAByaWPzYUli4HK5I/Iz8Q103dnz/G/oETTdimPw=="}, {"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "yjHMU8Kbkz+KLQLnymqTP3ea8WbsTJQ/HCKWQnsdlD8hb5+BaSGoPw=="}, {"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "YsKDDHeUpz/rH3r8KfagP/balbPxtJM/5SBNxni8jT+R12fT6YSWPw=="}]}, "a29fd3afedbf4735a0afc3f332f46089": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_c85e4868db294f64baa3dc8cec49271e", "style": "IPY_MODEL_9c868d004fdf4d07bd3e67c50946769d", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-BMENU\" style=\"font-size: 14px;\">Go to top</a>"}}, "c85e4868db294f64baa3dc8cec49271e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9c868d004fdf4d07bd3e67c50946769d": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "f75dc0dee6674740bad21655adfa0fed": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d37d34c94dfa47d494b40998c7613d68": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "c56abded02d24be781f449e45fc1450f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "c50834404691442b94fb11f4746bbefd": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "4cf7c9566e934cebaf2195745efa57de": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "266d19bfedbf4d25944c3d18cd3339b9": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_9b94d8e91a0a4c909e757584a2836c99", "IPY_MODEL_6af66f9dcc254053924de32b540f57f2"], "layout": "IPY_MODEL_62fc1e9069b3411aa724b3b4be2884d4"}}, "9b94d8e91a0a4c909e757584a2836c99": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_9b5e40836e1148fdaf36677d1f154830", "style": "IPY_MODEL_ba49ed417e2c4d83ba05387d3a62a280", "value": "<span id=\"summary_UH17J8QO09VS9KKH4A3YJTU7F-section-I3DO7\"></span>"}}, "9b5e40836e1148fdaf36677d1f154830": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ba49ed417e2c4d83ba05387d3a62a280": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "6af66f9dcc254053924de32b540f57f2": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "_titles": {"0": "Passed"}, "children": ["IPY_MODEL_a8a6c5bd046e482db3f268cc8aec68cc"], "layout": "IPY_MODEL_efa519b0d41e4c1b9fc3e9c2f2ea9226", "selected_index": null}}, "a8a6c5bd046e482db3f268cc8aec68cc": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_bab6744f24fc4e7391f5c9b2c5b8654c", "IPY_MODEL_e67b7022834e40fa80f495eca14268b7", "IPY_MODEL_3c38efbecdd943949ae5f4f73b1ceef8"], "layout": "IPY_MODEL_83786cd902f44630a1168fc9590ce187"}}, "bab6744f24fc4e7391f5c9b2c5b8654c": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_2f5bf14f42c2423fb6075ea8c95ec385", "style": "IPY_MODEL_b80e687aeb0c43e8b16fbff46d0948bd", "value": "<style type=\"text/css\">\n#T_1517c_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_1517c_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_1517c_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_1517c_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_1517c_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_1517c_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Check</th>\n      <th class=\"col_heading level0 col2\" >Condition</th>\n      <th class=\"col_heading level0 col3\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_1517c_row0_col0\" class=\"data row0 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_1517c_row0_col1\" class=\"data row0 col1\" ><a href=\"#TrainTestPredictionDrift_UH17J8QO09VS9KKH4A3YJTU7F-section-I3DO7\">Train Test Prediction Drift</a></td>\n      <td id=\"T_1517c_row0_col2\" class=\"data row0 col2\" >categorical drift score < 0.15 and numerical drift score < 0.075 for prediction drift</td>\n      <td id=\"T_1517c_row0_col3\" class=\"data row0 col3\" >Passed for 3 prediction properties out of 3 prediction properties.\nFound prediction property \"Samples Per Class\" has the highest categorical drift score: 0\nFound prediction property \"Bounding Box Area (in pixels)\" has the highest numerical drift score: 0.05</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "2f5bf14f42c2423fb6075ea8c95ec385": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b80e687aeb0c43e8b16fbff46d0948bd": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "e67b7022834e40fa80f495eca14268b7": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_4e5a1176b5fe4cf5b0ad0bd3ed2dd0ec", "style": "IPY_MODEL_883a834b3f8e4f3e9047de3136e03151", "value": "<hr style=\"background-color: #eee;border: 0 none;color: #eee;height: 4px;\">"}}, "4e5a1176b5fe4cf5b0ad0bd3ed2dd0ec": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "883a834b3f8e4f3e9047de3136e03151": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "3c38efbecdd943949ae5f4f73b1ceef8": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_a1b72f3388b541e9a9614b7176740bc9", "IPY_MODEL_d61b468321bb4d09ad71a6365c360049", "IPY_MODEL_bf560ee04c8c4db3a9727073c7e11b97", "IPY_MODEL_64f0559a7e6c445ba952636ecf033828"], "layout": "IPY_MODEL_70fada7b794c4857ad13d3ac5fb4ee14"}}, "a1b72f3388b541e9a9614b7176740bc9": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_a0dc4bcd89b1458495a96b1930a4599e", "style": "IPY_MODEL_b5ec4a913e6f455c9c60d2a408a9d7ad", "value": "<h4 id=\"TrainTestPredictionDrift_UH17J8QO09VS9KKH4A3YJTU7F-section-I3DO7\"><b>Train Test Prediction Drift</b></h4>"}}, "a0dc4bcd89b1458495a96b1930a4599e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b5ec4a913e6f455c9c60d2a408a9d7ad": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "d61b468321bb4d09ad71a6365c360049": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6caaad81ff1f4334a20cce06969be134", "style": "IPY_MODEL_e926ee71ba00470f8b1f034118453ddc", "value": "<p>    Calculate prediction drift between train dataset and test dataset, using statistical measures. <a href=\"https://docs.deepchecks.com/0.10/checks_gallery/vision/model_evaluation/plot_train_test_prediction_drift.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "6caaad81ff1f4334a20cce06969be134": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e926ee71ba00470f8b1f034118453ddc": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "bf560ee04c8c4db3a9727073c7e11b97": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_1de21498a93a4747a03dcffaa9a99f6c", "style": "IPY_MODEL_8a97d9374e5e454cbe5bb14c76f4e853", "value": "<h5><b>Conditions Summary</b></h5><style type=\"text/css\">\n#T_08408_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_08408_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_08408_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_08408_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_08408_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_08408_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Status</th>\n      <th class=\"col_heading level0 col1\" >Condition</th>\n      <th class=\"col_heading level0 col2\" >More Info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_08408_row0_col0\" class=\"data row0 col0\" ><div style=\"color: green;text-align: center\">\u2713</div></td>\n      <td id=\"T_08408_row0_col1\" class=\"data row0 col1\" >categorical drift score < 0.15 and numerical drift score < 0.075 for prediction drift</td>\n      <td id=\"T_08408_row0_col2\" class=\"data row0 col2\" >Passed for 3 prediction properties out of 3 prediction properties.\nFound prediction property \"Samples Per Class\" has the highest categorical drift score: 0\nFound prediction property \"Bounding Box Area (in pixels)\" has the highest numerical drift score: 0.05</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "1de21498a93a4747a03dcffaa9a99f6c": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "8a97d9374e5e454cbe5bb14c76f4e853": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "64f0559a7e6c445ba952636ecf033828": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_d41eb9bdbf47482aae571b4fea835b6b", "IPY_MODEL_935eb63fa0bc4437900d6a22cf7e2e5a", "IPY_MODEL_fa73ea0ef27b438c9bd9a306cdf25c1d", "IPY_MODEL_92ab8a7e96e744629dde4f1163e33cc9", "IPY_MODEL_14df8b60a6114f8dbd435a2960ee720c", "IPY_MODEL_e8b3611aaea24bcd9e6d0bef18ca985d", "IPY_MODEL_fdef8139f4e243f18cc78a88e8bf12de"], "layout": "IPY_MODEL_8b04e3efb3c94938a42cb440df78aed3"}}, "d41eb9bdbf47482aae571b4fea835b6b": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6ce5955862f544648ce859e10645b11e", "style": "IPY_MODEL_6239a2c9fd1a414db1583c6fa2e5b094", "value": "<h5><b>Additional Outputs</b></h5>"}}, "6ce5955862f544648ce859e10645b11e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "6239a2c9fd1a414db1583c6fa2e5b094": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "935eb63fa0bc4437900d6a22cf7e2e5a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_cdce865f1dbe49d3b464b3ac1596b8d5", "style": "IPY_MODEL_de9c82fc9dfd4cb1a4cf91e842070a91", "value": "<div><span>The Drift score is a measure for the difference between two distributions. In this check, drift is measured for the distribution of the following prediction properties: ['Samples Per Class', 'Bounding Box Area (in pixels)', 'Number of Bounding Boxes Per Image']. </span></div>"}}, "cdce865f1dbe49d3b464b3ac1596b8d5": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "de9c82fc9dfd4cb1a4cf91e842070a91": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "fa73ea0ef27b438c9bd9a306cdf25c1d": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6fb75b3219e94bdc8e24175986f8497f", "style": "IPY_MODEL_eca583adfb6342feb6ece59c87a09d48", "value": "<div>For discrete distribution plots, showing the top 10 categories with largest difference between train and test.</div>"}}, "6fb75b3219e94bdc8e24175986f8497f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "eca583adfb6342feb6ece59c87a09d48": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "92ab8a7e96e744629dde4f1163e33cc9": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"base": 0, "marker": {"color": "#01B8AA"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.049099838706703425], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "8221a3d9-0428-4ecd-99f2-77a16307ad30"}, {"fill": "tozeroy", "line": {"color": "#00008b", "shape": "spline"}, "name": "Train Dataset", "x": [0.0, 40.57232177734375, 88.40019165039064, 101.94977111816407, 142.8851641845703, 144.5743621826172, 209.68844116210937, 210.84811463647958, 233.3551153564453, 255.44622497558595, 277.50562866210936, 286.138935546875, 337.81744506835935, 341.54924926757815, 375.35724609375, 391.64548461914063, 421.69622927295916, 435.5433337402344, 476.9918273925781, 477.0549755859373, 532.7956689453126, 550.8078393554688, 609.4133251953125, 610.4117138671875, 632.5443439094388, 674.1291381835938, 687.723544921875, 729.588984375, 790.2680761718752, 822.4560107421875, 843.3924585459183, 874.9542114257813, 967.7559423828125, 989.35328125, 1047.1588916015626, 1054.2405731823978, 1059.181806640625, 1146.2531396484376, 1189.4227539062501, 1239.7696142578125, 1265.0886878188776, 1310.62958984375, 1315.4789306640625, 1382.850361328125, 1405.4354541015625, 1434.7304101562502, 1475.936802455357, 1485.2038964843753, 1508.4929492187503, 1533.6705233713844, 1541.8585400390625, 1561.3472802734375, 1602.7968017578128, 1609.0809326171875, 1609.0809326171875, 1648.7953320312502, 1659.3756689453126, 1666.1349479313424, 1686.7849170918366, 1706.5016845703126, 1714.1851367187503, 1730.3008154296874, 1757.827626953125, 1772.8928173828126, 1808.6400146484375, 1808.6400146484375, 1809.9860107421875, 1844.88837890625, 1852.6269775390624, 1873.8377685546877, 1894.8460302734375, 1897.6330317283162, 1921.667001953125, 1934.5615966796875, 1936.8498779296876, 1975.7114111328126, 1981.9230712890624, 2022.8239453125002, 2027.8680615234375, 2059.975859375, 2064.82529296875, 2089.3714453125, 2108.4811463647957, 2111.687529296875, 2130.08115234375, 2159.629091796875, 2188.644921875, 2204.19013671875, 2235.8791796875003, 2251.7717968750003, 2252.1300976562497, 2284.6786328125004, 2312.387158203125, 2319.3292610012754, 2353.81546875, 2379.20119140625, 2387.1789550781255, 2443.326552734375, 2470.87064453125, 2500.2282519531245, 2514.273642578125, 2530.177375637755, 2537.66951171875, 2564.4442675781247, 2587.2829687500002, 2623.5709472656254, 2674.396376953125, 2677.5849609375, 2741.0254902742345, 2780.139726562501, 2794.009824218751, 2895.4798632812503, 2951.873604910714, 3017.54365234375, 3083.182246093753, 3162.7217195471935, 3289.70091796875, 3373.5698341836733, 3454.78091796875, 3584.417948820153, 3795.2660634566323, 4006.114178093112, 4216.962292729591, 4427.810407366072, 4638.658522002551, 4849.50663663903, 5060.35475127551, 5271.20286591199, 5482.050980548469, 5692.899095184948, 5903.747209821428, 6114.595324457908, 6325.443439094387, 6536.291553730867, 6747.1396683673465, 6957.987783003826, 7168.835897640306, 7379.684012276785, 7590.532126913265, 7801.380241549745, 8012.228356186224, 8223.076470822703, 8433.924585459183, 8644.772700095662, 8855.620814732143, 9066.468929368622, 9277.317044005102, 9488.165158641581, 9699.01327327806, 9909.86138791454, 10120.70950255102, 10331.5576171875], "xaxis": "x2", "y": {"dtype": "float64", "shape": [152]}, "yaxis": "y2", "type": "scatter", "uid": "91dcff91-d280-42da-988e-cc3ff173342c"}, {"line": {"color": "#00008b", "dash": "dash"}, "mode": "lines+markers", "name": "Train Mean", "x": [1533.6705233713844, 1533.6705233713844], "xaxis": "x2", "y": [0, 0.0003529046217757998], "yaxis": "y2", "type": "scatter", "uid": "e3e9529b-92d0-4da3-a383-418133443318"}, {"line": {"color": "#00008b"}, "mode": "lines", "name": "Train Median", "x": [1609.0809326171875, 1609.0809326171875], "xaxis": "x2", "y": [0, 0.00037338766491612556], "yaxis": "y2", "type": "scatter", "uid": "2bc64b29-7d51-4cf5-85ee-f8585d17dbdd"}, {"fill": "tozeroy", "line": {"color": "#69b3a2", "shape": "spline"}, "name": "Test Dataset", "x": [0.0, 40.57232177734375, 88.40019165039064, 101.94977111816407, 142.8851641845703, 144.5743621826172, 209.68844116210937, 210.84811463647958, 233.3551153564453, 255.44622497558595, 277.50562866210936, 286.138935546875, 337.81744506835935, 341.54924926757815, 375.35724609375, 391.64548461914063, 421.69622927295916, 435.5433337402344, 476.9918273925781, 477.0549755859373, 532.7956689453126, 550.8078393554688, 609.4133251953125, 610.4117138671875, 632.5443439094388, 674.1291381835938, 687.723544921875, 729.588984375, 790.2680761718752, 822.4560107421875, 843.3924585459183, 874.9542114257813, 967.7559423828125, 989.35328125, 1047.1588916015626, 1054.2405731823978, 1059.181806640625, 1146.2531396484376, 1189.4227539062501, 1239.7696142578125, 1265.0886878188776, 1310.62958984375, 1315.4789306640625, 1382.850361328125, 1405.4354541015625, 1434.7304101562502, 1475.936802455357, 1485.2038964843753, 1508.4929492187503, 1533.6705233713844, 1541.8585400390625, 1561.3472802734375, 1602.7968017578128, 1609.0809326171875, 1609.0809326171875, 1648.7953320312502, 1659.3756689453126, 1666.1349479313424, 1686.7849170918366, 1706.5016845703126, 1714.1851367187503, 1730.3008154296874, 1757.827626953125, 1772.8928173828126, 1808.6400146484375, 1808.6400146484375, 1809.9860107421875, 1844.88837890625, 1852.6269775390624, 1873.8377685546877, 1894.8460302734375, 1897.6330317283162, 1921.667001953125, 1934.5615966796875, 1936.8498779296876, 1975.7114111328126, 1981.9230712890624, 2022.8239453125002, 2027.8680615234375, 2059.975859375, 2064.82529296875, 2089.3714453125, 2108.4811463647957, 2111.687529296875, 2130.08115234375, 2159.629091796875, 2188.644921875, 2204.19013671875, 2235.8791796875003, 2251.7717968750003, 2252.1300976562497, 2284.6786328125004, 2312.387158203125, 2319.3292610012754, 2353.81546875, 2379.20119140625, 2387.1789550781255, 2443.326552734375, 2470.87064453125, 2500.2282519531245, 2514.273642578125, 2530.177375637755, 2537.66951171875, 2564.4442675781247, 2587.2829687500002, 2623.5709472656254, 2674.396376953125, 2677.5849609375, 2741.0254902742345, 2780.139726562501, 2794.009824218751, 2895.4798632812503, 2951.873604910714, 3017.54365234375, 3083.182246093753, 3162.7217195471935, 3289.70091796875, 3373.5698341836733, 3454.78091796875, 3584.417948820153, 3795.2660634566323, 4006.114178093112, 4216.962292729591, 4427.810407366072, 4638.658522002551, 4849.50663663903, 5060.35475127551, 5271.20286591199, 5482.050980548469, 5692.899095184948, 5903.747209821428, 6114.595324457908, 6325.443439094387, 6536.291553730867, 6747.1396683673465, 6957.987783003826, 7168.835897640306, 7379.684012276785, 7590.532126913265, 7801.380241549745, 8012.228356186224, 8223.076470822703, 8433.924585459183, 8644.772700095662, 8855.620814732143, 9066.468929368622, 9277.317044005102, 9488.165158641581, 9699.01327327806, 9909.86138791454, 10120.70950255102, 10331.5576171875], "xaxis": "x2", "y": {"dtype": "float64", "shape": [152]}, "yaxis": "y2", "type": "scatter", "uid": "c0aa3457-b692-4868-9313-67a0b30c2462"}, {"line": {"color": "#69b3a2", "dash": "dash"}, "mode": "lines+markers", "name": "Test Mean", "x": [1666.1349479313424, 1666.1349479313424], "xaxis": "x2", "y": [0, 0.00041698099660084586], "yaxis": "y2", "type": "scatter", "uid": "9c345f53-15a2-449c-87de-12118e9c74c9"}, {"line": {"color": "#69b3a2"}, "mode": "lines", "name": "Test Median", "x": [1808.6400146484375, 1808.6400146484375], "xaxis": "x2", "y": [0, 0.0004779633949450606], "yaxis": "y2", "type": "scatter", "uid": "f7530d1e-d995-4140-9118-4c367d8aa43a"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"font": {"size": 16}, "showarrow": false, "text": "Drift Score (Earth Mover's Distance)", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0000000000000002, "yanchor": "bottom", "yref": "paper"}, {"font": {"size": 16}, "showarrow": false, "text": "Distribution Plot", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 0.7200000000000001, "yanchor": "bottom", "yref": "paper"}], "bargroupgap": 0, "height": 400, "legend": {"title": {"text": "Legend"}, "y": 0.6, "yanchor": "top"}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Bounding Box Area (in pixels)", "x": 0.5, "xanchor": "center"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "dtick": 0.05, "fixedrange": true, "gridcolor": "black", "linecolor": "black", "range": [0, 0.4], "showgrid": false}, "yaxis": {"anchor": "x", "autorange": true, "color": "black", "domain": [0.9200000000000002, 1.0], "fixedrange": true, "rangemode": "normal", "showgrid": false, "showline": false, "showticklabels": false, "zeroline": false}, "xaxis2": {"anchor": "y2", "domain": [0.0, 1.0], "fixedrange": false, "range": [40.57232177734375, 3454.78091796875], "title": {"text": "Bounding Box Area (in pixels)"}}, "yaxis2": {"anchor": "x2", "domain": [0.0, 0.7200000000000001], "fixedrange": true, "title": {"text": "Probability Density"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "Qq6dYJiZKj+S+FCQre0tP3WLhItI1DA/A8cMau1TMT8eUtQ9XboyP7SgUSUryDI/S0J5sByWND++5A8bAZ00P+m9rqHYGDU/H2qs7aJ/NT9KKzHCWdM1P9dLxITu7jU/wvBccb1XNj8HYSbFZFs2P5pnh2SoZTY/gn4+zY9cNj+mM/p1wjU2Px0hXGYBGzY/dG5xpt6tNT/vwEN5rK01P36RE8oQ5TQ/F/m+RACbND+51gb4+5kzP/g9A4SBlTM/BzbFP1QyMz+MPUdPCnwyPx9kQC+xQjI/MWGTPaicMT9z0LiGQNEwP+YuqbnWejA/BRt4gVlLMD9V3yn6MhEwP7z7ZUkriy8/Lrk2H4eQLz+zm8T5zucvP51iz5ug+S8/WfPS/3oDMD/0Lur3ObMwPxMXGuNvMDE/m5Gv/GfeMT/9zYGQ8z8yPz1lS47A/TI/az2bb+oSMz/Xz9/RfUc0Pxl9TZR1szQ/ereWYmVBNT9ibgGVawo2P6O5IwCLNzY/FfbiuFeoNj8WbSPPwSA3P6nWniZzRzc/8yXEImWiNz85QAeIEF04PwtQPs9neDg/C1A+z2d4OD/iK0E/HR45P7q3ls33Rzk/ksDyiSZiOT9IyfsyS685P4cTGVCr9Dk//jAgP38OOj+XV1R0WUI6PxoaXiE2kzo/bL3oGRe7Oj80QOM9ZAw7PzRA4z1kDDs/mVWMAhIPOz/JLfbhUEo7P5tDKfy1VDs/Z2Ig/OlrOz8gUG4kE3s7P6oGVIt9fDs/j/2lC9GCOz+BdCkr0oE7PwYtv0VSgTs/wdsQcuFpOz+nR+OUgmM7P9NbheSbJzs/zBzpLxUeOz8/qIQQr9Y6PwAPE3VPyjo/U/f0zHiFOj/fzBjl6Eg6Px/We1IrPjo/Qg3oGXH9OT/G4oT/2Yo5P5hfkUeODjk/n08fC5LHOD8ql24SUi44PzJ0xNyN3Tc/XwfJoLTbNz/S1pDiIy83P1KY7yLglTY/62lwhLJuNj+Xda2ZQKg1P4K8zhTnEjU/5PcybIfjND8Z3tdTWJIzP5tNhC3J6zI//Uw/hWc6Mj+yH/GUx+UxP8QCWg1AhjE/+/5yS2BZMT+lNJTe0bkwPxtXFSXiMjA/NiiDkSO+Lj+d7leo8ngsP6m0pvn+VCw/qgGZpCWXKT/rJDBh9vMnPxtwv7r3YSc/EiwEx8ZkIz8hvOWQw1UhP6GMC4u9NR4/VVF89LgmGj/0q7x48c0VPxjcnLLMJhA/qiZ1EjRlCj+NrlKXcqcFP6YpqH9hWP8+dAtMC5co8j56RawDRK/lPnh7aYsesdw+w+qF3zq00z5H1wWX0nzKPhRlLcZg88Q+Spj7/8uXxD6xs/rBstvCPttPFTQLOcI+u7/pCHoAxT6TeNQiSBnDPs2iYlCACLk+k56ex1h/sj6rWitC17OzPilKObiPULQ+x/pFA5Rbsz7l2qsrX5azPpG0U8LcpbI+yA4VXKNHqj5s9MTw5YqWPtY5Qsj0vXQ+KrwxtyH9Qz4fXw1Z39U9PhwvuZZs/m8+ynON6CgHkj7+dr8UucmjPiV7shLmJqU+6Xnm2Osmlj6Rl1EMuVh9Pss0N6zeqYY+LPl4Ppxfnz4YqtQB4XOmPg=="}, {"encoding": "base64", "path": ["_data", 4, "y", "buffer"], "data": "tqNafSkPIz/1dc/TdfMlPz6q64I9SCk/Bt6Pl7cwKj8nh0WossksP2FhlMe54yw/mm29Af4yMD/3Veol+jkwPw+QMT7tuTA/Bjac4xgpMT/dqAVKk4kxP+6iWfBcqzE/jcZx7ZtHMj9qV+Ku6U8yP6CBcQjFiTI/xMBnWOyaMj/DOSMIh6kyPxgr50dBqTI/yQXCymuQMj/Ikb6FW5AyP2r7s0hDPTI/fbuJN/cXMj+hVeSFioExP0r8iOKjfjE/xMw1Dtk7MT9tXQWFUbMwP6s0VPkzhDA/nVIWMDLcLz/KVRtkGSEuP6k7ZMhyPS0/V5vIGsivLD+8ovUmyecrP/vgpWzFJio/FqURaILkKT/pZR6aMIkpP5vUKnM1hyk/Qf6AHRKHKT8U0fjOdjQqPw+C8S+4Cys/+wup6wl3LD8LGJBGplstP0uGLbwIQy8/I6IaQZV8Lz+pkKOwGoMxP3Hnf+B3LzI/2quJcHkcMz8W65s8s380PzA4prh/0jQ/ddgxYkWmNT8hsUZkvI82P5eb1iJY3DY/qzKuRmWTNz8/j+KJ9hc5P2ySNLdMUjk/bJI0t0xSOT+zbZaXk7s6PyUMCGnvGDs/XAJTvsdTOz/JQANQMwM8P7xpRb+3ozw/1HjLGzTgPD+4vBmX9Vo9P+c7dkKUHj4/819O9XiBPj/+tGQm5VI/P/60ZCblUj8/ozv5/A1aPz+BFNAYOQBAPwOATegbEEA/blVL+sw2QD+KnR0xFlZAP5WKITi2WUA/rKJRLulzQD+QfMEARn5AP1xZ1NzYf0A/WhqYR7qOQD8YhslUGY9AP+uA72+5hEA/foMCXfyBQD97jZKAumlAP49k1+AYZUA/mCPPbxpKQD+Ni3aISjFAP+w+IM7TLEA/FqtVsqoRQD/kMpQJ8sE/P9hNd2yuVz8/L1BIiOYaPz9nwNn3a5c+P94juy7VUT4/BkWteTxQPj+nv2jLFbo9P5jCnGr3MT0/vkOhf5YOPT92DfJnh1Y8P8OyQ9NFxTs/7riUgbuVOz/U876/Nio6P5TtjCZmYzk/ADx+kF1/OD8igE+QQQw4P6kWlIo7hTc/XbhKLuxDNz/DScHe6VE2PwBlYOd9eTU/KrBvh10RND+UtV0/XQEyP1PRQGy03zE/qISgqgSGLj+4LQFtjGgrP++vumWoVyo/4kSLAR99Iz/ioVNT4JIgPykvGf2mERw/Gpx0d+WbGD+0LByZx/MVP7RYXxAcCRM/l5pb5I7HED9SsxJOYPYLP2mA8jyqrQE/QI0oo5nW4z61yFL8Zbu1PrkGR7EBYHY+i/KcnKgzJT4M/W90xUHCPTeSmr5gWkw9FftHsG7CwzwQCAa0cqUoPB2p22v2PX07RXiRvPH17TuueJTz+PKLPL9+PeN3JRc9U1gbi3oEkT1dtIEg6jb2PTc0Ut52vkk+U+OHPl98ij6Cp+PD1DC4PkBIRXVhndM+k1Vu9x093D7gqb8XuAvSPjKs+yC5ebQ+ZVxQQPafhD6h0C3ij3FCPt7AuVmtSO09XlroCnujhD0f+sqKftMJPUmyp2HBsHw8LmDtapRL3DvZWokuBMYoO/fojrB2QWM6o8LBzv6SijniS+57b0egOA=="}]}, "14df8b60a6114f8dbd435a2960ee720c": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"base": 0, "marker": {"color": "#01B8AA"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0.020697123714912793], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "90ebd025-bd85-4074-9786-e71fd06dc800"}, {"marker": {"color": "#00008b"}, "name": "Train Dataset", "x": {"dtype": "float64", "shape": [16]}, "xaxis": "x2", "y": {"dtype": "float64", "shape": [16]}, "yaxis": "y2", "type": "bar", "uid": "d0172d5e-37aa-4e43-a130-9bb31c5208bb"}, {"marker": {"color": "#69b3a2"}, "name": "Test Dataset", "x": {"dtype": "float64", "shape": [16]}, "xaxis": "x2", "y": {"dtype": "float64", "shape": [16]}, "yaxis": "y2", "type": "bar", "uid": "c8f70245-1dde-4d6b-9e9f-22819347aa76"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"font": {"size": 16}, "showarrow": false, "text": "Drift Score (Earth Mover's Distance)", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0000000000000002, "yanchor": "bottom", "yref": "paper"}, {"font": {"size": 16}, "showarrow": false, "text": "Distribution Plot", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 0.7200000000000001, "yanchor": "bottom", "yref": "paper"}], "bargroupgap": 0, "height": 400, "legend": {"title": {"text": "Legend"}, "y": 0.6, "yanchor": "top"}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Number of Bounding Boxes Per Image", "x": 0.5, "xanchor": "center"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "dtick": 0.05, "fixedrange": true, "gridcolor": "black", "linecolor": "black", "range": [0, 0.4], "showgrid": false}, "yaxis": {"anchor": "x", "autorange": true, "color": "black", "domain": [0.9200000000000002, 1.0], "fixedrange": true, "rangemode": "normal", "showgrid": false, "showline": false, "showticklabels": false, "zeroline": false}, "xaxis2": {"anchor": "y2", "domain": [0.0, 1.0], "range": [-3.4000000000000004, 20.4], "tickmode": "array", "ticks": "outside", "tickvals": {"dtype": "float64", "shape": [16]}}, "yaxis2": {"anchor": "x2", "autorange": true, "domain": [0.0, 0.7200000000000001], "fixedrange": true, "rangemode": "normal", "title": {"text": "Frequency"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 1, "x", "buffer"], "data": "AAAAAAAAAAAAAAAAAADwPwAAAAAAAABAAAAAAAAACEAAAAAAAAAQQAAAAAAAABRAAAAAAAAAGEAAAAAAAAAcQAAAAAAAACBAAAAAAAAAIkAAAAAAAAAkQAAAAAAAACZAAAAAAAAAKEAAAAAAAAAqQAAAAAAAACxAAAAAAAAAMUA="}, {"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "uQXWM9lxwj+dKnJlbYjHP8QL/wYiscc/ZCELWchCxj8Bpj7fmuW2P7kF1jPZcbI/gU8OlwGfrD+5BdYz2XGiPx2Boq0Gz5E/AaY+35rlhj8dgaKtBs+BP4+TcMZQWoQ/crgM+ORweT+Pk3DGUFpkP4+TcMZQWmQ/j5NwxlBaVD8="}, {"encoding": "base64", "path": ["_data", 2, "x", "buffer"], "data": "AAAAAAAAAAAAAAAAAADwPwAAAAAAAABAAAAAAAAACEAAAAAAAAAQQAAAAAAAABRAAAAAAAAAGEAAAAAAAAAcQAAAAAAAACBAAAAAAAAAIkAAAAAAAAAkQAAAAAAAACZAAAAAAAAAKEAAAAAAAAAqQAAAAAAAACxAAAAAAAAAMUA="}, {"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "F2zBFmzBxj8cx3Ecx3HMPxdswRZswbY/2IIt2IItyD8RERERERHBPxdswRZswaY/HMdxHMdxrD8RERERERGhPxdswRZswYY/F2zBFmzBlj8XbMEWbMGGPxdswRZswYY/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="}, {"encoding": "base64", "path": ["_layout", "xaxis2", "tickvals", "buffer"], "data": "AAAAAAAAAAAAAAAAAADwPwAAAAAAAABAAAAAAAAACEAAAAAAAAAQQAAAAAAAABRAAAAAAAAAGEAAAAAAAAAcQAAAAAAAACBAAAAAAAAAIkAAAAAAAAAkQAAAAAAAACZAAAAAAAAAKEAAAAAAAAAqQAAAAAAAACxAAAAAAAAAMUA="}]}, "e8b3611aaea24bcd9e6d0bef18ca985d": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"base": 0, "marker": {"color": "#01B8AA"}, "offsetgroup": "0", "orientation": "h", "showlegend": false, "x": [0], "xaxis": "x", "y": ["Drift Score"], "yaxis": "y", "type": "bar", "uid": "2c14aced-fe3c-4ded-937a-1c917a1ed690"}, {"marker": {"color": "#00008b"}, "name": "Train Dataset", "x": ["Tomato"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [1]}, "yaxis": "y2", "type": "bar", "uid": "d4c66295-3e17-474e-a2d1-e668ad8676fd"}, {"marker": {"color": "#69b3a2"}, "name": "Test Dataset", "x": ["Tomato"], "xaxis": "x2", "y": {"dtype": "float64", "shape": [1]}, "yaxis": "y2", "type": "bar", "uid": "1448ed9f-e013-4c4d-b186-fa3363076fb6"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"annotations": [{"font": {"size": 16}, "showarrow": false, "text": "Drift Score (Cramer's V)", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 1.0000000000000002, "yanchor": "bottom", "yref": "paper"}, {"font": {"size": 16}, "showarrow": false, "text": "Distribution Plot", "x": 0.5, "xanchor": "center", "xref": "paper", "y": 0.7200000000000001, "yanchor": "bottom", "yref": "paper"}], "bargroupgap": 0, "height": 400, "legend": {"title": {"text": "Legend"}, "y": 0.6, "yanchor": "top"}, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Samples Per Class", "x": 0.5, "xanchor": "center"}, "xaxis": {"anchor": "y", "domain": [0.0, 1.0], "dtick": 0.05, "fixedrange": true, "gridcolor": "black", "linecolor": "black", "range": [0, 0.4], "showgrid": false}, "yaxis": {"anchor": "x", "autorange": true, "color": "black", "domain": [0.9200000000000002, 1.0], "fixedrange": true, "rangemode": "normal", "showgrid": false, "showline": false, "showticklabels": false, "zeroline": false}, "xaxis2": {"anchor": "y2", "domain": [0.0, 1.0], "range": [-3, 3], "type": "category"}, "yaxis2": {"anchor": "x2", "autorange": true, "domain": [0.0, 0.7200000000000001], "fixedrange": true, "rangemode": "normal", "title": {"text": "Frequency"}}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}, "buffers": [{"encoding": "base64", "path": ["_data", 1, "y", "buffer"], "data": "AAAAAAAA8D8="}, {"encoding": "base64", "path": ["_data", 2, "y", "buffer"], "data": "AAAAAAAA8D8="}]}, "fdef8139f4e243f18cc78a88e8bf12de": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_85de352fd65241c78c866d7bf86f1bea", "style": "IPY_MODEL_77c012a1392c4130a0cd414e221d1cfa", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-I3DO7\" style=\"font-size: 14px;\">Go to top</a>"}}, "85de352fd65241c78c866d7bf86f1bea": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "77c012a1392c4130a0cd414e221d1cfa": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "8b04e3efb3c94938a42cb440df78aed3": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "70fada7b794c4857ad13d3ac5fb4ee14": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "83786cd902f44630a1168fc9590ce187": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "efa519b0d41e4c1b9fc3e9c2f2ea9226": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "62fc1e9069b3411aa724b3b4be2884d4": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "34088831643e4ba7a41bcc09fb7eb80d": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_5c83fe99d5a148e5aa9b3c97f032ad4f", "IPY_MODEL_159bfbc5e22c40fb890d719d9595d60b"], "layout": "IPY_MODEL_31c6b92eba4e498b809204c38615e66a"}}, "5c83fe99d5a148e5aa9b3c97f032ad4f": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6facccbc15af46c7a1cc25033e2149c2", "style": "IPY_MODEL_6890d8fab3864ae19ef9254960d766a7", "value": "<span id=\"summary_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\"></span>"}}, "6facccbc15af46c7a1cc25033e2149c2": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "6890d8fab3864ae19ef9254960d766a7": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "159bfbc5e22c40fb890d719d9595d60b": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "_titles": {"0": "Other"}, "children": ["IPY_MODEL_42ca7113e9404eafa30c7a56d47eb10d"], "layout": "IPY_MODEL_88f41219312e442c8be6b3efe7ccaf3a", "selected_index": null}}, "42ca7113e9404eafa30c7a56d47eb10d": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_5e3fe1127a854afaa8228dabbdb9179c", "IPY_MODEL_7c5efa073c7349d293d0430e1a502d6e", "IPY_MODEL_d0fad8b6fe5a4285bc6ae15babb30ee0", "IPY_MODEL_17dbb70cd4c841fc977c81453ed4aa62", "IPY_MODEL_21895f0cb1794402ab33a65fcf01c948", "IPY_MODEL_17dbb70cd4c841fc977c81453ed4aa62", "IPY_MODEL_bb2e76d8fef24274b3687fcfffd10a79", "IPY_MODEL_17dbb70cd4c841fc977c81453ed4aa62", "IPY_MODEL_007b152a75744a7ea16ed8b0549d1f31"], "layout": "IPY_MODEL_eb53de0ba3504204af0dbb8b42503cd9"}}, "5e3fe1127a854afaa8228dabbdb9179c": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_17f0373d82314bd28ad6b85e99952a8b", "style": "IPY_MODEL_ec50b87420de4827908fb76c50fea97a", "value": "<style type=\"text/css\">\n#T_897b4_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_897b4_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_897b4_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_897b4_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_897b4_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_897b4_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Check</th>\n      <th class=\"col_heading level0 col1\" >Summary</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_897b4_row0_col0\" class=\"data row0 col0\" ><a href=\"#MeanAverageRecallReport-TestDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\">Mean Average Recall Report - Test Dataset</a></td>\n      <td id=\"T_897b4_row0_col1\" class=\"data row0 col1\" >Summarize mean average recall metrics on a dataset and model per detections and area range. <a href=\"https://docs.deepchecks.com/0.10/checks_gallery/vision/model_evaluation/plot_mean_average_recall_report.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></td>\n    </tr>\n    <tr>\n      <td id=\"T_897b4_row1_col0\" class=\"data row1 col0\" ><a href=\"#MeanAverageRecallReport-TrainDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\">Mean Average Recall Report - Train Dataset</a></td>\n      <td id=\"T_897b4_row1_col1\" class=\"data row1 col1\" >Summarize mean average recall metrics on a dataset and model per detections and area range. <a href=\"https://docs.deepchecks.com/0.10/checks_gallery/vision/model_evaluation/plot_mean_average_recall_report.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></td>\n    </tr>\n    <tr>\n      <td id=\"T_897b4_row2_col0\" class=\"data row2 col0\" ><a href=\"#ConfusionMatrix-TestDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\">Confusion Matrix - Test Dataset</a></td>\n      <td id=\"T_897b4_row2_col1\" class=\"data row2 col1\" >Calculate the confusion matrix of the model on the given dataset. <a href=\"https://docs.deepchecks.com/0.10/checks_gallery/vision/model_evaluation/plot_confusion_matrix.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></td>\n    </tr>\n    <tr>\n      <td id=\"T_897b4_row3_col0\" class=\"data row3 col0\" ><a href=\"#ConfusionMatrix-TrainDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\">Confusion Matrix - Train Dataset</a></td>\n      <td id=\"T_897b4_row3_col1\" class=\"data row3 col1\" >Calculate the confusion matrix of the model on the given dataset. <a href=\"https://docs.deepchecks.com/0.10/checks_gallery/vision/model_evaluation/plot_confusion_matrix.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></td>\n    </tr>\n  </tbody>\n</table>\n"}}, "17f0373d82314bd28ad6b85e99952a8b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ec50b87420de4827908fb76c50fea97a": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "7c5efa073c7349d293d0430e1a502d6e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_23dd658f86774a548b07b185a7839ce7", "style": "IPY_MODEL_045abf6eec2e4c25b2b71a2ce4e0a39a", "value": "<hr style=\"background-color: #eee;border: 0 none;color: #eee;height: 4px;\">"}}, "23dd658f86774a548b07b185a7839ce7": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "045abf6eec2e4c25b2b71a2ce4e0a39a": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "d0fad8b6fe5a4285bc6ae15babb30ee0": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_bbe51d3c545747f0b2591c243919db1c", "IPY_MODEL_05743744a54843ff871c9fd878466c05", "IPY_MODEL_6317039a379d40f6b5108253565bd50c"], "layout": "IPY_MODEL_b691c25877b9489d91f2d39efdfcb50b"}}, "bbe51d3c545747f0b2591c243919db1c": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_1f9bb8bf96f047a2a3db41d9b44d56d5", "style": "IPY_MODEL_b181001a2c914c0fafd069cc04f1eb5a", "value": "<h4 id=\"MeanAverageRecallReport-TestDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\"><b>Mean Average Recall Report - Test Dataset</b></h4>"}}, "1f9bb8bf96f047a2a3db41d9b44d56d5": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b181001a2c914c0fafd069cc04f1eb5a": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "05743744a54843ff871c9fd878466c05": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_beecba8a929f42928a762c24c92baa98", "style": "IPY_MODEL_599794b627874d3ebe943b3739331c7c", "value": "<p>Summarize mean average recall metrics on a dataset and model per detections and area range. <a href=\"https://docs.deepchecks.com/0.10/checks_gallery/vision/model_evaluation/plot_mean_average_recall_report.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "beecba8a929f42928a762c24c92baa98": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "599794b627874d3ebe943b3739331c7c": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "6317039a379d40f6b5108253565bd50c": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_ef0073173ed64b3f91df9f2ce52cdbe8", "IPY_MODEL_7fa5e1ba59d2418997029962843ee14e", "IPY_MODEL_8c642f7790654c84b0e661d79e3626e2"], "layout": "IPY_MODEL_30925faa4aac48e59f9ba74eb0d09ee7"}}, "ef0073173ed64b3f91df9f2ce52cdbe8": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_4b05b5c9e3684e57acce41700c1023b1", "style": "IPY_MODEL_b88e7e307bc846ccbedcb79697074246", "value": "<h5><b>Additional Outputs</b></h5>"}}, "4b05b5c9e3684e57acce41700c1023b1": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b88e7e307bc846ccbedcb79697074246": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "7fa5e1ba59d2418997029962843ee14e": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_52a42ab208624814aec713ddd7cd2c0e", "style": "IPY_MODEL_0dcd7e74b05649aaab839b1e18f9d3f9", "value": "<style type=\"text/css\">\n#T_8635b_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_8635b_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_8635b_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_8635b_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_8635b_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_8635b_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >AR@1 (%)</th>\n      <th class=\"col_heading level0 col1\" >AR@10 (%)</th>\n      <th class=\"col_heading level0 col2\" >AR@100 (%)</th>\n    </tr>\n    <tr>\n      <th class=\"index_name level0\" >Area size</th>\n      <th class=\"blank col0\" >&nbsp;</th>\n      <th class=\"blank col1\" >&nbsp;</th>\n      <th class=\"blank col2\" >&nbsp;</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_8635b_level0_row0\" class=\"row_heading level0 row0\" >All</th>\n      <td id=\"T_8635b_row0_col0\" class=\"data row0 col0\" >0.02</td>\n      <td id=\"T_8635b_row0_col1\" class=\"data row0 col1\" >0.04</td>\n      <td id=\"T_8635b_row0_col2\" class=\"data row0 col2\" >0.04</td>\n    </tr>\n    <tr>\n      <th id=\"T_8635b_level0_row1\" class=\"row_heading level0 row1\" >Small (area < 32^2)</th>\n      <td id=\"T_8635b_row1_col0\" class=\"data row1 col0\" >0.00</td>\n      <td id=\"T_8635b_row1_col1\" class=\"data row1 col1\" >0.01</td>\n      <td id=\"T_8635b_row1_col2\" class=\"data row1 col2\" >0.01</td>\n    </tr>\n    <tr>\n      <th id=\"T_8635b_level0_row2\" class=\"row_heading level0 row2\" >Medium (32^2 < area < 96^2)</th>\n      <td id=\"T_8635b_row2_col0\" class=\"data row2 col0\" >0.07</td>\n      <td id=\"T_8635b_row2_col1\" class=\"data row2 col1\" >0.17</td>\n      <td id=\"T_8635b_row2_col2\" class=\"data row2 col2\" >0.17</td>\n    </tr>\n    <tr>\n      <th id=\"T_8635b_level0_row3\" class=\"row_heading level0 row3\" >Large (area < 96^2)</th>\n      <td id=\"T_8635b_row3_col0\" class=\"data row3 col0\" >0.00</td>\n      <td id=\"T_8635b_row3_col1\" class=\"data row3 col1\" >0.00</td>\n      <td id=\"T_8635b_row3_col2\" class=\"data row3 col2\" >0.00</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "52a42ab208624814aec713ddd7cd2c0e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "0dcd7e74b05649aaab839b1e18f9d3f9": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "8c642f7790654c84b0e661d79e3626e2": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_0ce959b8421e4948a18781e5d727945b", "style": "IPY_MODEL_72c23e44c2b842f5bccda69ee6d8b460", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\" style=\"font-size: 14px;\">Go to top</a>"}}, "0ce959b8421e4948a18781e5d727945b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "72c23e44c2b842f5bccda69ee6d8b460": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "30925faa4aac48e59f9ba74eb0d09ee7": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b691c25877b9489d91f2d39efdfcb50b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "17dbb70cd4c841fc977c81453ed4aa62": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_e9a966ee7ca34d488c2261c2849eb61b", "style": "IPY_MODEL_fea42033561d452f8392ef24051eadf7", "value": "<hr style=\"background-color: #eee;border: 0 none;color: #eee;height: 4px;\">"}}, "e9a966ee7ca34d488c2261c2849eb61b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "fea42033561d452f8392ef24051eadf7": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "21895f0cb1794402ab33a65fcf01c948": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_4bd800aba0b24f83b41ef621e037de5d", "IPY_MODEL_d59722f2ae394c048b9a6c288e07af16", "IPY_MODEL_1d030c8ede374a608816dcc448f3d0b7"], "layout": "IPY_MODEL_92df228ceb114ba6b49ef1822164454f"}}, "4bd800aba0b24f83b41ef621e037de5d": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_1a90e9230d5a41738eacdcf8361f522e", "style": "IPY_MODEL_0fd1b62bc32a4ecfbef5efcb0131a6c3", "value": "<h4 id=\"MeanAverageRecallReport-TrainDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\"><b>Mean Average Recall Report - Train Dataset</b></h4>"}}, "1a90e9230d5a41738eacdcf8361f522e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "0fd1b62bc32a4ecfbef5efcb0131a6c3": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "d59722f2ae394c048b9a6c288e07af16": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_5fbe6199a3ed4fb3863fbd4dfcc8ad84", "style": "IPY_MODEL_16cc798acceb4535af412b74b645f14f", "value": "<p>Summarize mean average recall metrics on a dataset and model per detections and area range. <a href=\"https://docs.deepchecks.com/0.10/checks_gallery/vision/model_evaluation/plot_mean_average_recall_report.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "5fbe6199a3ed4fb3863fbd4dfcc8ad84": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "16cc798acceb4535af412b74b645f14f": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "1d030c8ede374a608816dcc448f3d0b7": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_c732c119432443bd9e60bc8d8c70a4f4", "IPY_MODEL_401f5096fc67437a8ff5b39ba5746043", "IPY_MODEL_3d5a0db584a2459bbe99c7b14821f54c"], "layout": "IPY_MODEL_3fab1d0f95244882b1843ca30f0a587f"}}, "c732c119432443bd9e60bc8d8c70a4f4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_e5141025bbf7420d8b92eb1a2a3ba13b", "style": "IPY_MODEL_e2739cf40ff24233abbee178777fa0ad", "value": "<h5><b>Additional Outputs</b></h5>"}}, "e5141025bbf7420d8b92eb1a2a3ba13b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e2739cf40ff24233abbee178777fa0ad": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "401f5096fc67437a8ff5b39ba5746043": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_aeecdc00880d4ee79f7c47ab4c477dc6", "style": "IPY_MODEL_682c34863fcf4d9788dfe21ccee66bcd", "value": "<style type=\"text/css\">\n#T_5ad0f_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_5ad0f_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_5ad0f_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_5ad0f_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_5ad0f_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_5ad0f_\">\n  <thead>\n    <tr>\n      <th class=\"blank level0\" >&nbsp;</th>\n      <th class=\"col_heading level0 col0\" >AR@1 (%)</th>\n      <th class=\"col_heading level0 col1\" >AR@10 (%)</th>\n      <th class=\"col_heading level0 col2\" >AR@100 (%)</th>\n    </tr>\n    <tr>\n      <th class=\"index_name level0\" >Area size</th>\n      <th class=\"blank col0\" >&nbsp;</th>\n      <th class=\"blank col1\" >&nbsp;</th>\n      <th class=\"blank col2\" >&nbsp;</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th id=\"T_5ad0f_level0_row0\" class=\"row_heading level0 row0\" >All</th>\n      <td id=\"T_5ad0f_row0_col0\" class=\"data row0 col0\" >0.02</td>\n      <td id=\"T_5ad0f_row0_col1\" class=\"data row0 col1\" >0.06</td>\n      <td id=\"T_5ad0f_row0_col2\" class=\"data row0 col2\" >0.06</td>\n    </tr>\n    <tr>\n      <th id=\"T_5ad0f_level0_row1\" class=\"row_heading level0 row1\" >Small (area < 32^2)</th>\n      <td id=\"T_5ad0f_row1_col0\" class=\"data row1 col0\" >0.00</td>\n      <td id=\"T_5ad0f_row1_col1\" class=\"data row1 col1\" >0.01</td>\n      <td id=\"T_5ad0f_row1_col2\" class=\"data row1 col2\" >0.01</td>\n    </tr>\n    <tr>\n      <th id=\"T_5ad0f_level0_row2\" class=\"row_heading level0 row2\" >Medium (32^2 < area < 96^2)</th>\n      <td id=\"T_5ad0f_row2_col0\" class=\"data row2 col0\" >0.09</td>\n      <td id=\"T_5ad0f_row2_col1\" class=\"data row2 col1\" >0.22</td>\n      <td id=\"T_5ad0f_row2_col2\" class=\"data row2 col2\" >0.22</td>\n    </tr>\n    <tr>\n      <th id=\"T_5ad0f_level0_row3\" class=\"row_heading level0 row3\" >Large (area < 96^2)</th>\n      <td id=\"T_5ad0f_row3_col0\" class=\"data row3 col0\" >0.00</td>\n      <td id=\"T_5ad0f_row3_col1\" class=\"data row3 col1\" >0.02</td>\n      <td id=\"T_5ad0f_row3_col2\" class=\"data row3 col2\" >0.02</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "aeecdc00880d4ee79f7c47ab4c477dc6": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "682c34863fcf4d9788dfe21ccee66bcd": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "3d5a0db584a2459bbe99c7b14821f54c": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_59dfce1887f549f3afd4764d2cda4e21", "style": "IPY_MODEL_ef8d44afead247bf9b1a7859246a8131", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\" style=\"font-size: 14px;\">Go to top</a>"}}, "59dfce1887f549f3afd4764d2cda4e21": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ef8d44afead247bf9b1a7859246a8131": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "3fab1d0f95244882b1843ca30f0a587f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "92df228ceb114ba6b49ef1822164454f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "bb2e76d8fef24274b3687fcfffd10a79": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_25028276456445968d9b1f4380eceed2", "IPY_MODEL_a19992fd276f4c68ba446e76662b7986", "IPY_MODEL_a79fc73ae63b466c8291668720fde09f"], "layout": "IPY_MODEL_1428a5cddeec48a597eced47cda7ea00"}}, "25028276456445968d9b1f4380eceed2": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_4b57668c637f4c94a9423add8a1aff64", "style": "IPY_MODEL_2a79ca229625471f862ad15890ca13ec", "value": "<h4 id=\"ConfusionMatrix-TestDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\"><b>Confusion Matrix - Test Dataset</b></h4>"}}, "4b57668c637f4c94a9423add8a1aff64": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "2a79ca229625471f862ad15890ca13ec": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "a19992fd276f4c68ba446e76662b7986": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_0b33e389e5574d8295e843def35c126b", "style": "IPY_MODEL_975da4461abe41f6b97a5d21d3afb206", "value": "<p>Calculate the confusion matrix of the model on the given dataset. <a href=\"https://docs.deepchecks.com/0.10/checks_gallery/vision/model_evaluation/plot_confusion_matrix.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "0b33e389e5574d8295e843def35c126b": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "975da4461abe41f6b97a5d21d3afb206": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "a79fc73ae63b466c8291668720fde09f": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_7490b22fbab44145be478b7d04f139ef", "IPY_MODEL_2ac30d4023134419ab0e806f668b32b6", "IPY_MODEL_1e837f83c17a41b49a00c60791c94dba", "IPY_MODEL_d7462cc33b134b94a9ecbf2bb5f70d1e", "IPY_MODEL_b26029a65d6d4eb38e907114917ca5d4"], "layout": "IPY_MODEL_20113257367f455a989e8b36ec63e291"}}, "7490b22fbab44145be478b7d04f139ef": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_95e0c7db8e2443539a3cf9665eb2174c", "style": "IPY_MODEL_fd6b26c0ab4742c79558ffebf725def7", "value": "<h5><b>Additional Outputs</b></h5>"}}, "95e0c7db8e2443539a3cf9665eb2174c": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "fd6b26c0ab4742c79558ffebf725def7": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "2ac30d4023134419ab0e806f668b32b6": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_96c8e46bfef546b2a2402348dfc0b102", "style": "IPY_MODEL_c4beb904081a4ee089c8b67e4f202fec", "value": "<div>Showing 10 of 1 classes:</div>"}}, "96c8e46bfef546b2a2402348dfc0b102": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "c4beb904081a4ee089c8b67e4f202fec": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "1e837f83c17a41b49a00c60791c94dba": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_ca7b8dd193bb4f65825c08a55707e309", "style": "IPY_MODEL_1f8c5974e65c4f4e8ec3454026623f48", "value": "<div>\"No overlapping\" categories are labels and prediction which did not have a matching label/prediction.<br>For example a predictions that did not have a sufficiently overlapping label bounding box will appear under \"No overlapping\" category in the True Value axis (y-axis).</div>"}}, "ca7b8dd193bb4f65825c08a55707e309": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "1f8c5974e65c4f4e8ec3454026623f48": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "d7462cc33b134b94a9ecbf2bb5f70d1e": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"colorbar": {"title": {"text": "% out of<br>True Values"}}, "text": [[49.0, 369.0], [84.0, 0.0]], "texttemplate": "%{z}%<br>(%{text})", "x": ["Tomato", "No overlapping"], "y": ["Tomato", "No overlapping"], "z": [["11.72", "88.28"], ["100", "0"]], "type": "heatmap", "uid": "4e3a30da-45b2-48fa-b9db-23dc2e48fb2a"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"height": 600, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Percent Out of True Values (Count)"}, "xaxis": {"constrain": "domain", "scaleanchor": "y", "title": {"text": "Predicted Value"}, "type": "category"}, "yaxis": {"autorange": "reversed", "constrain": "domain", "title": {"text": "True value"}, "type": "category"}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}}, "b26029a65d6d4eb38e907114917ca5d4": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_d8f4a0b424544992a1da93682449dd00", "style": "IPY_MODEL_baac3993bc874667b32c8e470b3fc07a", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\" style=\"font-size: 14px;\">Go to top</a>"}}, "d8f4a0b424544992a1da93682449dd00": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "baac3993bc874667b32c8e470b3fc07a": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "20113257367f455a989e8b36ec63e291": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "1428a5cddeec48a597eced47cda7ea00": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "007b152a75744a7ea16ed8b0549d1f31": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "children": ["IPY_MODEL_a6e3276a4ecc441bb62d4354431dd7dd", "IPY_MODEL_04c0ae754040412e8cff00c8dc8f9bb2", "IPY_MODEL_54ad98724b8d40298d6e3231a13161b9"], "layout": "IPY_MODEL_212bdcbb9ab74383a2320084fb9e4d8e"}}, "a6e3276a4ecc441bb62d4354431dd7dd": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_b698d0a9281c4860866fe53f134cef78", "style": "IPY_MODEL_df04b0f20d2f4fd980247000236c18ed", "value": "<h4 id=\"ConfusionMatrix-TrainDataset_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\"><b>Confusion Matrix - Train Dataset</b></h4>"}}, "b698d0a9281c4860866fe53f134cef78": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "df04b0f20d2f4fd980247000236c18ed": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "04c0ae754040412e8cff00c8dc8f9bb2": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_73bae8e8ae394717aeb69cfd5becd8a7", "style": "IPY_MODEL_ae81181a53ba43f0811c4caed20969d1", "value": "<p>Calculate the confusion matrix of the model on the given dataset. <a href=\"https://docs.deepchecks.com/0.10/checks_gallery/vision/model_evaluation/plot_confusion_matrix.html?utm_source=display_output&utm_medium=referral&utm_campaign=check_link\" target=\"_blank\">Read More...</a></p>"}}, "73bae8e8ae394717aeb69cfd5becd8a7": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "ae81181a53ba43f0811c4caed20969d1": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "54ad98724b8d40298d6e3231a13161b9": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_4bfd92fb84f3438d9a98e3cb43382d4a", "IPY_MODEL_447f526c57b24dc3857e6b52809dabf1", "IPY_MODEL_7ba39aef35f4413293d5d65ad8fb09d7", "IPY_MODEL_47c4b16b64fc491a9868b652d91bb7e5", "IPY_MODEL_cbe4bde0f067458db3a9eec901710596"], "layout": "IPY_MODEL_fcb55d9f0a9244c89a0f8bd8f40cd8b6"}}, "4bfd92fb84f3438d9a98e3cb43382d4a": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_7e4fb6c2c96b40c9b3ea41004b0f491f", "style": "IPY_MODEL_9b72d87280484c29a39098e08e1735d9", "value": "<h5><b>Additional Outputs</b></h5>"}}, "7e4fb6c2c96b40c9b3ea41004b0f491f": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "9b72d87280484c29a39098e08e1735d9": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "447f526c57b24dc3857e6b52809dabf1": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_ee13590285d64889baeb1a4a37e7c27c", "style": "IPY_MODEL_7514d5b5e0524b2f8ac9862c037bd4fd", "value": "<div>Showing 10 of 1 classes:</div>"}}, "ee13590285d64889baeb1a4a37e7c27c": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "7514d5b5e0524b2f8ac9862c037bd4fd": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "7ba39aef35f4413293d5d65ad8fb09d7": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_f062f285e91147d494af473c5f4e5831", "style": "IPY_MODEL_fb53c2b5219f4a50a10d511b137246f2", "value": "<div>\"No overlapping\" categories are labels and prediction which did not have a matching label/prediction.<br>For example a predictions that did not have a sufficiently overlapping label bounding box will appear under \"No overlapping\" category in the True Value axis (y-axis).</div>"}}, "f062f285e91147d494af473c5f4e5831": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "fb53c2b5219f4a50a10d511b137246f2": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "47c4b16b64fc491a9868b652d91bb7e5": {"model_name": "FigureModel", "model_module": "jupyterlab-plotly", "model_module_version": "^5.11.0", "state": {"_config": {"plotlyServerURL": "https://plot.ly"}, "_data": [{"colorbar": {"title": {"text": "% out of<br>True Values"}}, "text": [[535.0, 3527.0], [958.0, 0.0]], "texttemplate": "%{z}%<br>(%{text})", "x": ["Tomato", "No overlapping"], "y": ["Tomato", "No overlapping"], "z": [["13.17", "86.83"], ["100", "0"]], "type": "heatmap", "uid": "e30411d6-419b-44fe-8e42-d5ca9df2f556"}], "_dom_classes": [], "_js2py_layoutDelta": {}, "_js2py_pointsCallback": {}, "_js2py_relayout": {}, "_js2py_restyle": {}, "_js2py_traceDeltas": {}, "_js2py_update": {}, "_layout": {"height": 600, "template": {"data": {"barpolar": [{"marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "barpolar"}], "bar": [{"error_x": {"color": "#2a3f5f"}, "error_y": {"color": "#2a3f5f"}, "marker": {"line": {"color": "#E5ECF6", "width": 0.5}, "pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "bar"}], "carpet": [{"aaxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "baxis": {"endlinecolor": "#2a3f5f", "gridcolor": "white", "linecolor": "white", "minorgridcolor": "white", "startlinecolor": "#2a3f5f"}, "type": "carpet"}], "choropleth": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "choropleth"}], "contourcarpet": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "contourcarpet"}], "contour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "contour"}], "heatmapgl": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmapgl"}], "heatmap": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "heatmap"}], "histogram2dcontour": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2dcontour"}], "histogram2d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "histogram2d"}], "histogram": [{"marker": {"pattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}}, "type": "histogram"}], "mesh3d": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "type": "mesh3d"}], "parcoords": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "parcoords"}], "pie": [{"automargin": true, "type": "pie"}], "scatter3d": [{"line": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatter3d"}], "scattercarpet": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattercarpet"}], "scattergeo": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergeo"}], "scattergl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattergl"}], "scattermapbox": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scattermapbox"}], "scatterpolargl": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolargl"}], "scatterpolar": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterpolar"}], "scatter": [{"fillpattern": {"fillmode": "overlay", "size": 10, "solidity": 0.2}, "type": "scatter"}], "scatterternary": [{"marker": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "type": "scatterternary"}], "surface": [{"colorbar": {"outlinewidth": 0, "ticks": ""}, "colorscale": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "type": "surface"}], "table": [{"cells": {"fill": {"color": "#EBF0F8"}, "line": {"color": "white"}}, "header": {"fill": {"color": "#C8D4E3"}, "line": {"color": "white"}}, "type": "table"}]}, "layout": {"annotationdefaults": {"arrowcolor": "#2a3f5f", "arrowhead": 0, "arrowwidth": 1}, "autotypenumbers": "strict", "coloraxis": {"colorbar": {"outlinewidth": 0, "ticks": ""}}, "colorscale": {"diverging": [[0, "#8e0152"], [0.1, "#c51b7d"], [0.2, "#de77ae"], [0.3, "#f1b6da"], [0.4, "#fde0ef"], [0.5, "#f7f7f7"], [0.6, "#e6f5d0"], [0.7, "#b8e186"], [0.8, "#7fbc41"], [0.9, "#4d9221"], [1, "#276419"]], "sequential": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]], "sequentialminus": [[0.0, "#0d0887"], [0.1111111111111111, "#46039f"], [0.2222222222222222, "#7201a8"], [0.3333333333333333, "#9c179e"], [0.4444444444444444, "#bd3786"], [0.5555555555555556, "#d8576b"], [0.6666666666666666, "#ed7953"], [0.7777777777777778, "#fb9f3a"], [0.8888888888888888, "#fdca26"], [1.0, "#f0f921"]]}, "colorway": ["#636efa", "#EF553B", "#00cc96", "#ab63fa", "#FFA15A", "#19d3f3", "#FF6692", "#B6E880", "#FF97FF", "#FECB52"], "font": {"color": "#2a3f5f"}, "geo": {"bgcolor": "white", "lakecolor": "white", "landcolor": "#E5ECF6", "showlakes": true, "showland": true, "subunitcolor": "white"}, "hoverlabel": {"align": "left"}, "hovermode": "closest", "mapbox": {"style": "light"}, "paper_bgcolor": "white", "plot_bgcolor": "#E5ECF6", "polar": {"angularaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "radialaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "scene": {"xaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "yaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}, "zaxis": {"backgroundcolor": "#E5ECF6", "gridcolor": "white", "gridwidth": 2, "linecolor": "white", "showbackground": true, "ticks": "", "zerolinecolor": "white"}}, "shapedefaults": {"line": {"color": "#2a3f5f"}}, "ternary": {"aaxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "baxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}, "bgcolor": "#E5ECF6", "caxis": {"gridcolor": "white", "linecolor": "white", "ticks": ""}}, "title": {"x": 0.05}, "xaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}, "yaxis": {"automargin": true, "gridcolor": "white", "linecolor": "white", "ticks": "", "title": {"standoff": 15}, "zerolinecolor": "white", "zerolinewidth": 2}}}, "title": {"text": "Percent Out of True Values (Count)"}, "xaxis": {"constrain": "domain", "scaleanchor": "y", "title": {"text": "Predicted Value"}, "type": "category"}, "yaxis": {"autorange": "reversed", "constrain": "domain", "title": {"text": "True value"}, "type": "category"}}, "_py2js_addTraces": {}, "_py2js_animate": {}, "_py2js_deleteTraces": {}, "_py2js_moveTraces": {}, "_py2js_relayout": {}, "_py2js_removeLayoutProps": {}, "_py2js_removeTraceProps": {}, "_py2js_restyle": {}, "_py2js_update": {}, "_view_count": 0}}, "cbe4bde0f067458db3a9eec901710596": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_ca5394ba4cf141bfac226465cb3ea6cc", "style": "IPY_MODEL_a13fe060b1d6490f94c1b8881d7c15d2", "value": "<br><a href=\"#summary_UH17J8QO09VS9KKH4A3YJTU7F-section-002G3\" style=\"font-size: 14px;\">Go to top</a>"}}, "ca5394ba4cf141bfac226465cb3ea6cc": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a13fe060b1d6490f94c1b8881d7c15d2": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "fcb55d9f0a9244c89a0f8bd8f40cd8b6": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "212bdcbb9ab74383a2320084fb9e4d8e": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "eb53de0ba3504204af0dbb8b42503cd9": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "88f41219312e442c8be6b3efe7ccaf3a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "31c6b92eba4e498b809204c38615e66a": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "44d82099e19544d7bd3c7301aca05dc0": {"model_name": "VBoxModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "children": ["IPY_MODEL_fef9c03138194f58ba9b1dc103c8bbfe", "IPY_MODEL_41446da0827940c49ad4b39d81222f7c"], "layout": "IPY_MODEL_b3ec3b2512db410a95eb7ea12399479c"}}, "fef9c03138194f58ba9b1dc103c8bbfe": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_6958ed0a92c64df6b3da4cc41d00387d", "style": "IPY_MODEL_158c61121d1446c6b8621da5b7cd6252"}}, "6958ed0a92c64df6b3da4cc41d00387d": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "158c61121d1446c6b8621da5b7cd6252": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "41446da0827940c49ad4b39d81222f7c": {"model_name": "AccordionModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": ["rendered_html", "jp-RenderedHTMLCommon", "jp-RenderedHTML", "jp-OutputArea-output"], "_titles": {"0": "Didn't Run"}, "children": ["IPY_MODEL_67dd7da9a9934cd2b862ede9418013c1"], "layout": "IPY_MODEL_54d92d0bfc764e77a752cd785667bd16", "selected_index": null}}, "67dd7da9a9934cd2b862ede9418013c1": {"model_name": "HTMLModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {"_dom_classes": [], "layout": "IPY_MODEL_38c6d9b6e1154002864264e15aae6da3", "style": "IPY_MODEL_e4bdbd09a97e4eafb50723813d7108df", "value": "<style type=\"text/css\">\n#T_f0fa7_ table {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_f0fa7_ thead {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_f0fa7_ tbody {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_f0fa7_ th {\n  text-align: left;\n  white-space: pre-wrap;\n}\n#T_f0fa7_ td {\n  text-align: left;\n  white-space: pre-wrap;\n}\n</style>\n<table id=\"T_f0fa7_\">\n  <thead>\n    <tr>\n      <th class=\"col_heading level0 col0\" >Check</th>\n      <th class=\"col_heading level0 col1\" >Reason</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_f0fa7_row0_col0\" class=\"data row0 col0\" >Simple Model Comparison</td>\n      <td id=\"T_f0fa7_row0_col1\" class=\"data row0 col1\" >Check is irrelevant for task of type TaskType.OBJECT_DETECTION</td>\n    </tr>\n    <tr>\n      <td id=\"T_f0fa7_row1_col0\" class=\"data row1 col0\" >Model Error Analysis</td>\n      <td id=\"T_f0fa7_row1_col1\" class=\"data row1 col1\" >DeepchecksProcessError: Unable to train meaningful error model (r^2 score: 0.2)</td>\n    </tr>\n  </tbody>\n</table>\n"}}, "38c6d9b6e1154002864264e15aae6da3": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "e4bdbd09a97e4eafb50723813d7108df": {"model_name": "DescriptionStyleModel", "model_module": "@jupyter-widgets/controls", "model_module_version": "1.5.0", "state": {}}, "54d92d0bfc764e77a752cd785667bd16": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "b3ec3b2512db410a95eb7ea12399479c": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "a8b4318e18964a06a626dc626ce2e6af": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}, "d5a6aac8ac704d9f9ec1fe3b85fc2ee3": {"model_name": "LayoutModel", "model_module": "@jupyter-widgets/base", "model_module_version": "1.2.0", "state": {}}}}
    </script>
    <script type="application/vnd.jupyter.widget-view+json">
    {"version_major": 2, "version_minor": 0, "model_id": "1bc907aa0f694f4d9f18baa851f20839"}
    </script>

    </body>
    </html>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  53.497 seconds)


.. _sphx_glr_download_user-guide_vision_auto_quickstarts_plot_detection_tutorial.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_detection_tutorial.py <plot_detection_tutorial.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_detection_tutorial.ipynb <plot_detection_tutorial.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
